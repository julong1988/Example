!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},n.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=39)}([function(e,t,n){e.exports=n(23)()},function(e,t,n){"use strict";e.exports=n(38)},function(e,t,n){"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(37)},function(e,t,n){"use strict";e.exports=function(e,t,n,r,o,i,a,u){if(!e){var l;if(void 0===t)l=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var c=[n,r,o,i,a,u],s=0;(l=new Error(t.replace(/%s/g,function(){return c[s++]}))).name="Invariant Violation"}throw l.framesToPop=1,l}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.addTodo=void 0;var r,o=n(10);(r=o)&&r.__esModule;t.addTodo=function(e){return{type:"ADD_TODO",title:e,data:new Date}}},function(e,t,n){"use strict";function r(e){return function(){return e}}var o=function(){};o.thatReturns=r,o.thatReturnsFalse=r(!1),o.thatReturnsTrue=r(!0),o.thatReturnsNull=r(null),o.thatReturnsThis=function(){return this},o.thatReturnsArgument=function(e){return e},e.exports=o},function(e,t,n){"use strict";var r=function(e){};e.exports=function(e,t,n,o,i,a,u,l){if(r(t),!e){var c;if(void 0===t)c=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var s=[n,o,i,a,u,l],f=0;(c=new Error(t.replace(/%s/g,function(){return s[f++]}))).name="Invariant Violation"}throw c.framesToPop=1,c}}},function(e,t,n){"use strict";(function(e,r){var o,i=n(15);o="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==e?e:r;var a=Object(i.a)(o);t.a=a}).call(this,n(11),n(30)(e))},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n(0),i=n.n(o),a=i.a.shape({trySubscribe:i.a.func.isRequired,tryUnsubscribe:i.a.func.isRequired,notifyNestedSubs:i.a.func.isRequired,isSubscribed:i.a.func.isRequired}),u=i.a.shape({subscribe:i.a.func.isRequired,dispatch:i.a.func.isRequired,getState:i.a.func.isRequired});function l(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"store",n=arguments[1]||t+"Subscription",o=function(e){function o(n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,o);var i=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,e.call(this,n,r));return i[t]=n.store,i}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(o,e),o.prototype.getChildContext=function(){var e;return(e={})[t]=this[t],e[n]=null,e},o.prototype.render=function(){return r.Children.only(this.props.children)},o}(r.Component);return o.propTypes={store:u.isRequired,children:i.a.element.isRequired},o.childContextTypes=((e={})[t]=u.isRequired,e[n]=a,e),o}var c=l(),s=n(14),f=n.n(s),d=n(3),p=n.n(d);var h=null,m={notify:function(){}};var y=function(){function e(t,n,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.store=t,this.parentSub=n,this.onStateChange=r,this.unsubscribe=null,this.listeners=m}return e.prototype.addNestedSub=function(e){return this.trySubscribe(),this.listeners.subscribe(e)},e.prototype.notifyNestedSubs=function(){this.listeners.notify()},e.prototype.isSubscribed=function(){return Boolean(this.unsubscribe)},e.prototype.trySubscribe=function(){var e,t;this.unsubscribe||(this.unsubscribe=this.parentSub?this.parentSub.addNestedSub(this.onStateChange):this.store.subscribe(this.onStateChange),this.listeners=(e=[],t=[],{clear:function(){t=h,e=h},notify:function(){for(var n=e=t,r=0;r<n.length;r++)n[r]()},get:function(){return t},subscribe:function(n){var r=!0;return t===e&&(t=e.slice()),t.push(n),function(){r&&e!==h&&(r=!1,t===e&&(t=e.slice()),t.splice(t.indexOf(n),1))}}}))},e.prototype.tryUnsubscribe=function(){this.unsubscribe&&(this.unsubscribe(),this.unsubscribe=null,this.listeners.clear(),this.listeners=m)},e}(),v=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};var g=0,b={};function w(){}function E(e){var t,n,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},i=o.getDisplayName,l=void 0===i?function(e){return"ConnectAdvanced("+e+")"}:i,c=o.methodName,s=void 0===c?"connectAdvanced":c,d=o.renderCountProp,h=void 0===d?void 0:d,m=o.shouldHandleStateChanges,E=void 0===m||m,k=o.storeKey,x=void 0===k?"store":k,C=o.withRef,_=void 0!==C&&C,S=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(o,["getDisplayName","methodName","renderCountProp","shouldHandleStateChanges","storeKey","withRef"]),T=x+"Subscription",P=g++,O=((t={})[x]=u,t[T]=a,t),N=((n={})[T]=a,n);return function(t){p()("function"==typeof t,"You must pass a component to the function returned by "+s+". Instead received "+JSON.stringify(t));var n=t.displayName||t.name||"Component",o=l(n),i=v({},S,{getDisplayName:l,methodName:s,renderCountProp:h,shouldHandleStateChanges:E,storeKey:x,withRef:_,displayName:o,wrappedComponentName:n,WrappedComponent:t}),a=function(n){function a(e,t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a);var r=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,n.call(this,e,t));return r.version=P,r.state={},r.renderCount=0,r.store=e[x]||t[x],r.propsMode=Boolean(e[x]),r.setWrappedInstance=r.setWrappedInstance.bind(r),p()(r.store,'Could not find "'+x+'" in either the context or props of "'+o+'". Either wrap the root component in a <Provider>, or explicitly pass "'+x+'" as a prop to "'+o+'".'),r.initSelector(),r.initSubscription(),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(a,n),a.prototype.getChildContext=function(){var e,t=this.propsMode?null:this.subscription;return(e={})[T]=t||this.context[T],e},a.prototype.componentDidMount=function(){E&&(this.subscription.trySubscribe(),this.selector.run(this.props),this.selector.shouldComponentUpdate&&this.forceUpdate())},a.prototype.componentWillReceiveProps=function(e){this.selector.run(e)},a.prototype.shouldComponentUpdate=function(){return this.selector.shouldComponentUpdate},a.prototype.componentWillUnmount=function(){this.subscription&&this.subscription.tryUnsubscribe(),this.subscription=null,this.notifyNestedSubs=w,this.store=null,this.selector.run=w,this.selector.shouldComponentUpdate=!1},a.prototype.getWrappedInstance=function(){return p()(_,"To access the wrapped instance, you need to specify { withRef: true } in the options argument of the "+s+"() call."),this.wrappedInstance},a.prototype.setWrappedInstance=function(e){this.wrappedInstance=e},a.prototype.initSelector=function(){var t=e(this.store.dispatch,i);this.selector=function(e,t){var n={run:function(r){try{var o=e(t.getState(),r);(o!==n.props||n.error)&&(n.shouldComponentUpdate=!0,n.props=o,n.error=null)}catch(e){n.shouldComponentUpdate=!0,n.error=e}}};return n}(t,this.store),this.selector.run(this.props)},a.prototype.initSubscription=function(){if(E){var e=(this.propsMode?this.props:this.context)[T];this.subscription=new y(this.store,e,this.onStateChange.bind(this)),this.notifyNestedSubs=this.subscription.notifyNestedSubs.bind(this.subscription)}},a.prototype.onStateChange=function(){this.selector.run(this.props),this.selector.shouldComponentUpdate?(this.componentDidUpdate=this.notifyNestedSubsOnComponentDidUpdate,this.setState(b)):this.notifyNestedSubs()},a.prototype.notifyNestedSubsOnComponentDidUpdate=function(){this.componentDidUpdate=void 0,this.notifyNestedSubs()},a.prototype.isSubscribed=function(){return Boolean(this.subscription)&&this.subscription.isSubscribed()},a.prototype.addExtraProps=function(e){if(!(_||h||this.propsMode&&this.subscription))return e;var t=v({},e);return _&&(t.ref=this.setWrappedInstance),h&&(t[h]=this.renderCount++),this.propsMode&&this.subscription&&(t[T]=this.subscription),t},a.prototype.render=function(){var e=this.selector;if(e.shouldComponentUpdate=!1,e.error)throw e.error;return Object(r.createElement)(t,this.addExtraProps(e.props))},a}(r.Component);return a.WrappedComponent=t,a.displayName=o,a.childContextTypes=N,a.contextTypes=O,a.propTypes=O,f()(a,t)}}var k=Object.prototype.hasOwnProperty;function x(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}function C(e,t){if(x(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(var o=0;o<n.length;o++)if(!k.call(t,n[o])||!x(e[n[o]],t[n[o]]))return!1;return!0}var _=n(16),S=n(40),T="object"==typeof self&&self&&self.Object===Object&&self,P=(S.a||T||Function("return this")()).Symbol,O=Object.prototype;O.hasOwnProperty,O.toString,P&&P.toStringTag;Object.prototype.toString;P&&P.toStringTag;Object.getPrototypeOf,Object;var N=Function.prototype,R=Object.prototype,M=N.toString;R.hasOwnProperty,M.call(Object);function j(e){return function(t,n){var r=e(t,n);function o(){return r}return o.dependsOnOwnProps=!1,o}}function I(e){return null!==e.dependsOnOwnProps&&void 0!==e.dependsOnOwnProps?Boolean(e.dependsOnOwnProps):1!==e.length}function U(e,t){return function(t,n){n.displayName;var r=function(e,t){return r.dependsOnOwnProps?r.mapToProps(e,t):r.mapToProps(e)};return r.dependsOnOwnProps=!0,r.mapToProps=function(t,n){r.mapToProps=e,r.dependsOnOwnProps=I(e);var o=r(t,n);return"function"==typeof o&&(r.mapToProps=o,r.dependsOnOwnProps=I(o),o=r(t,n)),o},r}}var D=[function(e){return"function"==typeof e?U(e):void 0},function(e){return e?void 0:j(function(e){return{dispatch:e}})},function(e){return e&&"object"==typeof e?j(function(t){return Object(_.bindActionCreators)(e,t)}):void 0}];var F=[function(e){return"function"==typeof e?U(e):void 0},function(e){return e?void 0:j(function(){return{}})}],z=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function A(e,t,n){return z({},n,e,t)}var L=[function(e){return"function"==typeof e?function(e){return function(t,n){n.displayName;var r=n.pure,o=n.areMergedPropsEqual,i=!1,a=void 0;return function(t,n,u){var l=e(t,n,u);return i?r&&o(l,a)||(a=l):(i=!0,a=l),a}}}(e):void 0},function(e){return e?void 0:function(){return A}}];function B(e,t,n,r){return function(o,i){return n(e(o,i),t(r,i),i)}}function W(e,t,n,r,o){var i=o.areStatesEqual,a=o.areOwnPropsEqual,u=o.areStatePropsEqual,l=!1,c=void 0,s=void 0,f=void 0,d=void 0,p=void 0;function h(o,l){var h,m,y=!a(l,s),v=!i(o,c);return c=o,s=l,y&&v?(f=e(c,s),t.dependsOnOwnProps&&(d=t(r,s)),p=n(f,d,s)):y?(e.dependsOnOwnProps&&(f=e(c,s)),t.dependsOnOwnProps&&(d=t(r,s)),p=n(f,d,s)):v?(h=e(c,s),m=!u(h,f),f=h,m&&(p=n(f,d,s)),p):p}return function(o,i){return l?h(o,i):(f=e(c=o,s=i),d=t(r,s),p=n(f,d,s),l=!0,p)}}function V(e,t){var n=t.initMapStateToProps,r=t.initMapDispatchToProps,o=t.initMergeProps,i=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(t,["initMapStateToProps","initMapDispatchToProps","initMergeProps"]),a=n(e,i),u=r(e,i),l=o(e,i);return(i.pure?W:B)(a,u,l,e,i)}var H=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function q(e,t,n){for(var r=t.length-1;r>=0;r--){var o=t[r](e);if(o)return o}return function(t,r){throw new Error("Invalid value of type "+typeof e+" for "+n+" argument when connecting component "+r.wrappedComponentName+".")}}function $(e,t){return e===t}var K=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=e.connectHOC,n=void 0===t?E:t,r=e.mapStateToPropsFactories,o=void 0===r?F:r,i=e.mapDispatchToPropsFactories,a=void 0===i?D:i,u=e.mergePropsFactories,l=void 0===u?L:u,c=e.selectorFactory,s=void 0===c?V:c;return function(e,t,r){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},u=i.pure,c=void 0===u||u,f=i.areStatesEqual,d=void 0===f?$:f,p=i.areOwnPropsEqual,h=void 0===p?C:p,m=i.areStatePropsEqual,y=void 0===m?C:m,v=i.areMergedPropsEqual,g=void 0===v?C:v,b=function(e,t){var n={};for(var r in e)t.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r]);return n}(i,["pure","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","areMergedPropsEqual"]),w=q(e,o,"mapStateToProps"),E=q(t,a,"mapDispatchToProps"),k=q(r,l,"mergeProps");return n(s,H({methodName:"connect",getDisplayName:function(e){return"Connect("+e+")"},shouldHandleStateChanges:Boolean(e),initMapStateToProps:w,initMapDispatchToProps:E,initMergeProps:k,pure:c,areStatesEqual:d,areOwnPropsEqual:h,areStatePropsEqual:y,areMergedPropsEqual:g},b))}}();n.d(t,"Provider",function(){return c}),n.d(t,"createProvider",function(){return l}),n.d(t,"connectAdvanced",function(){return E}),n.d(t,"connect",function(){return K})},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),o=c(n(1)),i=(n(2),c(n(28))),a=c(n(27)),u=c(n(26)),l=c(n(25));function c(e){return e&&e.__esModule?e:{default:e}}var s=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,o.default.Component),r(t,[{key:"render",value:function(){return o.default.createElement("div",{className:"wrap"},o.default.createElement(i.default,null),o.default.createElement(a.default,null),o.default.createElement(u.default,null),o.default.createElement(l.default,null))}}]),t}();t.default=s},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={ADD_TODO:"ADD_TODO",REMOVE_TODO:"REMOVE_TODO",OPEN_POPUP:"OPEN_POPUP",CLOSE_POPUP:"CLOSE_POPUP"}},function(e,t){var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";e.exports={}},function(e,t,n){"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/var r=Object.getOwnPropertySymbols,o=Object.prototype.hasOwnProperty,i=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,a,u=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var c in n=Object(arguments[l]))o.call(n,c)&&(u[c]=n[c]);if(r){a=r(n);for(var s=0;s<a.length;s++)i.call(n,a[s])&&(u[a[s]]=n[a[s]])}}return u}},function(e,t,n){e.exports=function(){"use strict";var e={childContextTypes:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},t={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},n=Object.defineProperty,r=Object.getOwnPropertyNames,o=Object.getOwnPropertySymbols,i=Object.getOwnPropertyDescriptor,a=Object.getPrototypeOf,u=a&&a(Object);return function l(c,s,f){if("string"!=typeof s){if(u){var d=a(s);d&&d!==u&&l(c,d,f)}var p=r(s);o&&(p=p.concat(o(s)));for(var h=0;h<p.length;++h){var m=p[h];if(!(e[m]||t[m]||f&&f[m])){var y=i(s,m);try{n(c,m,y)}catch(e){}}}return c}return c}}()},function(e,t,n){"use strict";function r(e){var t,n=e.Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}n.d(t,"a",function(){return r})},function(e,t,n){"use strict";n.r(t),n.d(t,"createStore",function(){return l}),n.d(t,"combineReducers",function(){return s}),n.d(t,"bindActionCreators",function(){return d}),n.d(t,"applyMiddleware",function(){return h}),n.d(t,"compose",function(){return p}),n.d(t,"__DO_NOT_USE__ActionTypes",function(){return o});var r=n(7),o={INIT:"@@redux/INIT"+Math.random().toString(36).substring(7).split("").join("."),REPLACE:"@@redux/REPLACE"+Math.random().toString(36).substring(7).split("").join(".")},i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e};function u(e){if("object"!==(void 0===e?"undefined":i(e))||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}function l(e,t,n){var a;if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(l)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var c=e,s=t,f=[],d=f,p=!1;function h(){d===f&&(d=f.slice())}function m(){if(p)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return s}function y(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(p)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var t=!0;return h(),d.push(e),function(){if(t){if(p)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");t=!1,h();var n=d.indexOf(e);d.splice(n,1)}}}function v(e){if(!u(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(p)throw new Error("Reducers may not dispatch actions.");try{p=!0,s=c(s,e)}finally{p=!1}for(var t=f=d,n=0;n<t.length;n++){(0,t[n])()}return e}return v({type:o.INIT}),(a={dispatch:v,subscribe:y,getState:m,replaceReducer:function(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");c=e,v({type:o.REPLACE})}})[r.a]=function(){var e,t=y;return(e={subscribe:function(e){if("object"!==(void 0===e?"undefined":i(e))||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(m())}return n(),{unsubscribe:t(n)}}})[r.a]=function(){return this},e},a}function c(e,t){var n=t&&t.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function s(e){for(var t=Object.keys(e),n={},r=0;r<t.length;r++){var i=t[r];0,"function"==typeof e[i]&&(n[i]=e[i])}var a=Object.keys(n);var u=void 0;try{!function(e){Object.keys(e).forEach(function(t){var n=e[t];if(void 0===n(void 0,{type:o.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:"@@redux/PROBE_UNKNOWN_ACTION_"+Math.random().toString(36).substring(7).split("").join(".")}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+o.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')})}(n)}catch(e){u=e}return function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];if(u)throw u;for(var r=!1,o={},i=0;i<a.length;i++){var l=a[i],s=n[l],f=e[l],d=s(f,t);if(void 0===d){var p=c(l,t);throw new Error(p)}o[l]=d,r=r||d!==f}return r?o:e}}function f(e,t){return function(){return t(e.apply(this,arguments))}}function d(e,t){if("function"==typeof e)return f(e,t);if("object"!==(void 0===e?"undefined":i(e))||null===e)throw new Error("bindActionCreators expected an object or a function, instead received "+(null===e?"null":void 0===e?"undefined":i(e))+'. Did you write "import ActionCreators from" instead of "import * as ActionCreators from"?');for(var n=Object.keys(e),r={},o=0;o<n.length;o++){var a=n[o],u=e[a];"function"==typeof u&&(r[a]=f(u,t))}return r}function p(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce(function(e,t){return function(){return e(t.apply(void 0,arguments))}})}function h(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){for(var n=arguments.length,r=Array(n),o=0;o<n;o++)r[o]=arguments[o];var i=e.apply(void 0,r),u=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},l={getState:i.getState,dispatch:function(){return u.apply(void 0,arguments)}},c=t.map(function(e){return e(l)});return u=p.apply(void 0,c)(i.dispatch),a({},i,{dispatch:u})}}}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,r=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(e,t){var o,i=t.trim().replace(/^"(.*)"$/,function(e,t){return t}).replace(/^'(.*)'$/,function(e,t){return t});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(o=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:r+i.replace(/^\.\//,""),"url("+JSON.stringify(o)+")")})}},function(e,t,n){var r,o,i={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===o&&(o=r.apply(this,arguments)),o}),u=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=function(e){return document.querySelector(e)}.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),l=null,c=0,s=[],f=n(17);function d(e,t){for(var n=0;n<e.length;n++){var r=e[n],o=i[r.id];if(o){o.refs++;for(var a=0;a<o.parts.length;a++)o.parts[a](r.parts[a]);for(;a<r.parts.length;a++)o.parts.push(g(r.parts[a],t))}else{var u=[];for(a=0;a<r.parts.length;a++)u.push(g(r.parts[a],t));i[r.id]={id:r.id,refs:1,parts:u}}}}function p(e,t){for(var n=[],r={},o=0;o<e.length;o++){var i=e[o],a=t.base?i[0]+t.base:i[0],u={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(u):n.push(r[a]={id:a,parts:[u]})}return n}function h(e,t){var n=u(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=s[s.length-1];if("top"===e.insertAt)r?r.nextSibling?n.insertBefore(t,r.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),s.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var o=u(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,o)}}function m(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=s.indexOf(e);t>=0&&s.splice(t,1)}function y(e){var t=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),v(t,e.attrs),h(e,t),t}function v(e,t){Object.keys(t).forEach(function(n){e.setAttribute(n,t[n])})}function g(e,t){var n,r,o,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var a=c++;n=l||(l=y(t)),r=E.bind(null,n,a,!1),o=E.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",v(t,e.attrs),h(e,t),t}(t),r=function(e,t,n){var r=n.css,o=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&o;(t.convertToAbsoluteUrls||i)&&(r=f(r));o&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+" */");var a=new Blob([r],{type:"text/css"}),u=e.href;e.href=URL.createObjectURL(a),u&&URL.revokeObjectURL(u)}.bind(null,n,t),o=function(){m(n),n.href&&URL.revokeObjectURL(n.href)}):(n=y(t),r=function(e,t){var n=t.css,r=t.media;r&&e.setAttribute("media",r);if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){m(n)});return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=p(e,t);return d(n,t),function(e){for(var r=[],o=0;o<n.length;o++){var a=n[o];(u=i[a.id]).refs--,r.push(u)}e&&d(p(e,t),t);for(o=0;o<r.length;o++){var u;if(0===(u=r[o]).refs){for(var l=0;l<u.parts.length;l++)u.parts[l]();delete i[u.id]}}}};var b,w=(b=[],function(e,t){return b[e]=t,b.filter(Boolean).join("\n")});function E(e,t,n,r){var o=n?"":r.css;if(e.styleSheet)e.styleSheet.cssText=w(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map(function(t){var n=function(e,t){var n=e[1]||"",r=e[3];if(!r)return n;if(t&&"function"==typeof btoa){var o=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=r.sources.map(function(e){return"/*# sourceURL="+r.sourceRoot+e+" */"});return[n].concat(i).concat([o]).join("\n")}var a;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n}).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];"number"==typeof i&&(r[i]=!0)}for(o=0;o<e.length;o++){var a=e[o];"number"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){(e.exports=n(19)(!1)).push([e.i,'/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */\n\n/* Document\n   ========================================================================== */\n\n/**\n * 1. Correct the line height in all browsers.\n * 2. Prevent adjustments of font size after orientation changes in iOS.\n */\n\nhtml {\n  line-height: 1.15; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n}\n\n/* Sections\n   ========================================================================== */\n\n/**\n * Remove the margin in all browsers.\n */\n\nbody {\n  margin: 0;\n}\n\n/**\n * Correct the font size and margin on `h1` elements within `section` and\n * `article` contexts in Chrome, Firefox, and Safari.\n */\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0;\n}\n\n/* Grouping content\n   ========================================================================== */\n\n/**\n * 1. Add the correct box sizing in Firefox.\n * 2. Show the overflow in Edge and IE.\n */\n\nhr {\n  box-sizing: content-box; /* 1 */\n  height: 0; /* 1 */\n  overflow: visible; /* 2 */\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\npre {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/* Text-level semantics\n   ========================================================================== */\n\n/**\n * Remove the gray background on active links in IE 10.\n */\n\na {\n  background-color: transparent;\n}\n\n/**\n * 1. Remove the bottom border in Chrome 57-\n * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n */\n\nabbr[title] {\n  border-bottom: none; /* 1 */\n  text-decoration: underline; /* 2 */\n  text-decoration: underline dotted; /* 2 */\n}\n\n/**\n * Add the correct font weight in Chrome, Edge, and Safari.\n */\n\nb,\nstrong {\n  font-weight: bolder;\n}\n\n/**\n * 1. Correct the inheritance and scaling of font size in all browsers.\n * 2. Correct the odd `em` font sizing in all browsers.\n */\n\ncode,\nkbd,\nsamp {\n  font-family: monospace, monospace; /* 1 */\n  font-size: 1em; /* 2 */\n}\n\n/**\n * Add the correct font size in all browsers.\n */\n\nsmall {\n  font-size: 80%;\n}\n\n/**\n * Prevent `sub` and `sup` elements from affecting the line height in\n * all browsers.\n */\n\nsub,\nsup {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline;\n}\n\nsub {\n  bottom: -0.25em;\n}\n\nsup {\n  top: -0.5em;\n}\n\n/* Embedded content\n   ========================================================================== */\n\n/**\n * Remove the border on images inside links in IE 10.\n */\n\nimg {\n  border-style: none;\n}\n\n/* Forms\n   ========================================================================== */\n\n/**\n * 1. Change the font styles in all browsers.\n * 2. Remove the margin in Firefox and Safari.\n */\n\nbutton,\ninput,\noptgroup,\nselect,\ntextarea {\n  font-family: inherit; /* 1 */\n  font-size: 100%; /* 1 */\n  line-height: 1.15; /* 1 */\n  margin: 0; /* 2 */\n}\n\n/**\n * Show the overflow in IE.\n * 1. Show the overflow in Edge.\n */\n\nbutton,\ninput { /* 1 */\n  overflow: visible;\n}\n\n/**\n * Remove the inheritance of text transform in Edge, Firefox, and IE.\n * 1. Remove the inheritance of text transform in Firefox.\n */\n\nbutton,\nselect { /* 1 */\n  text-transform: none;\n}\n\n/**\n * Correct the inability to style clickable types in iOS and Safari.\n */\n\nbutton,\n[type="button"],\n[type="reset"],\n[type="submit"] {\n  -webkit-appearance: button;\n}\n\n/**\n * Remove the inner border and padding in Firefox.\n */\n\nbutton::-moz-focus-inner,\n[type="button"]::-moz-focus-inner,\n[type="reset"]::-moz-focus-inner,\n[type="submit"]::-moz-focus-inner {\n  border-style: none;\n  padding: 0;\n}\n\n/**\n * Restore the focus styles unset by the previous rule.\n */\n\nbutton:-moz-focusring,\n[type="button"]:-moz-focusring,\n[type="reset"]:-moz-focusring,\n[type="submit"]:-moz-focusring {\n  outline: 1px dotted ButtonText;\n}\n\n/**\n * Correct the padding in Firefox.\n */\n\nfieldset {\n  padding: 0.35em 0.75em 0.625em;\n}\n\n/**\n * 1. Correct the text wrapping in Edge and IE.\n * 2. Correct the color inheritance from `fieldset` elements in IE.\n * 3. Remove the padding so developers are not caught out when they zero out\n *    `fieldset` elements in all browsers.\n */\n\nlegend {\n  box-sizing: border-box; /* 1 */\n  color: inherit; /* 2 */\n  display: table; /* 1 */\n  max-width: 100%; /* 1 */\n  padding: 0; /* 3 */\n  white-space: normal; /* 1 */\n}\n\n/**\n * Add the correct vertical alignment in Chrome, Firefox, and Opera.\n */\n\nprogress {\n  vertical-align: baseline;\n}\n\n/**\n * Remove the default vertical scrollbar in IE 10+.\n */\n\ntextarea {\n  overflow: auto;\n}\n\n/**\n * 1. Add the correct box sizing in IE 10.\n * 2. Remove the padding in IE 10.\n */\n\n[type="checkbox"],\n[type="radio"] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n}\n\n/**\n * Correct the cursor style of increment and decrement buttons in Chrome.\n */\n\n[type="number"]::-webkit-inner-spin-button,\n[type="number"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n/**\n * 1. Correct the odd appearance in Chrome and Safari.\n * 2. Correct the outline style in Safari.\n */\n\n[type="search"] {\n  -webkit-appearance: textfield; /* 1 */\n  outline-offset: -2px; /* 2 */\n}\n\n/**\n * Remove the inner padding in Chrome and Safari on macOS.\n */\n\n[type="search"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * 1. Correct the inability to style clickable types in iOS and Safari.\n * 2. Change font properties to `inherit` in Safari.\n */\n\n::-webkit-file-upload-button {\n  -webkit-appearance: button; /* 1 */\n  font: inherit; /* 2 */\n}\n\n/* Interactive\n   ========================================================================== */\n\n/*\n * Add the correct display in Edge, IE 10+, and Firefox.\n */\n\ndetails {\n  display: block;\n}\n\n/*\n * Add the correct display in all browsers.\n */\n\nsummary {\n  display: list-item;\n}\n\n/* Misc\n   ========================================================================== */\n\n/**\n * Add the correct display in IE 10+.\n */\n\ntemplate {\n  display: none;\n}\n\n/**\n * Add the correct display in IE 10.\n */\n\n[hidden] {\n  display: none;\n}\n',""])},function(e,t,n){var r=n(20);"string"==typeof r&&(r=[[e.i,r,""]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(18)(r,o);r.locals&&(e.exports=r.locals)},function(e,t,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,t,n){"use strict";var r=n(5),o=n(6),i=n(22);e.exports=function(){function e(e,t,n,r,a,u){u!==i&&o(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t};return n.checkPropTypes=r,n.PropTypes=n,n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=n(8),i=n(9),a=(r=i)&&r.__esModule?r:{default:r};n(4);t.default=(0,o.connect)(function(e){return{title:e.counter,date:e.date}},function(e){return{addTodo:function(){var t;return e((t=actions).addTodo.apply(t,arguments))}}})(a.default)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(){return React.createElement("div",{className:"add-form"},"formpage")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default=function(){return React.createElement("div",{className:"footer-wraper"},"Footer tip")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=(r=i)&&r.__esModule?r:{default:r};n(2);var u=function(e){function t(){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.default.Component),o(t,[{key:"menu",value:function(){console.log("menuevent")}},{key:"add",value:function(){console.log("addevent")}},{key:"render",value:function(){return a.default.createElement("div",{className:"body-wraper"},a.default.createElement("ul",null))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r,o=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),i=n(1),a=(r=i)&&r.__esModule?r:{default:r};n(2),n(4);var u=function(e){function t(e){return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e))}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,a.default.Component),o(t,[{key:"menu",value:function(){console.log("menuevent")}},{key:"add",value:function(){console.log(this),console.log(this.context),console.log(this.props)}},{key:"render",value:function(){var e=this;return a.default.createElement("div",{className:"header-wraper"},a.default.createElement("button",{className:"menu",onClick:function(){return e.menu()}},"三"),a.default.createElement("h1",null,"title"),a.default.createElement("button",{className:"add",onClick:function(){return e.add()}},"+"))}}]),t}();t.default=u},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.popup=t.todo=void 0;var r,o=n(10),i=(r=o)&&r.__esModule?r:{default:r};t.todo=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments[1];switch(t.type){case i.default.ADD_TODO:return[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(e),[{title:t.title,date:t.date}]);case i.default.REMOVE_TODO:return e.filter(function(e){return e.id!==t.id});default:return e}},t.popup=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};switch(arguments[1].type){case i.default.OPEN_POPUP:return{visible:!0};case i.default.CLOSE_POPUP:return{visible:fasle};default:return e}}},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,n){"use strict";e.exports=function(e){var t=(e?e.ownerDocument||e:document).defaultView||window;return!(!e||!("function"==typeof t.Node?e instanceof t.Node:"object"==typeof e&&"number"==typeof e.nodeType&&"string"==typeof e.nodeName))}},function(e,t,n){"use strict";var r=n(31);e.exports=function(e){return r(e)&&3==e.nodeType}},function(e,t,n){"use strict";var r=n(32);e.exports=function e(t,n){return!(!t||!n)&&(t===n||!r(t)&&(r(n)?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}},function(e,t,n){"use strict";var r=Object.prototype.hasOwnProperty;function o(e,t){return e===t?0!==e||0!==t||1/e==1/t:e!=e&&t!=t}e.exports=function(e,t){if(o(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),i=Object.keys(t);if(n.length!==i.length)return!1;for(var a=0;a<n.length;a++)if(!r.call(t,n[a])||!o(e[n[a]],t[n[a]]))return!1;return!0}},function(e,t,n){"use strict";e.exports=function(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}},function(e,t,n){"use strict";var r=!("undefined"==typeof window||!window.document||!window.document.createElement),o={canUseDOM:r,canUseWorkers:"undefined"!=typeof Worker,canUseEventListeners:r&&!(!window.addEventListener&&!window.attachEvent),canUseViewport:r&&!!window.screen,isInWorker:!r};e.exports=o},function(e,t,n){"use strict";
/** @license React v16.4.0
 * react-dom.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(6),o=n(1),i=n(36),a=n(13),u=n(5),l=n(35),c=n(34),s=n(33),f=n(12);function d(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,o=0;o<t;o++)n+="&args[]="+encodeURIComponent(arguments[o+1]);r(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}o||d("227");var p={_caughtError:null,_hasCaughtError:!1,_rethrowError:null,_hasRethrowError:!1,invokeGuardedCallback:function(e,t,n,r,o,i,a,u,l){(function(e,t,n,r,o,i,a,u,l){this._hasCaughtError=!1,this._caughtError=null;var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this._caughtError=e,this._hasCaughtError=!0}}).apply(p,arguments)},invokeGuardedCallbackAndCatchFirstError:function(e,t,n,r,o,i,a,u,l){if(p.invokeGuardedCallback.apply(this,arguments),p.hasCaughtError()){var c=p.clearCaughtError();p._hasRethrowError||(p._hasRethrowError=!0,p._rethrowError=c)}},rethrowCaughtError:function(){return function(){if(p._hasRethrowError){var e=p._rethrowError;throw p._rethrowError=null,p._hasRethrowError=!1,e}}.apply(p,arguments)},hasCaughtError:function(){return p._hasCaughtError},clearCaughtError:function(){if(p._hasCaughtError){var e=p._caughtError;return p._caughtError=null,p._hasCaughtError=!1,e}d("198")}};var h=null,m={};function y(){if(h)for(var e in m){var t=m[e],n=h.indexOf(e);if(-1<n||d("96",e),!g[n])for(var r in t.extractEvents||d("97",e),g[n]=t,n=t.eventTypes){var o=void 0,i=n[r],a=t,u=r;b.hasOwnProperty(u)&&d("99",u),b[u]=i;var l=i.phasedRegistrationNames;if(l){for(o in l)l.hasOwnProperty(o)&&v(l[o],a,u);o=!0}else i.registrationName?(v(i.registrationName,a,u),o=!0):o=!1;o||d("98",r,e)}}}function v(e,t,n){w[e]&&d("100",e),w[e]=t,E[e]=t.eventTypes[n].dependencies}var g=[],b={},w={},E={};function k(e){h&&d("101"),h=Array.prototype.slice.call(e),y()}function x(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];m.hasOwnProperty(t)&&m[t]===r||(m[t]&&d("102",t),m[t]=r,n=!0)}n&&y()}var C={plugins:g,eventNameDispatchConfigs:b,registrationNameModules:w,registrationNameDependencies:E,possibleRegistrationNames:null,injectEventPluginOrder:k,injectEventPluginsByName:x},_=null,S=null,T=null;function P(e,t,n,r){t=e.type||"unknown-event",e.currentTarget=T(r),p.invokeGuardedCallbackAndCatchFirstError(t,n,void 0,e),e.currentTarget=null}function O(e,t){return null==t&&d("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function N(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var R=null;function M(e,t){if(e){var n=e._dispatchListeners,r=e._dispatchInstances;if(Array.isArray(n))for(var o=0;o<n.length&&!e.isPropagationStopped();o++)P(e,t,n[o],r[o]);else n&&P(e,t,n,r);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}function j(e){return M(e,!0)}function I(e){return M(e,!1)}var U={injectEventPluginOrder:k,injectEventPluginsByName:x};function D(e,t){var n=e.stateNode;if(!n)return null;var r=_(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!=typeof n&&d("231",t,typeof n),n)}function F(e,t){null!==e&&(R=O(R,e)),e=R,R=null,e&&(N(e,t?j:I),R&&d("95"),p.rethrowCaughtError())}function z(e,t,n,r){for(var o=null,i=0;i<g.length;i++){var a=g[i];a&&(a=a.extractEvents(e,t,n,r))&&(o=O(o,a))}F(o,!1)}var A={injection:U,getListener:D,runEventsInBatch:F,runExtractedEventsInBatch:z},L=Math.random().toString(36).slice(2),B="__reactInternalInstance$"+L,W="__reactEventHandlers$"+L;function V(e){if(e[B])return e[B];for(;!e[B];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[B]).tag||6===e.tag?e:null}function H(e){if(5===e.tag||6===e.tag)return e.stateNode;d("33")}function q(e){return e[W]||null}var $={precacheFiberNode:function(e,t){t[B]=e},getClosestInstanceFromNode:V,getInstanceFromNode:function(e){return!(e=e[B])||5!==e.tag&&6!==e.tag?null:e},getNodeFromInstance:H,getFiberCurrentPropsFromNode:q,updateFiberProps:function(e,t){e[W]=t}};function K(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function Q(e,t,n){for(var r=[];e;)r.push(e),e=K(e);for(e=r.length;0<e--;)t(r[e],"captured",n);for(e=0;e<r.length;e++)t(r[e],"bubbled",n)}function Y(e,t,n){(t=D(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function G(e){e&&e.dispatchConfig.phasedRegistrationNames&&Q(e._targetInst,Y,e)}function X(e){if(e&&e.dispatchConfig.phasedRegistrationNames){var t=e._targetInst;Q(t=t?K(t):null,Y,e)}}function J(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=D(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=O(n._dispatchListeners,t),n._dispatchInstances=O(n._dispatchInstances,e))}function Z(e){e&&e.dispatchConfig.registrationName&&J(e._targetInst,null,e)}function ee(e){N(e,G)}function te(e,t,n,r){if(n&&r)e:{for(var o=n,i=r,a=0,u=o;u;u=K(u))a++;u=0;for(var l=i;l;l=K(l))u++;for(;0<a-u;)o=K(o),a--;for(;0<u-a;)i=K(i),u--;for(;a--;){if(o===i||o===i.alternate)break e;o=K(o),i=K(i)}o=null}else o=null;for(i=o,o=[];n&&n!==i&&(null===(a=n.alternate)||a!==i);)o.push(n),n=K(n);for(n=[];r&&r!==i&&(null===(a=r.alternate)||a!==i);)n.push(r),r=K(r);for(r=0;r<o.length;r++)J(o[r],"bubbled",e);for(e=n.length;0<e--;)J(n[e],"captured",t)}var ne={accumulateTwoPhaseDispatches:ee,accumulateTwoPhaseDispatchesSkipTarget:function(e){N(e,X)},accumulateEnterLeaveDispatches:te,accumulateDirectDispatches:function(e){N(e,Z)}};function re(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n["ms"+e]="MS"+t,n["O"+e]="o"+t.toLowerCase(),n}var oe={animationend:re("Animation","AnimationEnd"),animationiteration:re("Animation","AnimationIteration"),animationstart:re("Animation","AnimationStart"),transitionend:re("Transition","TransitionEnd")},ie={},ae={};function ue(e){if(ie[e])return ie[e];if(!oe[e])return e;var t,n=oe[e];for(t in n)if(n.hasOwnProperty(t)&&t in ae)return ie[e]=n[t];return e}i.canUseDOM&&(ae=document.createElement("div").style,"AnimationEvent"in window||(delete oe.animationend.animation,delete oe.animationiteration.animation,delete oe.animationstart.animation),"TransitionEvent"in window||delete oe.transitionend.transition);var le=ue("animationend"),ce=ue("animationiteration"),se=ue("animationstart"),fe=ue("transitionend"),de="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),pe=null;function he(){return!pe&&i.canUseDOM&&(pe="textContent"in document.documentElement?"textContent":"innerText"),pe}var me={_root:null,_startText:null,_fallbackText:null};function ye(){if(me._fallbackText)return me._fallbackText;var e,t,n=me._startText,r=n.length,o=ve(),i=o.length;for(e=0;e<r&&n[e]===o[e];e++);var a=r-e;for(t=1;t<=a&&n[r-t]===o[i-t];t++);return me._fallbackText=o.slice(e,1<t?1-t:void 0),me._fallbackText}function ve(){return"value"in me._root?me._root.value:me._root[he()]}var ge="dispatchConfig _targetInst nativeEvent isDefaultPrevented isPropagationStopped _dispatchListeners _dispatchInstances".split(" "),be={type:null,target:null,currentTarget:u.thatReturnsNull,eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null};function we(e,t,n,r){for(var o in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(o)&&((t=e[o])?this[o]=t(n):"target"===o?this.target=r:this[o]=n[o]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?u.thatReturnsTrue:u.thatReturnsFalse,this.isPropagationStopped=u.thatReturnsFalse,this}function Ee(e,t,n,r){if(this.eventPool.length){var o=this.eventPool.pop();return this.call(o,e,t,n,r),o}return new this(e,t,n,r)}function ke(e){e instanceof this||d("223"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function xe(e){e.eventPool=[],e.getPooled=Ee,e.release=ke}a(we.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=u.thatReturnsTrue)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=u.thatReturnsTrue)},persist:function(){this.isPersistent=u.thatReturnsTrue},isPersistent:u.thatReturnsFalse,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;for(t=0;t<ge.length;t++)this[ge[t]]=null}}),we.Interface=be,we.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return a(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=a({},r.Interface,e),n.extend=r.extend,xe(n),n},xe(we);var Ce=we.extend({data:null}),_e=we.extend({data:null}),Se=[9,13,27,32],Te=i.canUseDOM&&"CompositionEvent"in window,Pe=null;i.canUseDOM&&"documentMode"in document&&(Pe=document.documentMode);var Oe=i.canUseDOM&&"TextEvent"in window&&!Pe,Ne=i.canUseDOM&&(!Te||Pe&&8<Pe&&11>=Pe),Re=String.fromCharCode(32),Me={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},je=!1;function Ie(e,t){switch(e){case"keyup":return-1!==Se.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ue(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var De=!1;var Fe={eventTypes:Me,extractEvents:function(e,t,n,r){var o=void 0,i=void 0;if(Te)e:{switch(e){case"compositionstart":o=Me.compositionStart;break e;case"compositionend":o=Me.compositionEnd;break e;case"compositionupdate":o=Me.compositionUpdate;break e}o=void 0}else De?Ie(e,n)&&(o=Me.compositionEnd):"keydown"===e&&229===n.keyCode&&(o=Me.compositionStart);return o?(Ne&&(De||o!==Me.compositionStart?o===Me.compositionEnd&&De&&(i=ye()):(me._root=r,me._startText=ve(),De=!0)),o=Ce.getPooled(o,t,n,r),i?o.data=i:null!==(i=Ue(n))&&(o.data=i),ee(o),i=o):i=null,(e=Oe?function(e,t){switch(e){case"compositionend":return Ue(t);case"keypress":return 32!==t.which?null:(je=!0,Re);case"textInput":return(e=t.data)===Re&&je?null:e;default:return null}}(e,n):function(e,t){if(De)return"compositionend"===e||!Te&&Ie(e,t)?(e=ye(),me._root=null,me._startText=null,me._fallbackText=null,De=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ne?null:t.data;default:return null}}(e,n))?((t=_e.getPooled(Me.beforeInput,t,n,r)).data=e,ee(t)):t=null,null===i?t:null===t?i:[i,t]}},ze=null,Ae={injectFiberControlledHostComponent:function(e){ze=e}},Le=null,Be=null;function We(e){if(e=S(e)){ze&&"function"==typeof ze.restoreControlledState||d("194");var t=_(e.stateNode);ze.restoreControlledState(e.stateNode,e.type,t)}}function Ve(e){Le?Be?Be.push(e):Be=[e]:Le=e}function He(){return null!==Le||null!==Be}function qe(){if(Le){var e=Le,t=Be;if(Be=Le=null,We(e),t)for(e=0;e<t.length;e++)We(t[e])}}var $e={injection:Ae,enqueueStateRestore:Ve,needsStateRestore:He,restoreStateIfNeeded:qe};function Ke(e,t){return e(t)}function Qe(e,t,n){return e(t,n)}function Ye(){}var Ge=!1;function Xe(e,t){if(Ge)return e(t);Ge=!0;try{return Ke(e,t)}finally{Ge=!1,He()&&(Ye(),qe())}}var Je={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Ze(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Je[e.type]:"textarea"===t}function et(e){return(e=e.target||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function tt(e,t){return!(!i.canUseDOM||t&&!("addEventListener"in document))&&((t=(e="on"+e)in document)||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"==typeof t[e]),t)}function nt(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function rt(e){e._valueTracker||(e._valueTracker=function(e){var t=nt(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var o=n.get,i=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return o.call(this)},set:function(e){r=""+e,i.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function ot(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=nt(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var it=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,at="function"==typeof Symbol&&Symbol.for,ut=at?Symbol.for("react.element"):60103,lt=at?Symbol.for("react.portal"):60106,ct=at?Symbol.for("react.fragment"):60107,st=at?Symbol.for("react.strict_mode"):60108,ft=at?Symbol.for("react.profiler"):60114,dt=at?Symbol.for("react.provider"):60109,pt=at?Symbol.for("react.context"):60110,ht=at?Symbol.for("react.async_mode"):60111,mt=at?Symbol.for("react.forward_ref"):60112,yt=at?Symbol.for("react.timeout"):60113,vt="function"==typeof Symbol&&Symbol.iterator;function gt(e){return null===e||void 0===e?null:"function"==typeof(e=vt&&e[vt]||e["@@iterator"])?e:null}function bt(e){var t=e.type;if("function"==typeof t)return t.displayName||t.name;if("string"==typeof t)return t;switch(t){case ht:return"AsyncMode";case pt:return"Context.Consumer";case ct:return"ReactFragment";case lt:return"ReactPortal";case ft:return"Profiler("+e.pendingProps.id+")";case dt:return"Context.Provider";case st:return"StrictMode";case yt:return"Timeout"}if("object"==typeof t&&null!==t)switch(t.$$typeof){case mt:return""!==(e=t.render.displayName||t.render.name||"")?"ForwardRef("+e+")":"ForwardRef"}return null}function wt(e){var t="";do{e:switch(e.tag){case 0:case 1:case 2:case 5:var n=e._debugOwner,r=e._debugSource,o=bt(e),i=null;n&&(i=bt(n)),n=r,o="\n    in "+(o||"Unknown")+(n?" (at "+n.fileName.replace(/^.*[\\\/]/,"")+":"+n.lineNumber+")":i?" (created by "+i+")":"");break e;default:o=""}t+=o,e=e.return}while(e);return t}var Et=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,kt={},xt={};function Ct(e,t,n,r,o){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=o,this.mustUseProperty=n,this.propertyName=e,this.type=t}var _t={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){_t[e]=new Ct(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];_t[t]=new Ct(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){_t[e]=new Ct(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","preserveAlpha"].forEach(function(e){_t[e]=new Ct(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){_t[e]=new Ct(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){_t[e]=new Ct(e,3,!0,e.toLowerCase(),null)}),["capture","download"].forEach(function(e){_t[e]=new Ct(e,4,!1,e.toLowerCase(),null)}),["cols","rows","size","span"].forEach(function(e){_t[e]=new Ct(e,6,!1,e.toLowerCase(),null)}),["rowSpan","start"].forEach(function(e){_t[e]=new Ct(e,5,!1,e.toLowerCase(),null)});var St=/[\-:]([a-z])/g;function Tt(e){return e[1].toUpperCase()}function Pt(e,t,n,r){var o=_t.hasOwnProperty(t)?_t[t]:null;(null!==o?0===o.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||void 0===t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,o,r)&&(n=null),r||null===o?function(e){return!!xt.hasOwnProperty(e)||!kt.hasOwnProperty(e)&&(Et.test(e)?xt[e]=!0:(kt[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):o.mustUseProperty?e[o.propertyName]=null===n?3!==o.type&&"":n:(t=o.attributeName,r=o.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(o=o.type)||4===o&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function Ot(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function Nt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=Ut(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function Rt(e,t){null!=(t=t.checked)&&Pt(e,"checked",t,!1)}function Mt(e,t){Rt(e,t);var n=Ut(t.value);null!=n&&("number"===t.type?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n)),t.hasOwnProperty("value")?It(e,t.type,n):t.hasOwnProperty("defaultValue")&&It(e,t.type,Ut(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function jt(e,t){(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue"))&&(""===e.value&&(e.value=""+e._wrapperState.initialValue),e.defaultValue=""+e._wrapperState.initialValue),""!==(t=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!e.defaultChecked,""!==t&&(e.name=t)}function It(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function Ut(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(St,Tt);_t[t]=new Ct(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(St,Tt);_t[t]=new Ct(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(St,Tt);_t[t]=new Ct(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),_t.tabIndex=new Ct("tabIndex",1,!1,"tabindex",null);var Dt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function Ft(e,t,n){return(e=we.getPooled(Dt.change,e,t,n)).type="change",Ve(n),ee(e),e}var zt=null,At=null;function Lt(e){F(e,!1)}function Bt(e){if(ot(H(e)))return e}function Wt(e,t){if("change"===e)return t}var Vt=!1;function Ht(){zt&&(zt.detachEvent("onpropertychange",qt),At=zt=null)}function qt(e){"value"===e.propertyName&&Bt(At)&&Xe(Lt,e=Ft(At,e,et(e)))}function $t(e,t,n){"focus"===e?(Ht(),At=n,(zt=t).attachEvent("onpropertychange",qt)):"blur"===e&&Ht()}function Kt(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Bt(At)}function Qt(e,t){if("click"===e)return Bt(t)}function Yt(e,t){if("input"===e||"change"===e)return Bt(t)}i.canUseDOM&&(Vt=tt("input")&&(!document.documentMode||9<document.documentMode));var Gt={eventTypes:Dt,_isInputEventSupported:Vt,extractEvents:function(e,t,n,r){var o=t?H(t):window,i=void 0,a=void 0,u=o.nodeName&&o.nodeName.toLowerCase();if("select"===u||"input"===u&&"file"===o.type?i=Wt:Ze(o)?Vt?i=Yt:(i=Kt,a=$t):(u=o.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(i=Qt),i&&(i=i(e,t)))return Ft(i,n,r);a&&a(e,o,t),"blur"===e&&null!=t&&(e=t._wrapperState||o._wrapperState)&&e.controlled&&"number"===o.type&&It(o,"number",o.value)}},Xt=we.extend({view:null,detail:null}),Jt={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function Zt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Jt[e])&&!!t[e]}function en(){return Zt}var tn=Xt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:en,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)}}),nn=tn.extend({pointerId:null,width:null,height:null,pressure:null,tiltX:null,tiltY:null,pointerType:null,isPrimary:null}),rn={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},on={eventTypes:rn,extractEvents:function(e,t,n,r){var o="mouseover"===e||"pointerover"===e,i="mouseout"===e||"pointerout"===e;if(o&&(n.relatedTarget||n.fromElement)||!i&&!o)return null;if(o=r.window===r?r:(o=r.ownerDocument)?o.defaultView||o.parentWindow:window,i?(i=t,t=(t=n.relatedTarget||n.toElement)?V(t):null):i=null,i===t)return null;var a=void 0,u=void 0,l=void 0,c=void 0;return"mouseout"===e||"mouseover"===e?(a=tn,u=rn.mouseLeave,l=rn.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(a=nn,u=rn.pointerLeave,l=rn.pointerEnter,c="pointer"),e=null==i?o:H(i),o=null==t?o:H(t),(u=a.getPooled(u,i,n,r)).type=c+"leave",u.target=e,u.relatedTarget=o,(n=a.getPooled(l,t,n,r)).type=c+"enter",n.target=o,n.relatedTarget=e,te(u,n,i,t),[u,n]}};function an(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!=(2&t.effectTag))return 1;for(;t.return;)if(0!=(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function un(e){2!==an(e)&&d("188")}function ln(e){var t=e.alternate;if(!t)return 3===(t=an(e))&&d("188"),1===t?null:e;for(var n=e,r=t;;){var o=n.return,i=o?o.alternate:null;if(!o||!i)break;if(o.child===i.child){for(var a=o.child;a;){if(a===n)return un(o),e;if(a===r)return un(o),t;a=a.sibling}d("188")}if(n.return!==r.return)n=o,r=i;else{a=!1;for(var u=o.child;u;){if(u===n){a=!0,n=o,r=i;break}if(u===r){a=!0,r=o,n=i;break}u=u.sibling}if(!a){for(u=i.child;u;){if(u===n){a=!0,n=i,r=o;break}if(u===r){a=!0,r=i,n=o;break}u=u.sibling}a||d("189")}}n.alternate!==r&&d("190")}return 3!==n.tag&&d("188"),n.stateNode.current===n?e:t}function cn(e){if(!(e=ln(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var sn=we.extend({animationName:null,elapsedTime:null,pseudoElement:null}),fn=we.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),dn=Xt.extend({relatedTarget:null});function pn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var hn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},mn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},yn=Xt.extend({key:function(e){if(e.key){var t=hn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=pn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?mn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:en,charCode:function(e){return"keypress"===e.type?pn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?pn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),vn=tn.extend({dataTransfer:null}),gn=Xt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:en}),bn=we.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),wn=tn.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),En=[["abort","abort"],[le,"animationEnd"],[ce,"animationIteration"],[se,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[fe,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],kn={},xn={};function Cn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},kn[e]=t,xn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){Cn(e,!0)}),En.forEach(function(e){Cn(e,!1)});var _n={eventTypes:kn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=xn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var o=xn[e];if(!o)return null;switch(e){case"keypress":if(0===pn(n))return null;case"keydown":case"keyup":e=yn;break;case"blur":case"focus":e=dn;break;case"click":if(2===n.button)return null;case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=tn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=gn;break;case le:case ce:case se:e=sn;break;case fe:e=bn;break;case"scroll":e=Xt;break;case"wheel":e=wn;break;case"copy":case"cut":case"paste":e=fn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=nn;break;default:e=we}return ee(t=e.getPooled(o,t,n,r)),t}},Sn=_n.isInteractiveTopLevelEventType,Tn=[];function Pn(e){var t=e.targetInst;do{if(!t){e.ancestors.push(t);break}var n;for(n=t;n.return;)n=n.return;if(!(n=3!==n.tag?null:n.stateNode.containerInfo))break;e.ancestors.push(t),t=V(n)}while(t);for(n=0;n<e.ancestors.length;n++)t=e.ancestors[n],z(e.topLevelType,t,e.nativeEvent,et(e.nativeEvent))}var On=!0;function Nn(e){On=!!e}function Rn(e,t){if(!t)return null;var n=(Sn(e)?jn:In).bind(null,e);t.addEventListener(e,n,!1)}function Mn(e,t){if(!t)return null;var n=(Sn(e)?jn:In).bind(null,e);t.addEventListener(e,n,!0)}function jn(e,t){Qe(In,e,t)}function In(e,t){if(On){var n=et(t);if(null===(n=V(n))||"number"!=typeof n.tag||2===an(n)||(n=null),Tn.length){var r=Tn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Xe(Pn,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Tn.length&&Tn.push(e)}}}var Un={get _enabled(){return On},setEnabled:Nn,isEnabled:function(){return On},trapBubbledEvent:Rn,trapCapturedEvent:Mn,dispatchEvent:In},Dn={},Fn=0,zn="_reactListenersID"+(""+Math.random()).slice(2);function An(e){return Object.prototype.hasOwnProperty.call(e,zn)||(e[zn]=Fn++,Dn[e[zn]]={}),Dn[e[zn]]}function Ln(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Bn(e,t){var n,r=Ln(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Ln(r)}}function Wn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&"text"===e.type||"textarea"===t||"true"===e.contentEditable)}var Vn=i.canUseDOM&&"documentMode"in document&&11>=document.documentMode,Hn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu focus keydown keyup mousedown mouseup selectionchange".split(" ")}},qn=null,$n=null,Kn=null,Qn=!1;function Yn(e,t){if(Qn||null==qn||qn!==l())return null;var n=qn;return"selectionStart"in n&&Wn(n)?n={start:n.selectionStart,end:n.selectionEnd}:window.getSelection?n={anchorNode:(n=window.getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset}:n=void 0,Kn&&c(Kn,n)?null:(Kn=n,(e=we.getPooled(Hn.select,$n,e,t)).type="select",e.target=qn,ee(e),e)}var Gn={eventTypes:Hn,extractEvents:function(e,t,n,r){var o,i=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(o=!i)){e:{i=An(i),o=E.onSelect;for(var a=0;a<o.length;a++){var u=o[a];if(!i.hasOwnProperty(u)||!i[u]){i=!1;break e}}i=!0}o=!i}if(o)return null;switch(i=t?H(t):window,e){case"focus":(Ze(i)||"true"===i.contentEditable)&&(qn=i,$n=t,Kn=null);break;case"blur":Kn=$n=qn=null;break;case"mousedown":Qn=!0;break;case"contextmenu":case"mouseup":return Qn=!1,Yn(n,r);case"selectionchange":if(Vn)break;case"keydown":case"keyup":return Yn(n,r)}return null}};U.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin TapEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),_=$.getFiberCurrentPropsFromNode,S=$.getInstanceFromNode,T=$.getNodeFromInstance,U.injectEventPluginsByName({SimpleEventPlugin:_n,EnterLeaveEventPlugin:on,ChangeEventPlugin:Gt,SelectEventPlugin:Gn,BeforeInputEventPlugin:Fe});var Xn=void 0;Xn="object"==typeof performance&&"function"==typeof performance.now?function(){return performance.now()}:function(){return Date.now()};var Jn=void 0,Zn=void 0;if(i.canUseDOM){var er=[],tr=0,nr={},rr=-1,or=!1,ir=!1,ar=0,ur=33,lr=33,cr={didTimeout:!1,timeRemaining:function(){var e=ar-Xn();return 0<e?e:0}},sr=function(e,t){if(nr[t])try{e(cr)}finally{delete nr[t]}},fr="__reactIdleCallback$"+Math.random().toString(36).slice(2);window.addEventListener("message",function(e){if(e.source===window&&e.data===fr&&(or=!1,0!==er.length)){if(0!==er.length&&(e=Xn(),!(-1===rr||rr>e))){rr=-1,cr.didTimeout=!0;for(var t=0,n=er.length;t<n;t++){var r=er[t],o=r.timeoutTime;-1!==o&&o<=e?sr(r.scheduledCallback,r.callbackId):-1!==o&&(-1===rr||o<rr)&&(rr=o)}}for(e=Xn();0<ar-e&&0<er.length;)e=er.shift(),cr.didTimeout=!1,sr(e.scheduledCallback,e.callbackId),e=Xn();0<er.length&&!ir&&(ir=!0,requestAnimationFrame(dr))}},!1);var dr=function(e){ir=!1;var t=e-ar+lr;t<lr&&ur<lr?(8>t&&(t=8),lr=t<ur?ur:t):ur=t,ar=e+lr,or||(or=!0,window.postMessage(fr,"*"))};Jn=function(e,t){var n=-1;return null!=t&&"number"==typeof t.timeout&&(n=Xn()+t.timeout),(-1===rr||-1!==n&&n<rr)&&(rr=n),t=++tr,er.push({scheduledCallback:e,callbackId:t,timeoutTime:n}),nr[t]=!0,ir||(ir=!0,requestAnimationFrame(dr)),t},Zn=function(e){delete nr[e]}}else{var pr=0,hr={};Jn=function(e){var t=pr++,n=setTimeout(function(){e({timeRemaining:function(){return 1/0},didTimeout:!1})});return hr[t]=n,t},Zn=function(e){var t=hr[e];delete hr[e],clearTimeout(t)}}function mr(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return o.Children.forEach(e,function(e){null==e||"string"!=typeof e&&"number"!=typeof e||(t+=e)}),t}(t.children))&&(e.children=t),e}function yr(e,t,n,r){if(e=e.options,t){t={};for(var o=0;o<n.length;o++)t["$"+n[o]]=!0;for(n=0;n<e.length;n++)o=t.hasOwnProperty("$"+e[n].value),e[n].selected!==o&&(e[n].selected=o),o&&r&&(e[n].defaultSelected=!0)}else{for(n=""+n,t=null,o=0;o<e.length;o++){if(e[o].value===n)return e[o].selected=!0,void(r&&(e[o].defaultSelected=!0));null!==t||e[o].disabled||(t=e[o])}null!==t&&(t.selected=!0)}}function vr(e,t){var n=t.value;e._wrapperState={initialValue:null!=n?n:t.defaultValue,wasMultiple:!!t.multiple}}function gr(e,t){return null!=t.dangerouslySetInnerHTML&&d("91"),a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function br(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&d("92"),Array.isArray(t)&&(1>=t.length||d("93"),t=t[0]),n=""+t),null==n&&(n="")),e._wrapperState={initialValue:""+n}}function wr(e,t){var n=t.value;null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&(e.defaultValue=n)),null!=t.defaultValue&&(e.defaultValue=t.defaultValue)}function Er(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}var kr={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function xr(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function Cr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?xr(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var _r,Sr=void 0,Tr=(_r=function(e,t){if(e.namespaceURI!==kr.svg||"innerHTML"in e)e.innerHTML=t;else{for((Sr=Sr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=Sr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return _r(e,t)})}:_r);function Pr(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var Or={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},Nr=["Webkit","ms","Moz","O"];function Rr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),o=n,i=t[n];o=null==i||"boolean"==typeof i||""===i?"":r||"number"!=typeof i||0===i||Or.hasOwnProperty(o)&&Or[o]?(""+i).trim():i+"px","float"===n&&(n="cssFloat"),r?e.setProperty(n,o):e[n]=o}}Object.keys(Or).forEach(function(e){Nr.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),Or[t]=Or[e]})});var Mr=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function jr(e,t,n){t&&(Mr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&d("137",e,n()),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&d("60"),"object"==typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||d("61")),null!=t.style&&"object"!=typeof t.style&&d("62",n()))}function Ir(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ur=u.thatReturns("");function Dr(e,t){var n=An(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=E[t];for(var r=0;r<t.length;r++){var o=t[r];if(!n.hasOwnProperty(o)||!n[o]){switch(o){case"scroll":Mn("scroll",e);break;case"focus":case"blur":Mn("focus",e),Mn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":tt(o,!0)&&Mn(o,e);break;case"invalid":case"submit":case"reset":break;default:-1===de.indexOf(o)&&Rn(o,e)}n[o]=!0}}}function Fr(e,t,n,r){return n=9===n.nodeType?n:n.ownerDocument,r===kr.html&&(r=xr(e)),r===kr.html?"script"===e?((e=n.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):e="string"==typeof t.is?n.createElement(e,{is:t.is}):n.createElement(e):e=n.createElementNS(r,e),e}function zr(e,t){return(9===t.nodeType?t:t.ownerDocument).createTextNode(e)}function Ar(e,t,n,r){var o=Ir(t,n);switch(t){case"iframe":case"object":Rn("load",e);var i=n;break;case"video":case"audio":for(i=0;i<de.length;i++)Rn(de[i],e);i=n;break;case"source":Rn("error",e),i=n;break;case"img":case"image":case"link":Rn("error",e),Rn("load",e),i=n;break;case"form":Rn("reset",e),Rn("submit",e),i=n;break;case"details":Rn("toggle",e),i=n;break;case"input":Nt(e,n),i=Ot(e,n),Rn("invalid",e),Dr(r,"onChange");break;case"option":i=mr(e,n);break;case"select":vr(e,n),i=a({},n,{value:void 0}),Rn("invalid",e),Dr(r,"onChange");break;case"textarea":br(e,n),i=gr(e,n),Rn("invalid",e),Dr(r,"onChange");break;default:i=n}jr(t,i,Ur);var l,c=i;for(l in c)if(c.hasOwnProperty(l)){var s=c[l];"style"===l?Rr(e,s):"dangerouslySetInnerHTML"===l?null!=(s=s?s.__html:void 0)&&Tr(e,s):"children"===l?"string"==typeof s?("textarea"!==t||""!==s)&&Pr(e,s):"number"==typeof s&&Pr(e,""+s):"suppressContentEditableWarning"!==l&&"suppressHydrationWarning"!==l&&"autoFocus"!==l&&(w.hasOwnProperty(l)?null!=s&&Dr(r,l):null!=s&&Pt(e,l,s,o))}switch(t){case"input":rt(e),jt(e,n);break;case"textarea":rt(e),Er(e);break;case"option":null!=n.value&&e.setAttribute("value",n.value);break;case"select":e.multiple=!!n.multiple,null!=(t=n.value)?yr(e,!!n.multiple,t,!1):null!=n.defaultValue&&yr(e,!!n.multiple,n.defaultValue,!0);break;default:"function"==typeof i.onClick&&(e.onclick=u)}}function Lr(e,t,n,r,o){var i=null;switch(t){case"input":n=Ot(e,n),r=Ot(e,r),i=[];break;case"option":n=mr(e,n),r=mr(e,r),i=[];break;case"select":n=a({},n,{value:void 0}),r=a({},r,{value:void 0}),i=[];break;case"textarea":n=gr(e,n),r=gr(e,r),i=[];break;default:"function"!=typeof n.onClick&&"function"==typeof r.onClick&&(e.onclick=u)}jr(t,r,Ur),t=e=void 0;var l=null;for(e in n)if(!r.hasOwnProperty(e)&&n.hasOwnProperty(e)&&null!=n[e])if("style"===e){var c=n[e];for(t in c)c.hasOwnProperty(t)&&(l||(l={}),l[t]="")}else"dangerouslySetInnerHTML"!==e&&"children"!==e&&"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&"autoFocus"!==e&&(w.hasOwnProperty(e)?i||(i=[]):(i=i||[]).push(e,null));for(e in r){var s=r[e];if(c=null!=n?n[e]:void 0,r.hasOwnProperty(e)&&s!==c&&(null!=s||null!=c))if("style"===e)if(c){for(t in c)!c.hasOwnProperty(t)||s&&s.hasOwnProperty(t)||(l||(l={}),l[t]="");for(t in s)s.hasOwnProperty(t)&&c[t]!==s[t]&&(l||(l={}),l[t]=s[t])}else l||(i||(i=[]),i.push(e,l)),l=s;else"dangerouslySetInnerHTML"===e?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(e,""+s)):"children"===e?c===s||"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(e,""+s):"suppressContentEditableWarning"!==e&&"suppressHydrationWarning"!==e&&(w.hasOwnProperty(e)?(null!=s&&Dr(o,e),i||c===s||(i=[])):(i=i||[]).push(e,s))}return l&&(i=i||[]).push("style",l),i}function Br(e,t,n,r,o){"input"===n&&"radio"===o.type&&null!=o.name&&Rt(e,o),Ir(n,r),r=Ir(n,o);for(var i=0;i<t.length;i+=2){var a=t[i],u=t[i+1];"style"===a?Rr(e,u):"dangerouslySetInnerHTML"===a?Tr(e,u):"children"===a?Pr(e,u):Pt(e,a,u,r)}switch(n){case"input":Mt(e,o);break;case"textarea":wr(e,o);break;case"select":e._wrapperState.initialValue=void 0,t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!o.multiple,null!=(n=o.value)?yr(e,!!o.multiple,n,!1):t!==!!o.multiple&&(null!=o.defaultValue?yr(e,!!o.multiple,o.defaultValue,!0):yr(e,!!o.multiple,o.multiple?[]:"",!1))}}function Wr(e,t,n,r,o){switch(t){case"iframe":case"object":Rn("load",e);break;case"video":case"audio":for(r=0;r<de.length;r++)Rn(de[r],e);break;case"source":Rn("error",e);break;case"img":case"image":case"link":Rn("error",e),Rn("load",e);break;case"form":Rn("reset",e),Rn("submit",e);break;case"details":Rn("toggle",e);break;case"input":Nt(e,n),Rn("invalid",e),Dr(o,"onChange");break;case"select":vr(e,n),Rn("invalid",e),Dr(o,"onChange");break;case"textarea":br(e,n),Rn("invalid",e),Dr(o,"onChange")}for(var i in jr(t,n,Ur),r=null,n)if(n.hasOwnProperty(i)){var a=n[i];"children"===i?"string"==typeof a?e.textContent!==a&&(r=["children",a]):"number"==typeof a&&e.textContent!==""+a&&(r=["children",""+a]):w.hasOwnProperty(i)&&null!=a&&Dr(o,i)}switch(t){case"input":rt(e),jt(e,n);break;case"textarea":rt(e),Er(e);break;case"select":case"option":break;default:"function"==typeof n.onClick&&(e.onclick=u)}return r}function Vr(e,t){return e.nodeValue!==t}var Hr={createElement:Fr,createTextNode:zr,setInitialProperties:Ar,diffProperties:Lr,updateProperties:Br,diffHydratedProperties:Wr,diffHydratedText:Vr,warnForUnmatchedText:function(){},warnForDeletedHydratableElement:function(){},warnForDeletedHydratableText:function(){},warnForInsertedHydratedElement:function(){},warnForInsertedHydratedText:function(){},restoreControlledState:function(e,t,n){switch(t){case"input":if(Mt(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var o=q(r);o||d("90"),ot(r),Mt(r,o)}}}break;case"textarea":wr(e,n);break;case"select":null!=(t=n.value)&&yr(e,!!n.multiple,t,!1)}}},qr=null,$r=null;function Kr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Qr(e,t){return"textarea"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&"string"==typeof t.dangerouslySetInnerHTML.__html}var Yr=Xn,Gr=Jn,Xr=Zn;function Jr(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Zr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var eo=[],to=-1;function no(e){return{current:e}}function ro(e){0>to||(e.current=eo[to],eo[to]=null,to--)}function oo(e,t){eo[++to]=e.current,e.current=t}var io=no(f),ao=no(!1),uo=f;function lo(e){return so(e)?uo:io.current}function co(e,t){var n=e.type.contextTypes;if(!n)return f;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var o,i={};for(o in n)i[o]=t[o];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=i),i}function so(e){return 2===e.tag&&null!=e.type.childContextTypes}function fo(e){so(e)&&(ro(ao),ro(io))}function po(e){ro(ao),ro(io)}function ho(e,t,n){io.current!==f&&d("168"),oo(io,t),oo(ao,n)}function mo(e,t){var n=e.stateNode,r=e.type.childContextTypes;if("function"!=typeof n.getChildContext)return t;for(var o in n=n.getChildContext())o in r||d("108",bt(e)||"Unknown",o);return a({},t,n)}function yo(e){if(!so(e))return!1;var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||f,uo=io.current,oo(io,t),oo(ao,ao.current),!0}function vo(e,t){var n=e.stateNode;if(n||d("169"),t){var r=mo(e,uo);n.__reactInternalMemoizedMergedChildContext=r,ro(ao),ro(io),oo(io,r)}else ro(ao);oo(ao,t)}function go(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=null,this.index=0,this.ref=null,this.pendingProps=t,this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.expirationTime=0,this.alternate=null}function bo(e,t,n){var r=e.alternate;return null===r?((r=new go(e.tag,t,e.key,e.mode)).type=e.type,r.stateNode=e.stateNode,r.alternate=e,e.alternate=r):(r.pendingProps=t,r.effectTag=0,r.nextEffect=null,r.firstEffect=null,r.lastEffect=null),r.expirationTime=n,r.child=e.child,r.memoizedProps=e.memoizedProps,r.memoizedState=e.memoizedState,r.updateQueue=e.updateQueue,r.sibling=e.sibling,r.index=e.index,r.ref=e.ref,r}function wo(e,t,n){var r=e.type,o=e.key;if(e=e.props,"function"==typeof r)var i=r.prototype&&r.prototype.isReactComponent?2:0;else if("string"==typeof r)i=5;else switch(r){case ct:return Eo(e.children,t,n,o);case ht:i=11,t|=3;break;case st:i=11,t|=2;break;case ft:return(r=new go(15,e,o,4|t)).type=ft,r.expirationTime=n,r;case yt:i=16,t|=2;break;default:e:{switch("object"==typeof r&&null!==r?r.$$typeof:null){case dt:i=13;break e;case pt:i=12;break e;case mt:i=14;break e;default:d("130",null==r?r:typeof r,"")}i=void 0}}return(t=new go(i,e,o,t)).type=r,t.expirationTime=n,t}function Eo(e,t,n,r){return(e=new go(10,e,r,t)).expirationTime=n,e}function ko(e,t,n){return(e=new go(6,e,null,t)).expirationTime=n,e}function xo(e,t,n){return(t=new go(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Co(e,t,n){return e={current:t=new go(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,pendingCommitExpirationTime:0,finishedWork:null,context:null,pendingContext:null,hydrate:n,remainingExpirationTime:0,firstBatch:null,nextScheduledRoot:null},t.stateNode=e}var _o=null,So=null;function To(e){return function(t){try{return e(t)}catch(e){}}}function Po(e){"function"==typeof _o&&_o(e)}function Oo(e){"function"==typeof So&&So(e)}var No=!1;function Ro(e){return{expirationTime:0,baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Mo(e){return{expirationTime:e.expirationTime,baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function jo(e){return{expirationTime:e,tag:0,payload:null,callback:null,next:null,nextEffect:null}}function Io(e,t,n){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t),(0===e.expirationTime||e.expirationTime>n)&&(e.expirationTime=n)}function Uo(e,t,n){var r=e.alternate;if(null===r){var o=e.updateQueue,i=null;null===o&&(o=e.updateQueue=Ro(e.memoizedState))}else o=e.updateQueue,i=r.updateQueue,null===o?null===i?(o=e.updateQueue=Ro(e.memoizedState),i=r.updateQueue=Ro(r.memoizedState)):o=e.updateQueue=Mo(i):null===i&&(i=r.updateQueue=Mo(o));null===i||o===i?Io(o,t,n):null===o.lastUpdate||null===i.lastUpdate?(Io(o,t,n),Io(i,t,n)):(Io(o,t,n),i.lastUpdate=t)}function Do(e,t,n){var r=e.updateQueue;null===(r=null===r?e.updateQueue=Ro(e.memoizedState):Fo(e,r)).lastCapturedUpdate?r.firstCapturedUpdate=r.lastCapturedUpdate=t:(r.lastCapturedUpdate.next=t,r.lastCapturedUpdate=t),(0===r.expirationTime||r.expirationTime>n)&&(r.expirationTime=n)}function Fo(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Mo(t)),t}function zo(e,t,n,r,o,i){switch(n.tag){case 1:return"function"==typeof(e=n.payload)?e.call(i,r,o):e;case 3:e.effectTag=-1025&e.effectTag|64;case 0:if(null===(o="function"==typeof(e=n.payload)?e.call(i,r,o):e)||void 0===o)break;return a({},r,o);case 2:No=!0}return r}function Ao(e,t,n,r,o){if(No=!1,!(0===t.expirationTime||t.expirationTime>o)){for(var i=(t=Fo(e,t)).baseState,a=null,u=0,l=t.firstUpdate,c=i;null!==l;){var s=l.expirationTime;s>o?(null===a&&(a=l,i=c),(0===u||u>s)&&(u=s)):(c=zo(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(s=null,l=t.firstCapturedUpdate;null!==l;){var f=l.expirationTime;f>o?(null===s&&(s=l,null===a&&(i=c)),(0===u||u>f)&&(u=f)):(c=zo(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===a&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===a&&null===s&&(i=c),t.baseState=i,t.firstUpdate=a,t.firstCapturedUpdate=s,t.expirationTime=u,e.memoizedState=c}}function Lo(e,t){"function"!=typeof e&&d("191",e),e.call(t)}function Bo(e,t,n){for(null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),e=t.firstEffect,t.firstEffect=t.lastEffect=null;null!==e;){var r=e.callback;null!==r&&(e.callback=null,Lo(r,n)),e=e.nextEffect}for(e=t.firstCapturedEffect,t.firstCapturedEffect=t.lastCapturedEffect=null;null!==e;)null!==(t=e.callback)&&(e.callback=null,Lo(t,n)),e=e.nextEffect}function Wo(e,t){return{value:e,source:t,stack:wt(t)}}var Vo=no(null),Ho=no(null),qo=no(0);function $o(e){var t=e.type._context;oo(qo,t._changedBits),oo(Ho,t._currentValue),oo(Vo,e),t._currentValue=e.pendingProps.value,t._changedBits=e.stateNode}function Ko(e){var t=qo.current,n=Ho.current;ro(Vo),ro(Ho),ro(qo),(e=e.type._context)._currentValue=n,e._changedBits=t}var Qo={},Yo=no(Qo),Go=no(Qo),Xo=no(Qo);function Jo(e){return e===Qo&&d("174"),e}function Zo(e,t){oo(Xo,t),oo(Go,e),oo(Yo,Qo);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:Cr(null,"");break;default:t=Cr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}ro(Yo),oo(Yo,t)}function ei(e){ro(Yo),ro(Go),ro(Xo)}function ti(e){Go.current===e&&(ro(Yo),ro(Go))}function ni(e,t,n){var r=e.memoizedState;r=null===(t=t(n,r))||void 0===t?r:a({},r,t),e.memoizedState=r,null!==(e=e.updateQueue)&&0===e.expirationTime&&(e.baseState=r)}var ri={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===an(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=ma(),o=jo(r=pa(r,e));o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Uo(e,o,r),ha(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=ma(),o=jo(r=pa(r,e));o.tag=1,o.payload=t,void 0!==n&&null!==n&&(o.callback=n),Uo(e,o,r),ha(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=ma(),r=jo(n=pa(n,e));r.tag=2,void 0!==t&&null!==t&&(r.callback=t),Uo(e,r,n),ha(e,n)}};function oi(e,t,n,r,o,i){var a=e.stateNode;return e=e.type,"function"==typeof a.shouldComponentUpdate?a.shouldComponentUpdate(n,o,i):!e.prototype||!e.prototype.isPureReactComponent||(!c(t,n)||!c(r,o))}function ii(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ri.enqueueReplaceState(t,t.state,null)}function ai(e,t){var n=e.type,r=e.stateNode,o=e.pendingProps,i=lo(e);r.props=o,r.state=e.memoizedState,r.refs=f,r.context=co(e,i),null!==(i=e.updateQueue)&&(Ao(e,i,o,r,t),r.state=e.memoizedState),"function"==typeof(i=e.type.getDerivedStateFromProps)&&(ni(e,i,o),r.state=e.memoizedState),"function"==typeof n.getDerivedStateFromProps||"function"==typeof r.getSnapshotBeforeUpdate||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||(n=r.state,"function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount(),n!==r.state&&ri.enqueueReplaceState(r,r.state,null),null!==(i=e.updateQueue)&&(Ao(e,i,o,r,t),r.state=e.memoizedState)),"function"==typeof r.componentDidMount&&(e.effectTag|=4)}var ui=Array.isArray;function li(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){var r=void 0;(n=n._owner)&&(2!==n.tag&&d("110"),r=n.stateNode),r||d("147",e);var o=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===o?t.ref:((t=function(e){var t=r.refs===f?r.refs={}:r.refs;null===e?delete t[o]:t[o]=e})._stringRef=o,t)}"string"!=typeof e&&d("148"),n._owner||d("254",e)}return e}function ci(e,t){"textarea"!==e.type&&d("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function si(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function o(e,t,n){return(e=bo(e,t,n)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=ko(n,e.mode,r)).return=e,t):((t=o(t,n,r)).return=e,t)}function l(e,t,n,r){return null!==t&&t.type===n.type?((r=o(t,n.props,r)).ref=li(e,t,n),r.return=e,r):((r=wo(n,e.mode,r)).ref=li(e,t,n),r.return=e,r)}function c(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=xo(n,e.mode,r)).return=e,t):((t=o(t,n.children||[],r)).return=e,t)}function s(e,t,n,r,i){return null===t||10!==t.tag?((t=Eo(n,e.mode,r,i)).return=e,t):((t=o(t,n,r)).return=e,t)}function f(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=ko(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case ut:return(n=wo(t,e.mode,n)).ref=li(e,null,t),n.return=e,n;case lt:return(t=xo(t,e.mode,n)).return=e,t}if(ui(t)||gt(t))return(t=Eo(t,e.mode,n,null)).return=e,t;ci(e,t)}return null}function p(e,t,n,r){var o=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==o?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case ut:return n.key===o?n.type===ct?s(e,t,n.props.children,r,o):l(e,t,n,r):null;case lt:return n.key===o?c(e,t,n,r):null}if(ui(n)||gt(n))return null!==o?null:s(e,t,n,r,null);ci(e,n)}return null}function h(e,t,n,r,o){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,o);if("object"==typeof r&&null!==r){switch(r.$$typeof){case ut:return e=e.get(null===r.key?n:r.key)||null,r.type===ct?s(t,e,r.props.children,o,r.key):l(t,e,r,o);case lt:return c(t,e=e.get(null===r.key?n:r.key)||null,r,o)}if(ui(r)||gt(r))return s(t,e=e.get(n)||null,r,o,null);ci(t,r)}return null}function m(o,a,u,l){for(var c=null,s=null,d=a,m=a=0,y=null;null!==d&&m<u.length;m++){d.index>m?(y=d,d=null):y=d.sibling;var v=p(o,d,u[m],l);if(null===v){null===d&&(d=y);break}e&&d&&null===v.alternate&&t(o,d),a=i(v,a,m),null===s?c=v:s.sibling=v,s=v,d=y}if(m===u.length)return n(o,d),c;if(null===d){for(;m<u.length;m++)(d=f(o,u[m],l))&&(a=i(d,a,m),null===s?c=d:s.sibling=d,s=d);return c}for(d=r(o,d);m<u.length;m++)(y=h(d,o,m,u[m],l))&&(e&&null!==y.alternate&&d.delete(null===y.key?m:y.key),a=i(y,a,m),null===s?c=y:s.sibling=y,s=y);return e&&d.forEach(function(e){return t(o,e)}),c}function y(o,a,u,l){var c=gt(u);"function"!=typeof c&&d("150"),null==(u=c.call(u))&&d("151");for(var s=c=null,m=a,y=a=0,v=null,g=u.next();null!==m&&!g.done;y++,g=u.next()){m.index>y?(v=m,m=null):v=m.sibling;var b=p(o,m,g.value,l);if(null===b){m||(m=v);break}e&&m&&null===b.alternate&&t(o,m),a=i(b,a,y),null===s?c=b:s.sibling=b,s=b,m=v}if(g.done)return n(o,m),c;if(null===m){for(;!g.done;y++,g=u.next())null!==(g=f(o,g.value,l))&&(a=i(g,a,y),null===s?c=g:s.sibling=g,s=g);return c}for(m=r(o,m);!g.done;y++,g=u.next())null!==(g=h(m,o,y,g.value,l))&&(e&&null!==g.alternate&&m.delete(null===g.key?y:g.key),a=i(g,a,y),null===s?c=g:s.sibling=g,s=g);return e&&m.forEach(function(e){return t(o,e)}),c}return function(e,r,i,u){"object"==typeof i&&null!==i&&i.type===ct&&null===i.key&&(i=i.props.children);var l="object"==typeof i&&null!==i;if(l)switch(i.$$typeof){case ut:e:{var c=i.key;for(l=r;null!==l;){if(l.key===c){if(10===l.tag?i.type===ct:l.type===i.type){n(e,l.sibling),(r=o(l,i.type===ct?i.props.children:i.props,u)).ref=li(e,l,i),r.return=e,e=r;break e}n(e,l);break}t(e,l),l=l.sibling}i.type===ct?((r=Eo(i.props.children,e.mode,u,i.key)).return=e,e=r):((u=wo(i,e.mode,u)).ref=li(e,r,i),u.return=e,e=u)}return a(e);case lt:e:{for(l=i.key;null!==r;){if(r.key===l){if(4===r.tag&&r.stateNode.containerInfo===i.containerInfo&&r.stateNode.implementation===i.implementation){n(e,r.sibling),(r=o(r,i.children||[],u)).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=xo(i,e.mode,u)).return=e,e=r}return a(e)}if("string"==typeof i||"number"==typeof i)return i=""+i,null!==r&&6===r.tag?(n(e,r.sibling),(r=o(r,i,u)).return=e,e=r):(n(e,r),(r=ko(i,e.mode,u)).return=e,e=r),a(e);if(ui(i))return m(e,r,i,u);if(gt(i))return y(e,r,i,u);if(l&&ci(e,i),void 0===i)switch(e.tag){case 2:case 1:d("152",(u=e.type).displayName||u.name||"Component")}return n(e,r)}}var fi=si(!0),di=si(!1),pi=null,hi=null,mi=!1;function yi(e,t){var n=new go(5,null,null,0);n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function vi(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);default:return!1}}function gi(e){if(mi){var t=hi;if(t){var n=t;if(!vi(e,t)){if(!(t=Jr(n))||!vi(e,t))return e.effectTag|=2,mi=!1,void(pi=e);yi(pi,n)}pi=e,hi=Zr(t)}else e.effectTag|=2,mi=!1,pi=e}}function bi(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag;)e=e.return;pi=e}function wi(e){if(e!==pi)return!1;if(!mi)return bi(e),mi=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Qr(t,e.memoizedProps))for(t=hi;t;)yi(e,t),t=Jr(t);return bi(e),hi=pi?Jr(e.stateNode):null,!0}function Ei(){hi=pi=null,mi=!1}function ki(e,t,n){xi(e,t,n,t.expirationTime)}function xi(e,t,n,r){t.child=null===e?di(t,null,n,r):fi(t,e.child,n,r)}function Ci(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function _i(e,t,n,r,o){Ci(e,t);var i=0!=(64&t.effectTag);if(!n&&!i)return r&&vo(t,!1),Pi(e,t);n=t.stateNode,it.current=t;var a=i?null:n.render();return t.effectTag|=1,i&&(xi(e,t,null,o),t.child=null),xi(e,t,a,o),t.memoizedState=n.state,t.memoizedProps=n.props,r&&vo(t,!0),t.child}function Si(e){var t=e.stateNode;t.pendingContext?ho(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ho(0,t.context,!1),Zo(e,t.containerInfo)}function Ti(e,t,n,r){var o=e.child;for(null!==o&&(o.return=e);null!==o;){switch(o.tag){case 12:var i=0|o.stateNode;if(o.type===t&&0!=(i&n)){for(i=o;null!==i;){var a=i.alternate;if(0===i.expirationTime||i.expirationTime>r)i.expirationTime=r,null!==a&&(0===a.expirationTime||a.expirationTime>r)&&(a.expirationTime=r);else{if(null===a||!(0===a.expirationTime||a.expirationTime>r))break;a.expirationTime=r}i=i.return}i=null}else i=o.child;break;case 13:i=o.type===e.type?null:o.child;break;default:i=o.child}if(null!==i)i.return=o;else for(i=o;null!==i;){if(i===e){i=null;break}if(null!==(o=i.sibling)){o.return=i.return,i=o;break}i=i.return}o=i}}function Pi(e,t){if(null!==e&&t.child!==e.child&&d("153"),null!==t.child){var n=bo(e=t.child,e.pendingProps,e.expirationTime);for(t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=bo(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function Oi(e,t,n){if(0===t.expirationTime||t.expirationTime>n){switch(t.tag){case 3:Si(t);break;case 2:yo(t);break;case 4:Zo(t,t.stateNode.containerInfo);break;case 13:$o(t)}return null}switch(t.tag){case 0:null!==e&&d("155");var r=t.type,o=t.pendingProps,i=lo(t);return r=r(o,i=co(t,i)),t.effectTag|=1,"object"==typeof r&&null!==r&&"function"==typeof r.render&&void 0===r.$$typeof?(i=t.type,t.tag=2,t.memoizedState=null!==r.state&&void 0!==r.state?r.state:null,"function"==typeof(i=i.getDerivedStateFromProps)&&ni(t,i,o),o=yo(t),r.updater=ri,t.stateNode=r,r._reactInternalFiber=t,ai(t,n),e=_i(e,t,!0,o,n)):(t.tag=1,ki(e,t,r),t.memoizedProps=o,e=t.child),e;case 1:return o=t.type,n=t.pendingProps,ao.current||t.memoizedProps!==n?(o=o(n,r=co(t,r=lo(t))),t.effectTag|=1,ki(e,t,o),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 2:if(o=yo(t),null===e)if(null===t.stateNode){var a=t.pendingProps,u=t.type;r=lo(t);var l=2===t.tag&&null!=t.type.contextTypes;a=new u(a,i=l?co(t,r):f),t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,a.updater=ri,t.stateNode=a,a._reactInternalFiber=t,l&&((l=t.stateNode).__reactInternalMemoizedUnmaskedChildContext=r,l.__reactInternalMemoizedMaskedChildContext=i),ai(t,n),r=!0}else{u=t.type,r=t.stateNode,l=t.memoizedProps,i=t.pendingProps,r.props=l;var c=r.context;a=co(t,a=lo(t));var s=u.getDerivedStateFromProps;(u="function"==typeof s||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(l!==i||c!==a)&&ii(t,r,i,a),No=!1;var p=t.memoizedState;c=r.state=p;var h=t.updateQueue;null!==h&&(Ao(t,h,i,r,n),c=t.memoizedState),l!==i||p!==c||ao.current||No?("function"==typeof s&&(ni(t,s,i),c=t.memoizedState),(l=No||oi(t,l,i,p,c,a))?(u||"function"!=typeof r.UNSAFE_componentWillMount&&"function"!=typeof r.componentWillMount||("function"==typeof r.componentWillMount&&r.componentWillMount(),"function"==typeof r.UNSAFE_componentWillMount&&r.UNSAFE_componentWillMount()),"function"==typeof r.componentDidMount&&(t.effectTag|=4)):("function"==typeof r.componentDidMount&&(t.effectTag|=4),t.memoizedProps=i,t.memoizedState=c),r.props=i,r.state=c,r.context=a,r=l):("function"==typeof r.componentDidMount&&(t.effectTag|=4),r=!1)}else u=t.type,r=t.stateNode,i=t.memoizedProps,l=t.pendingProps,r.props=i,c=r.context,a=co(t,a=lo(t)),(u="function"==typeof(s=u.getDerivedStateFromProps)||"function"==typeof r.getSnapshotBeforeUpdate)||"function"!=typeof r.UNSAFE_componentWillReceiveProps&&"function"!=typeof r.componentWillReceiveProps||(i!==l||c!==a)&&ii(t,r,l,a),No=!1,c=t.memoizedState,p=r.state=c,null!==(h=t.updateQueue)&&(Ao(t,h,l,r,n),p=t.memoizedState),i!==l||c!==p||ao.current||No?("function"==typeof s&&(ni(t,s,l),p=t.memoizedState),(s=No||oi(t,i,l,c,p,a))?(u||"function"!=typeof r.UNSAFE_componentWillUpdate&&"function"!=typeof r.componentWillUpdate||("function"==typeof r.componentWillUpdate&&r.componentWillUpdate(l,p,a),"function"==typeof r.UNSAFE_componentWillUpdate&&r.UNSAFE_componentWillUpdate(l,p,a)),"function"==typeof r.componentDidUpdate&&(t.effectTag|=4),"function"==typeof r.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!=typeof r.componentDidUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),t.memoizedProps=l,t.memoizedState=p),r.props=l,r.state=p,r.context=a,r=s):("function"!=typeof r.componentDidUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=4),"function"!=typeof r.getSnapshotBeforeUpdate||i===e.memoizedProps&&c===e.memoizedState||(t.effectTag|=256),r=!1);return _i(e,t,r,o,n);case 3:return Si(t),null!==(o=t.updateQueue)?(r=null!==(r=t.memoizedState)?r.element:null,Ao(t,o,t.pendingProps,null,n),(o=t.memoizedState.element)===r?(Ei(),e=Pi(e,t)):(r=t.stateNode,(r=(null===e||null===e.child)&&r.hydrate)&&(hi=Zr(t.stateNode.containerInfo),pi=t,r=mi=!0),r?(t.effectTag|=2,t.child=di(t,null,o,n)):(Ei(),ki(e,t,o)),e=t.child)):(Ei(),e=Pi(e,t)),e;case 5:return Jo(Xo.current),(o=Jo(Yo.current))!==(r=Cr(o,t.type))&&(oo(Go,t),oo(Yo,r)),null===e&&gi(t),o=t.type,l=t.memoizedProps,r=t.pendingProps,i=null!==e?e.memoizedProps:null,ao.current||l!==r||((l=1&t.mode&&!!r.hidden)&&(t.expirationTime=1073741823),l&&1073741823===n)?(l=r.children,Qr(o,r)?l=null:i&&Qr(o,i)&&(t.effectTag|=16),Ci(e,t),1073741823!==n&&1&t.mode&&r.hidden?(t.expirationTime=1073741823,t.memoizedProps=r,e=null):(ki(e,t,l),t.memoizedProps=r,e=t.child)):e=Pi(e,t),e;case 6:return null===e&&gi(t),t.memoizedProps=t.pendingProps,null;case 16:return null;case 4:return Zo(t,t.stateNode.containerInfo),o=t.pendingProps,ao.current||t.memoizedProps!==o?(null===e?t.child=fi(t,null,o,n):ki(e,t,o),t.memoizedProps=o,e=t.child):e=Pi(e,t),e;case 14:return o=t.type.render,n=t.pendingProps,r=t.ref,ao.current||t.memoizedProps!==n||r!==(null!==e?e.ref:null)?(ki(e,t,o=o(n,r)),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 10:return n=t.pendingProps,ao.current||t.memoizedProps!==n?(ki(e,t,n),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 11:return n=t.pendingProps.children,ao.current||null!==n&&t.memoizedProps!==n?(ki(e,t,n),t.memoizedProps=n,e=t.child):e=Pi(e,t),e;case 15:return n=t.pendingProps,t.memoizedProps===n?e=Pi(e,t):(ki(e,t,n.children),t.memoizedProps=n,e=t.child),e;case 13:return function(e,t,n){var r=t.type._context,o=t.pendingProps,i=t.memoizedProps,a=!0;if(ao.current)a=!1;else if(i===o)return t.stateNode=0,$o(t),Pi(e,t);var u=o.value;if(t.memoizedProps=o,null===i)u=1073741823;else if(i.value===o.value){if(i.children===o.children&&a)return t.stateNode=0,$o(t),Pi(e,t);u=0}else{var l=i.value;if(l===u&&(0!==l||1/l==1/u)||l!=l&&u!=u){if(i.children===o.children&&a)return t.stateNode=0,$o(t),Pi(e,t);u=0}else if(u="function"==typeof r._calculateChangedBits?r._calculateChangedBits(l,u):1073741823,0==(u|=0)){if(i.children===o.children&&a)return t.stateNode=0,$o(t),Pi(e,t)}else Ti(t,r,u,n)}return t.stateNode=u,$o(t),ki(e,t,o.children),t.child}(e,t,n);case 12:e:if(r=t.type,i=t.pendingProps,l=t.memoizedProps,o=r._currentValue,a=r._changedBits,ao.current||0!==a||l!==i){if(t.memoizedProps=i,void 0!==(u=i.unstable_observedBits)&&null!==u||(u=1073741823),t.stateNode=u,0!=(a&u))Ti(t,r,a,n);else if(l===i){e=Pi(e,t);break e}n=(n=i.children)(o),t.effectTag|=1,ki(e,t,n),e=t.child}else e=Pi(e,t);return e;default:d("156")}}function Ni(e){e.effectTag|=4}var Ri=void 0,Mi=void 0,ji=void 0;function Ii(e,t){var n=t.pendingProps;switch(t.tag){case 1:return null;case 2:return fo(t),null;case 3:ei(),po();var r=t.stateNode;return r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(wi(t),t.effectTag&=-3),Ri(t),null;case 5:ti(t),r=Jo(Xo.current);var o=t.type;if(null!==e&&null!=t.stateNode){var i=e.memoizedProps,a=t.stateNode,u=Jo(Yo.current);a=Lr(a,o,i,n,r),Mi(e,t,a,o,i,n,r,u),e.ref!==t.ref&&(t.effectTag|=128)}else{if(!n)return null===t.stateNode&&d("166"),null;if(e=Jo(Yo.current),wi(t))n=t.stateNode,o=t.type,i=t.memoizedProps,n[B]=t,n[W]=i,r=Wr(n,o,i,e,r),t.updateQueue=r,null!==r&&Ni(t);else{(e=Fr(o,n,r,e))[B]=t,e[W]=n;e:for(i=t.child;null!==i;){if(5===i.tag||6===i.tag)e.appendChild(i.stateNode);else if(4!==i.tag&&null!==i.child){i.child.return=i,i=i.child;continue}if(i===t)break;for(;null===i.sibling;){if(null===i.return||i.return===t)break e;i=i.return}i.sibling.return=i.return,i=i.sibling}Ar(e,o,n,r),Kr(o,n)&&Ni(t),t.stateNode=e}null!==t.ref&&(t.effectTag|=128)}return null;case 6:if(e&&null!=t.stateNode)ji(e,t,e.memoizedProps,n);else{if("string"!=typeof n)return null===t.stateNode&&d("166"),null;r=Jo(Xo.current),Jo(Yo.current),wi(t)?(r=t.stateNode,n=t.memoizedProps,r[B]=t,Vr(r,n)&&Ni(t)):((r=zr(n,r))[B]=t,t.stateNode=r)}return null;case 14:case 16:case 10:case 11:case 15:return null;case 4:return ei(),Ri(t),null;case 13:return Ko(t),null;case 12:return null;case 0:d("167");default:d("156")}}function Ui(e,t){var n=t.source;null===t.stack&&null!==n&&wt(n),null!==n&&bt(n),t=t.value,null!==e&&2===e.tag&&bt(e);try{t&&t.suppressReactErrorLogging||console.error(t)}catch(e){e&&e.suppressReactErrorLogging||console.error(e)}}function Di(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){fa(e,t)}else t.current=null}function Fi(e){switch(Oo(e),e.tag){case 2:Di(e);var t=e.stateNode;if("function"==typeof t.componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){fa(e,t)}break;case 5:Di(e);break;case 4:Li(e)}}function zi(e){return 5===e.tag||3===e.tag||4===e.tag}function Ai(e){e:{for(var t=e.return;null!==t;){if(zi(t)){var n=t;break e}t=t.return}d("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:d("161")}16&n.effectTag&&(Pr(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||zi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var o=e;;){if(5===o.tag||6===o.tag)if(n)if(r){var i=t,a=o.stateNode,u=n;8===i.nodeType?i.parentNode.insertBefore(a,u):i.insertBefore(a,u)}else t.insertBefore(o.stateNode,n);else r?(i=t,a=o.stateNode,8===i.nodeType?i.parentNode.insertBefore(a,i):i.appendChild(a)):t.appendChild(o.stateNode);else if(4!==o.tag&&null!==o.child){o.child.return=o,o=o.child;continue}if(o===e)break;for(;null===o.sibling;){if(null===o.return||o.return===e)return;o=o.return}o.sibling.return=o.return,o=o.sibling}}function Li(e){for(var t=e,n=!1,r=void 0,o=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&d("160"),n.tag){case 5:r=n.stateNode,o=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,o=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var i=t,a=i;;)if(Fi(a),null!==a.child&&4!==a.tag)a.child.return=a,a=a.child;else{if(a===i)break;for(;null===a.sibling;){if(null===a.return||a.return===i)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}o?(i=r,a=t.stateNode,8===i.nodeType?i.parentNode.removeChild(a):i.removeChild(a)):r.removeChild(t.stateNode)}else if(4===t.tag?r=t.stateNode.containerInfo:Fi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Bi(e,t){switch(t.tag){case 2:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var o=t.type,i=t.updateQueue;t.updateQueue=null,null!==i&&(n[W]=r,Br(n,i,o,e,r))}break;case 6:null===t.stateNode&&d("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 15:case 16:break;default:d("163")}}function Wi(e,t,n){(n=jo(n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Qa(r),Ui(e,t)},n}function Vi(e,t,n){(n=jo(n)).tag=3;var r=e.stateNode;return null!==r&&"function"==typeof r.componentDidCatch&&(n.callback=function(){null===aa?aa=new Set([this]):aa.add(this);var n=t.value,r=t.stack;Ui(e,t),this.componentDidCatch(n,{componentStack:null!==r?r:""})}),n}function Hi(e,t,n,r,o,i){n.effectTag|=512,n.firstEffect=n.lastEffect=null,r=Wo(r,n),e=t;do{switch(e.tag){case 3:return e.effectTag|=1024,void Do(e,r=Wi(e,r,i),i);case 2:if(t=r,n=e.stateNode,0==(64&e.effectTag)&&null!==n&&"function"==typeof n.componentDidCatch&&(null===aa||!aa.has(n)))return e.effectTag|=1024,void Do(e,r=Vi(e,t,i),i)}e=e.return}while(null!==e)}function qi(e){switch(e.tag){case 2:fo(e);var t=e.effectTag;return 1024&t?(e.effectTag=-1025&t|64,e):null;case 3:return ei(),po(),1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 5:return ti(e),null;case 16:return 1024&(t=e.effectTag)?(e.effectTag=-1025&t|64,e):null;case 4:return ei(),null;case 13:return Ko(e),null;default:return null}}Ri=function(){},Mi=function(e,t,n){(t.updateQueue=n)&&Ni(t)},ji=function(e,t,n,r){n!==r&&Ni(t)};var $i=Yr(),Ki=2,Qi=$i,Yi=0,Gi=0,Xi=!1,Ji=null,Zi=null,ea=0,ta=-1,na=!1,ra=null,oa=!1,ia=!1,aa=null;function ua(){if(null!==Ji)for(var e=Ji.return;null!==e;){var t=e;switch(t.tag){case 2:fo(t);break;case 3:ei(),po();break;case 5:ti(t);break;case 4:ei();break;case 13:Ko(t)}e=e.return}Zi=null,ea=0,ta=-1,na=!1,Ji=null,ia=!1}function la(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0==(512&e.effectTag)){t=Ii(t,e);var o=e;if(1073741823===ea||1073741823!==o.expirationTime){var i=0;switch(o.tag){case 3:case 2:var a=o.updateQueue;null!==a&&(i=a.expirationTime)}for(a=o.child;null!==a;)0!==a.expirationTime&&(0===i||i>a.expirationTime)&&(i=a.expirationTime),a=a.sibling;o.expirationTime=i}if(null!==t)return t;if(null!==n&&0==(512&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e)),null!==r)return r;if(null===n){ia=!0;break}e=n}else{if(null!==(e=qi(e)))return e.effectTag&=511,e;if(null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=512),null!==r)return r;if(null===n)break;e=n}}return null}function ca(e){var t=Oi(e.alternate,e,ea);return null===t&&(t=la(e)),it.current=null,t}function sa(e,t,n){Xi&&d("243"),Xi=!0,t===ea&&e===Zi&&null!==Ji||(ua(),ea=t,ta=-1,Ji=bo((Zi=e).current,null,ea),e.pendingCommitExpirationTime=0);var r=!1;for(na=!n||ea<=Ki;;){try{if(n)for(;null!==Ji&&!Ka();)Ji=ca(Ji);else for(;null!==Ji;)Ji=ca(Ji)}catch(t){if(null===Ji)r=!0,Qa(t);else{null===Ji&&d("271");var o=(n=Ji).return;if(null===o){r=!0,Qa(t);break}Hi(e,o,n,t,0,ea),Ji=la(n)}}break}if(Xi=!1,r)return null;if(null===Ji){if(ia)return e.pendingCommitExpirationTime=t,e.current.alternate;na&&d("262"),0<=ta&&setTimeout(function(){var t=e.current.expirationTime;0!==t&&(0===e.remainingExpirationTime||e.remainingExpirationTime<t)&&za(e,t)},ta),function(e){null===xa&&d("246"),xa.remainingExpirationTime=e}(e.current.expirationTime)}return null}function fa(e,t){var n;e:{for(Xi&&!oa&&d("263"),n=e.return;null!==n;){switch(n.tag){case 2:var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromCatch||"function"==typeof r.componentDidCatch&&(null===aa||!aa.has(r))){Uo(n,e=Vi(n,e=Wo(t,e),1),1),ha(n,1),n=void 0;break e}break;case 3:Uo(n,e=Wi(n,e=Wo(t,e),1),1),ha(n,1),n=void 0;break e}n=n.return}3===e.tag&&(Uo(e,n=Wi(e,n=Wo(t,e),1),1),ha(e,1)),n=void 0}return n}function da(){var e=2+25*(1+((ma()-2+500)/25|0));return e<=Yi&&(e=Yi+1),Yi=e}function pa(e,t){return e=0!==Gi?Gi:Xi?oa?1:ea:1&t.mode?Ma?2+10*(1+((e-2+15)/10|0)):2+25*(1+((e-2+500)/25|0)):1,Ma&&(0===_a||e>_a)&&(_a=e),e}function ha(e,t){for(;null!==e;){if((0===e.expirationTime||e.expirationTime>t)&&(e.expirationTime=t),null!==e.alternate&&(0===e.alternate.expirationTime||e.alternate.expirationTime>t)&&(e.alternate.expirationTime=t),null===e.return){if(3!==e.tag)break;var n=e.stateNode;!Xi&&0!==ea&&t<ea&&ua();var r=n.current.expirationTime;Xi&&!oa&&Zi===n||za(n,r),Ua>Ia&&d("185")}e=e.return}}function ma(){return Qi=Yr()-$i,Ki=2+(Qi/10|0)}function ya(e){var t=Gi;Gi=2+25*(1+((ma()-2+500)/25|0));try{return e()}finally{Gi=t}}function va(e,t,n,r,o){var i=Gi;Gi=1;try{return e(t,n,r,o)}finally{Gi=i}}var ga=null,ba=null,wa=0,Ea=-1,ka=!1,xa=null,Ca=0,_a=0,Sa=!1,Ta=!1,Pa=null,Oa=null,Na=!1,Ra=!1,Ma=!1,ja=null,Ia=1e3,Ua=0,Da=1;function Fa(e){if(0!==wa){if(e>wa)return;Xr(Ea)}var t=Yr()-$i;wa=e,Ea=Gr(La,{timeout:10*(e-2)-t})}function za(e,t){if(null===e.nextScheduledRoot)e.remainingExpirationTime=t,null===ba?(ga=ba=e,e.nextScheduledRoot=e):(ba=ba.nextScheduledRoot=e).nextScheduledRoot=ga;else{var n=e.remainingExpirationTime;(0===n||t<n)&&(e.remainingExpirationTime=t)}ka||(Na?Ra&&(xa=e,Ca=1,qa(e,1,!1)):1===t?Ba():Fa(t))}function Aa(){var e=0,t=null;if(null!==ba)for(var n=ba,r=ga;null!==r;){var o=r.remainingExpirationTime;if(0===o){if((null===n||null===ba)&&d("244"),r===r.nextScheduledRoot){ga=ba=r.nextScheduledRoot=null;break}if(r===ga)ga=o=r.nextScheduledRoot,ba.nextScheduledRoot=o,r.nextScheduledRoot=null;else{if(r===ba){(ba=n).nextScheduledRoot=ga,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if((0===e||o<e)&&(e=o,t=r),r===ba)break;n=r,r=r.nextScheduledRoot}}null!==(n=xa)&&n===t&&1===e?Ua++:Ua=0,xa=t,Ca=e}function La(e){Wa(0,!0,e)}function Ba(){Wa(1,!1,null)}function Wa(e,t,n){if(Oa=n,Aa(),t)for(;null!==xa&&0!==Ca&&(0===e||e>=Ca)&&(!Sa||ma()>=Ca);)ma(),qa(xa,Ca,!Sa),Aa();else for(;null!==xa&&0!==Ca&&(0===e||e>=Ca);)qa(xa,Ca,!1),Aa();null!==Oa&&(wa=0,Ea=-1),0!==Ca&&Fa(Ca),Oa=null,Sa=!1,Ha()}function Va(e,t){ka&&d("253"),xa=e,Ca=t,qa(e,t,!1),Ba(),Ha()}function Ha(){if(Ua=0,null!==ja){var e=ja;ja=null;for(var t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){Ta||(Ta=!0,Pa=e)}}}if(Ta)throw e=Pa,Pa=null,Ta=!1,e}function qa(e,t,n){ka&&d("245"),ka=!0,n?null!==(n=e.finishedWork)?$a(e,n,t):(e.finishedWork=null,null!==(n=sa(e,t,!0))&&(Ka()?e.finishedWork=n:$a(e,n,t))):null!==(n=e.finishedWork)?$a(e,n,t):(e.finishedWork=null,null!==(n=sa(e,t,!1))&&$a(e,n,t)),ka=!1}function $a(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime<=n&&(null===ja?ja=[r]:ja.push(r),r._defer))return e.finishedWork=t,void(e.remainingExpirationTime=0);if(e.finishedWork=null,oa=Xi=!0,(n=t.stateNode).current===t&&d("177"),0===(r=n.pendingCommitExpirationTime)&&d("261"),n.pendingCommitExpirationTime=0,ma(),it.current=null,1<t.effectTag)if(null!==t.lastEffect){t.lastEffect.nextEffect=t;var o=t.firstEffect}else o=t;else o=t.firstEffect;qr=On;var i=l();if(Wn(i)){if("selectionStart"in i)var a={start:i.selectionStart,end:i.selectionEnd};else e:{var u=window.getSelection&&window.getSelection();if(u&&0!==u.rangeCount){a=u.anchorNode;var c=u.anchorOffset,f=u.focusNode;u=u.focusOffset;try{a.nodeType,f.nodeType}catch(e){a=null;break e}var p=0,h=-1,m=-1,y=0,v=0,g=i,b=null;t:for(;;){for(var w;g!==a||0!==c&&3!==g.nodeType||(h=p+c),g!==f||0!==u&&3!==g.nodeType||(m=p+u),3===g.nodeType&&(p+=g.nodeValue.length),null!==(w=g.firstChild);)b=g,g=w;for(;;){if(g===i)break t;if(b===a&&++y===c&&(h=p),b===f&&++v===u&&(m=p),null!==(w=g.nextSibling))break;b=(g=b).parentNode}g=w}a=-1===h||-1===m?null:{start:h,end:m}}else a=null}a=a||{start:0,end:0}}else a=null;for($r={focusedElem:i,selectionRange:a},Nn(!1),ra=o;null!==ra;){i=!1,a=void 0;try{for(;null!==ra;){if(256&ra.effectTag){var E=ra.alternate;switch((c=ra).tag){case 2:if(256&c.effectTag&&null!==E){var k=E.memoizedProps,x=E.memoizedState,C=c.stateNode;C.props=c.memoizedProps,C.state=c.memoizedState;var _=C.getSnapshotBeforeUpdate(k,x);C.__reactInternalSnapshotBeforeUpdate=_}break;case 3:case 5:case 6:case 4:break;default:d("163")}}ra=ra.nextEffect}}catch(e){i=!0,a=e}i&&(null===ra&&d("178"),fa(ra,a),null!==ra&&(ra=ra.nextEffect))}for(ra=o;null!==ra;){E=!1,k=void 0;try{for(;null!==ra;){var S=ra.effectTag;if(16&S&&Pr(ra.stateNode,""),128&S){var T=ra.alternate;if(null!==T){var P=T.ref;null!==P&&("function"==typeof P?P(null):P.current=null)}}switch(14&S){case 2:Ai(ra),ra.effectTag&=-3;break;case 6:Ai(ra),ra.effectTag&=-3,Bi(ra.alternate,ra);break;case 4:Bi(ra.alternate,ra);break;case 8:Li(x=ra),x.return=null,x.child=null,x.alternate&&(x.alternate.child=null,x.alternate.return=null)}ra=ra.nextEffect}}catch(e){E=!0,k=e}E&&(null===ra&&d("178"),fa(ra,k),null!==ra&&(ra=ra.nextEffect))}if(P=$r,T=l(),S=P.focusedElem,E=P.selectionRange,T!==S&&s(document.documentElement,S)){Wn(S)&&(T=E.start,void 0===(P=E.end)&&(P=T),"selectionStart"in S?(S.selectionStart=T,S.selectionEnd=Math.min(P,S.value.length)):window.getSelection&&(T=window.getSelection(),k=S[he()].length,P=Math.min(E.start,k),E=void 0===E.end?P:Math.min(E.end,k),!T.extend&&P>E&&(k=E,E=P,P=k),k=Bn(S,P),x=Bn(S,E),k&&x&&(1!==T.rangeCount||T.anchorNode!==k.node||T.anchorOffset!==k.offset||T.focusNode!==x.node||T.focusOffset!==x.offset)&&((C=document.createRange()).setStart(k.node,k.offset),T.removeAllRanges(),P>E?(T.addRange(C),T.extend(x.node,x.offset)):(C.setEnd(x.node,x.offset),T.addRange(C))))),T=[];for(P=S;P=P.parentNode;)1===P.nodeType&&T.push({element:P,left:P.scrollLeft,top:P.scrollTop});for(S.focus(),S=0;S<T.length;S++)(P=T[S]).element.scrollLeft=P.left,P.element.scrollTop=P.top}for($r=null,Nn(qr),qr=null,n.current=t,ra=o;null!==ra;){o=!1,S=void 0;try{for(T=r;null!==ra;){var O=ra.effectTag;if(36&O){var N=ra.alternate;switch(E=T,(P=ra).tag){case 2:var R=P.stateNode;if(4&P.effectTag)if(null===N)R.props=P.memoizedProps,R.state=P.memoizedState,R.componentDidMount();else{var M=N.memoizedProps,j=N.memoizedState;R.props=P.memoizedProps,R.state=P.memoizedState,R.componentDidUpdate(M,j,R.__reactInternalSnapshotBeforeUpdate)}var I=P.updateQueue;null!==I&&(R.props=P.memoizedProps,R.state=P.memoizedState,Bo(P,I,R));break;case 3:var U=P.updateQueue;if(null!==U){if(k=null,null!==P.child)switch(P.child.tag){case 5:k=P.child.stateNode;break;case 2:k=P.child.stateNode}Bo(P,U,k)}break;case 5:var D=P.stateNode;null===N&&4&P.effectTag&&Kr(P.type,P.memoizedProps)&&D.focus();break;case 6:case 4:case 15:case 16:break;default:d("163")}}if(128&O){P=void 0;var F=ra.ref;if(null!==F){var z=ra.stateNode;switch(ra.tag){case 5:P=z;break;default:P=z}"function"==typeof F?F(P):F.current=P}}var A=ra.nextEffect;ra.nextEffect=null,ra=A}}catch(e){o=!0,S=e}o&&(null===ra&&d("178"),fa(ra,S),null!==ra&&(ra=ra.nextEffect))}Xi=oa=!1,Po(t.stateNode),0===(t=n.current.expirationTime)&&(aa=null),e.remainingExpirationTime=t}function Ka(){return!(null===Oa||Oa.timeRemaining()>Da)&&(Sa=!0)}function Qa(e){null===xa&&d("246"),xa.remainingExpirationTime=0,Ta||(Ta=!0,Pa=e)}function Ya(e,t){var n=Na;Na=!0;try{return e(t)}finally{(Na=n)||ka||Ba()}}function Ga(e,t){if(Na&&!Ra){Ra=!0;try{return e(t)}finally{Ra=!1}}return e(t)}function Xa(e,t){ka&&d("187");var n=Na;Na=!0;try{return va(e,t)}finally{Na=n,Ba()}}function Ja(e){var t=Na;Na=!0;try{va(e)}finally{(Na=t)||ka||Wa(1,!1,null)}}function Za(e,t,n,r,o){var i=t.current;if(n){var a;n=n._reactInternalFiber;e:{for(2===an(n)&&2===n.tag||d("170"),a=n;3!==a.tag;){if(so(a)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break e}(a=a.return)||d("171")}a=a.stateNode.context}n=so(n)?mo(n,a):a}else n=f;return null===t.context?t.context=n:t.pendingContext=n,t=o,(o=jo(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(o.callback=t),Uo(i,o,r),ha(i,r),r}function eu(e){var t=e._reactInternalFiber;return void 0===t&&("function"==typeof e.render?d("188"):d("268",Object.keys(e))),null===(e=cn(t))?null:e.stateNode}function tu(e,t,n,r){var o=t.current;return Za(e,t,n,o=pa(ma(),o),r)}function nu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function ru(e){var t=e.findFiberByHostInstance;return function(e){if("undefined"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__)return!1;var t=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);_o=To(function(e){return t.onCommitFiberRoot(n,e)}),So=To(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}return!0}(a({},e,{findHostInstanceByFiber:function(e){return null===(e=cn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}var ou=Ya,iu=function(e,t,n){if(Ma)return e(t,n);Na||ka||0===_a||(Wa(_a,!1,null),_a=0);var r=Ma,o=Na;Na=Ma=!0;try{return e(t,n)}finally{Ma=r,(Na=o)||ka||Ba()}},au=function(){ka||0===_a||(Wa(_a,!1,null),_a=0)};function uu(e){this._expirationTime=da(),this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function lu(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function cu(e,t,n){this._internalRoot=Co(e,t,n)}function su(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function fu(e,t,n,r,o){su(n)||d("200");var i=n._reactRootContainer;if(i){if("function"==typeof o){var a=o;o=function(){var e=nu(i._internalRoot);a.call(e)}}null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)}else{if(i=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new cu(e,!1,t)}(n,r),"function"==typeof o){var u=o;o=function(){var e=nu(i._internalRoot);u.call(e)}}Ga(function(){null!=e?i.legacy_renderSubtreeIntoContainer(e,t,o):i.render(t,o)})}return nu(i._internalRoot)}function du(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return su(t)||d("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:lt,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}Ae.injectFiberControlledHostComponent(Hr),uu.prototype.render=function(e){this._defer||d("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new lu;return Za(e,t,null,n,r._onCommit),r},uu.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},uu.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||d("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,o=t;o!==this;)r=o,o=o._next;null===r&&d("251"),r._next=o._next,this._next=t,e.firstBatch=this}this._defer=!1,Va(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},uu.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},lu.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},lu.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!=typeof n&&d("191",n),n()}}},cu.prototype.render=function(e,t){var n=this._internalRoot,r=new lu;return null!==(t=void 0===t?null:t)&&r.then(t),tu(e,n,null,r._onCommit),r},cu.prototype.unmount=function(e){var t=this._internalRoot,n=new lu;return null!==(e=void 0===e?null:e)&&n.then(e),tu(null,t,null,n._onCommit),n},cu.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,o=new lu;return null!==(n=void 0===n?null:n)&&o.then(n),tu(t,r,e,o._onCommit),o},cu.prototype.createBatch=function(){var e=new uu(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime<=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Ke=ou,Qe=iu,Ye=au;var pu={createPortal:du,findDOMNode:function(e){return null==e?null:1===e.nodeType?e:eu(e)},hydrate:function(e,t,n){return fu(null,e,t,!0,n)},render:function(e,t,n){return fu(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return(null==e||void 0===e._reactInternalFiber)&&d("38"),fu(e,t,n,!1,r)},unmountComponentAtNode:function(e){return su(e)||d("40"),!!e._reactRootContainer&&(Ga(function(){fu(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return du.apply(void 0,arguments)},unstable_batchedUpdates:Ya,unstable_deferredUpdates:ya,flushSync:Xa,unstable_flushControlled:Ja,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{EventPluginHub:A,EventPluginRegistry:C,EventPropagators:ne,ReactControlledComponent:$e,ReactDOMComponentTree:$,ReactDOMEventListener:Un},unstable_createRoot:function(e,t){return new cu(e,!0,null!=t&&!0===t.hydrate)}};ru({findFiberByHostInstance:V,bundleType:0,version:"16.4.0",rendererPackageName:"react-dom"});var hu={default:pu},mu=hu&&pu||hu;e.exports=mu.default?mu.default:mu},function(e,t,n){"use strict";
/** @license React v16.4.0
 * react.production.min.js
 *
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var r=n(13),o=n(6),i=n(12),a=n(5),u="function"==typeof Symbol&&Symbol.for,l=u?Symbol.for("react.element"):60103,c=u?Symbol.for("react.portal"):60106,s=u?Symbol.for("react.fragment"):60107,f=u?Symbol.for("react.strict_mode"):60108,d=u?Symbol.for("react.profiler"):60114,p=u?Symbol.for("react.provider"):60109,h=u?Symbol.for("react.context"):60110,m=u?Symbol.for("react.async_mode"):60111,y=u?Symbol.for("react.forward_ref"):60112;u&&Symbol.for("react.timeout");var v="function"==typeof Symbol&&Symbol.iterator;function g(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);o(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var b={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}};function w(e,t,n){this.props=e,this.context=t,this.refs=i,this.updater=n||b}function E(){}function k(e,t,n){this.props=e,this.context=t,this.refs=i,this.updater=n||b}w.prototype.isReactComponent={},w.prototype.setState=function(e,t){"object"!=typeof e&&"function"!=typeof e&&null!=e&&g("85"),this.updater.enqueueSetState(this,e,t,"setState")},w.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},E.prototype=w.prototype;var x=k.prototype=new E;x.constructor=k,r(x,w.prototype),x.isPureReactComponent=!0;var C={current:null},_=Object.prototype.hasOwnProperty,S={key:!0,ref:!0,__self:!0,__source:!0};function T(e,t,n){var r=void 0,o={},i=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(i=""+t.key),t)_.call(t,r)&&!S.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:l,type:e,key:i,ref:a,props:o,_owner:C.current}}function P(e){return"object"==typeof e&&null!==e&&e.$$typeof===l}var O=/\/+/g,N=[];function R(e,t,n,r){if(N.length){var o=N.pop();return o.result=e,o.keyPrefix=t,o.func=n,o.context=r,o.count=0,o}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function M(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>N.length&&N.push(e)}function j(e,t,n,r){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var i=!1;if(null===e)i=!0;else switch(o){case"string":case"number":i=!0;break;case"object":switch(e.$$typeof){case l:case c:i=!0}}if(i)return n(r,e,""===t?"."+I(e,0):t),1;if(i=0,t=""===t?".":t+":",Array.isArray(e))for(var a=0;a<e.length;a++){var u=t+I(o=e[a],a);i+=j(o,u,n,r)}else if(null===e||void 0===e?u=null:u="function"==typeof(u=v&&e[v]||e["@@iterator"])?u:null,"function"==typeof u)for(e=u.call(e),a=0;!(o=e.next()).done;)i+=j(o=o.value,u=t+I(o,a++),n,r);else"object"===o&&g("31","[object Object]"===(n=""+e)?"object with keys {"+Object.keys(e).join(", ")+"}":n,"");return i}function I(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function U(e,t){e.func.call(e.context,t,e.count++)}function D(e,t,n){var r=e.result,o=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?F(e,r,n,a.thatReturnsArgument):null!=e&&(P(e)&&(t=o+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(O,"$&/")+"/")+n,e={$$typeof:l,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}),r.push(e))}function F(e,t,n,r,o){var i="";null!=n&&(i=(""+n).replace(O,"$&/")+"/"),t=R(t,i,r,o),null==e||j(e,"",D,t),M(t)}var z={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return F(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;t=R(null,null,t,n),null==e||j(e,"",U,t),M(t)},count:function(e){return null==e?0:j(e,"",a.thatReturnsNull,null)},toArray:function(e){var t=[];return F(e,t,null,a.thatReturnsArgument),t},only:function(e){return P(e)||g("143"),e}},createRef:function(){return{current:null}},Component:w,PureComponent:k,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:h,_calculateChangedBits:t,_defaultValue:e,_currentValue:e,_currentValue2:e,_changedBits:0,_changedBits2:0,Provider:null,Consumer:null}).Provider={$$typeof:p,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:y,render:e}},Fragment:s,StrictMode:f,unstable_AsyncMode:m,unstable_Profiler:d,createElement:T,cloneElement:function(e,t,n){(null===e||void 0===e)&&g("267",e);var o=void 0,i=r({},e.props),a=e.key,u=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(u=t.ref,c=C.current),void 0!==t.key&&(a=""+t.key);var s=void 0;for(o in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)_.call(t,o)&&!S.hasOwnProperty(o)&&(i[o]=void 0===t[o]&&void 0!==s?s[o]:t[o])}if(1===(o=arguments.length-2))i.children=n;else if(1<o){s=Array(o);for(var f=0;f<o;f++)s[f]=arguments[f+2];i.children=s}return{$$typeof:l,type:e.type,key:a,ref:u,props:i,_owner:c}},createFactory:function(e){var t=T.bind(null,e);return t.type=e,t},isValidElement:P,version:"16.4.0",__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentOwner:C,assign:r}},A={default:z},L=A&&z||A;e.exports=L.default?L.default:L},function(e,t,n){"use strict";var r=c(n(1)),o=n(2),i=n(16),a=n(29),u=(c(n(9)),c(n(24))),l=n(8);n(4);function c(e){return e&&e.__esModule?e:{default:e}}n(21),window.React=r.default,Date.prototype.Format=function(e){var t={"M+":this.getMonth()+1,"d+":this.getDate(),"h+":this.getHours(),"m+":this.getMinutes(),"s+":this.getSeconds(),"q+":Math.floor((this.getMonth()+3)/3),S:this.getMilliseconds()};for(var n in/(y+)/.test(e)&&(e=e.replace(RegExp.$1,(this.getFullYear()+"").substr(4-RegExp.$1.length))),t)new RegExp("("+n+")").test(e)&&(e=e.replace(RegExp.$1,1==RegExp.$1.length?t[n]:("00"+t[n]).substr((""+t[n]).length)));return e};for(var s={todo:[],popup:!1},f=0;f<10;f++)s.todo.push({title:"todo "+f,data:(new Date).Format("yyyy-MM-dd")});var d=(0,i.createStore)((0,i.combineReducers)({todo:a.todo,popup:a.popup}),s);(0,o.render)(r.default.createElement(l.Provider,{store:d},r.default.createElement(u.default,null)),document.getElementById("app"))},function(e,t,n){"use strict";(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.a=n}).call(this,n(11))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0L2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ludmFyaWFudC9icm93c2VyLmpzIiwid2VicGFjazovLy8uL3NyYy9yZWR1eC9hY3Rpb25zLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9lbXB0eUZ1bmN0aW9uLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9pbnZhcmlhbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N5bWJvbC1vYnNlcnZhYmxlL2VzL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy91dGlscy9Qcm9wVHlwZXMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2NvbXBvbmVudHMvUHJvdmlkZXIuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL1N1YnNjcmlwdGlvbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29tcG9uZW50cy9jb25uZWN0QWR2YW5jZWQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL3V0aWxzL3NoYWxsb3dFcXVhbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19yb290LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9sb2Rhc2gtZXMvX1N5bWJvbC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19nZXRSYXdUYWcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fb2JqZWN0VG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9fYmFzZUdldFRhZy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19nZXRQcm90b3R5cGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc09iamVjdExpa2UuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2xvZGFzaC1lcy9pc1BsYWluT2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L3dyYXBNYXBUb1Byb3BzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1yZWR1eC9lcy9jb25uZWN0L21hcERpc3BhdGNoVG9Qcm9wcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9tYXBTdGF0ZVRvUHJvcHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvbWVyZ2VQcm9wcy5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QtcmVkdXgvZXMvY29ubmVjdC9zZWxlY3RvckZhY3RvcnkuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlYWN0LXJlZHV4L2VzL2Nvbm5lY3QvY29ubmVjdC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvVG9kb0FwcC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvcmVkdXgvY29uc3RhbnRzLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9nbG9iYWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2VtcHR5T2JqZWN0LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9vYmplY3QtYXNzaWduL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ob2lzdC1ub24tcmVhY3Qtc3RhdGljcy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3ltYm9sLW9ic2VydmFibGUvZXMvcG9ueWZpbGwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3JlZHV4L2VzL3JlZHV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbm9ybWFsaXplLmNzcy9ub3JtYWxpemUuY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9ub3JtYWxpemUuY3NzL25vcm1hbGl6ZS5jc3M/MjQ5MyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHJvcC10eXBlcy9saWIvUmVhY3RQcm9wVHlwZXNTZWNyZXQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3Byb3AtdHlwZXMvZmFjdG9yeVdpdGhUaHJvd2luZ1NoaW1zLmpzIiwid2VicGFjazovLy8uL3NyYy9BcHAuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvQWRkRm9ybS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29tcG9uZW50cy9Gb290ZXIuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvVG9kb0xpc3QuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvbXBvbmVudHMvSGVhZGVyLmpzIiwid2VicGFjazovLy8uL3NyYy9yZWR1eC9yZWR1Y2Vycy5qcyIsIndlYnBhY2s6Ly8vKHdlYnBhY2spL2J1aWxkaW4vaGFybW9ueS1tb2R1bGUuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2lzTm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvaXNUZXh0Tm9kZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvZmJqcy9saWIvY29udGFpbnNOb2RlLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9mYmpzL2xpYi9zaGFsbG93RXF1YWwuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL2dldEFjdGl2ZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2ZianMvbGliL0V4ZWN1dGlvbkVudmlyb25tZW50LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9yZWFjdC1kb20vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcmVhY3QvY2pzL3JlYWN0LnByb2R1Y3Rpb24ubWluLmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbG9kYXNoLWVzL19mcmVlR2xvYmFsLmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJjb25maWd1cmFibGUiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsInZhbHVlIiwibiIsIl9fZXNNb2R1bGUiLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJjaGVja0RDRSIsIl9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXyIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImNvbmRpdGlvbiIsImZvcm1hdCIsImEiLCJiIiwiZSIsImYiLCJ1bmRlZmluZWQiLCJFcnJvciIsImFyZ3MiLCJhcmdJbmRleCIsInJlcGxhY2UiLCJmcmFtZXNUb1BvcCIsIl9jb25zdGFudHMiLCJhZGRUb2RvIiwidGl0bGUiLCJ0eXBlIiwiZGF0YSIsIkRhdGUiLCJtYWtlRW1wdHlGdW5jdGlvbiIsImFyZyIsImVtcHR5RnVuY3Rpb24iLCJ0aGF0UmV0dXJucyIsInRoYXRSZXR1cm5zRmFsc2UiLCJ0aGF0UmV0dXJuc1RydWUiLCJ0aGF0UmV0dXJuc051bGwiLCJ0aGF0UmV0dXJuc1RoaXMiLCJ0aGlzIiwidGhhdFJldHVybnNBcmd1bWVudCIsInZhbGlkYXRlRm9ybWF0Iiwicm9vdCIsIl9wb255ZmlsbF9qc19fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwic2VsZiIsIndpbmRvdyIsImdsb2JhbCIsInJlc3VsdCIsIl9fd2VicGFja19leHBvcnRzX18iLCJzdWJzY3JpcHRpb25TaGFwZSIsInByb3BfdHlwZXNfZGVmYXVsdCIsInNoYXBlIiwidHJ5U3Vic2NyaWJlIiwiZnVuYyIsImlzUmVxdWlyZWQiLCJ0cnlVbnN1YnNjcmliZSIsIm5vdGlmeU5lc3RlZFN1YnMiLCJpc1N1YnNjcmliZWQiLCJzdG9yZVNoYXBlIiwic3Vic2NyaWJlIiwiZGlzcGF0Y2giLCJnZXRTdGF0ZSIsImNyZWF0ZVByb3ZpZGVyIiwiX1Byb3ZpZGVyJGNoaWxkQ29udGV4Iiwic3RvcmVLZXkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzdWJzY3JpcHRpb25LZXkiLCJQcm92aWRlciIsIl9Db21wb25lbnQiLCJwcm9wcyIsImNvbnRleHQiLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwiX2NsYXNzQ2FsbENoZWNrIiwiX3RoaXMiLCJSZWZlcmVuY2VFcnJvciIsIl9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIiwic3RvcmUiLCJzdWJDbGFzcyIsInN1cGVyQ2xhc3MiLCJjcmVhdGUiLCJjb25zdHJ1Y3RvciIsIndyaXRhYmxlIiwic2V0UHJvdG90eXBlT2YiLCJfX3Byb3RvX18iLCJfaW5oZXJpdHMiLCJnZXRDaGlsZENvbnRleHQiLCJfcmVmIiwicmVuZGVyIiwicmVhY3QiLCJvbmx5IiwiY2hpbGRyZW4iLCJwcm9wVHlwZXMiLCJlbGVtZW50IiwiY2hpbGRDb250ZXh0VHlwZXMiLCJjb21wb25lbnRzX1Byb3ZpZGVyIiwiQ0xFQVJFRCIsIm51bGxMaXN0ZW5lcnMiLCJub3RpZnkiLCJTdWJzY3JpcHRpb24iLCJwYXJlbnRTdWIiLCJvblN0YXRlQ2hhbmdlIiwiU3Vic2NyaXB0aW9uX2NsYXNzQ2FsbENoZWNrIiwidW5zdWJzY3JpYmUiLCJsaXN0ZW5lcnMiLCJhZGROZXN0ZWRTdWIiLCJsaXN0ZW5lciIsIkJvb2xlYW4iLCJjdXJyZW50IiwibmV4dCIsImNsZWFyIiwic2xpY2UiLCJwdXNoIiwic3BsaWNlIiwiaW5kZXhPZiIsIl9leHRlbmRzIiwiYXNzaWduIiwidGFyZ2V0Iiwic291cmNlIiwia2V5IiwiaG90UmVsb2FkaW5nVmVyc2lvbiIsImR1bW15U3RhdGUiLCJub29wIiwiY29ubmVjdEFkdmFuY2VkIiwic2VsZWN0b3JGYWN0b3J5IiwiX2NvbnRleHRUeXBlcyIsIl9jaGlsZENvbnRleHRUeXBlcyIsIl9yZWYkZ2V0RGlzcGxheU5hbWUiLCJnZXREaXNwbGF5TmFtZSIsIl9yZWYkbWV0aG9kTmFtZSIsIm1ldGhvZE5hbWUiLCJfcmVmJHJlbmRlckNvdW50UHJvcCIsInJlbmRlckNvdW50UHJvcCIsIl9yZWYkc2hvdWxkSGFuZGxlU3RhdCIsInNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyIsIl9yZWYkc3RvcmVLZXkiLCJfcmVmJHdpdGhSZWYiLCJ3aXRoUmVmIiwiY29ubmVjdE9wdGlvbnMiLCJvYmoiLCJrZXlzIiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzIiwidmVyc2lvbiIsImNvbnRleHRUeXBlcyIsIldyYXBwZWRDb21wb25lbnQiLCJicm93c2VyX2RlZmF1bHQiLCJKU09OIiwic3RyaW5naWZ5Iiwid3JhcHBlZENvbXBvbmVudE5hbWUiLCJkaXNwbGF5TmFtZSIsInNlbGVjdG9yRmFjdG9yeU9wdGlvbnMiLCJDb25uZWN0IiwiY29ubmVjdEFkdmFuY2VkX2NsYXNzQ2FsbENoZWNrIiwiY29ubmVjdEFkdmFuY2VkX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4iLCJzdGF0ZSIsInJlbmRlckNvdW50IiwicHJvcHNNb2RlIiwic2V0V3JhcHBlZEluc3RhbmNlIiwiYmluZCIsImluaXRTZWxlY3RvciIsImluaXRTdWJzY3JpcHRpb24iLCJjb25uZWN0QWR2YW5jZWRfaW5oZXJpdHMiLCJfcmVmMiIsInN1YnNjcmlwdGlvbiIsImNvbXBvbmVudERpZE1vdW50Iiwic2VsZWN0b3IiLCJydW4iLCJzaG91bGRDb21wb25lbnRVcGRhdGUiLCJmb3JjZVVwZGF0ZSIsImNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMiLCJuZXh0UHJvcHMiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsImdldFdyYXBwZWRJbnN0YW5jZSIsIndyYXBwZWRJbnN0YW5jZSIsInJlZiIsInNvdXJjZVNlbGVjdG9yIiwibWFrZVNlbGVjdG9yU3RhdGVmdWwiLCJjb21wb25lbnREaWRVcGRhdGUiLCJub3RpZnlOZXN0ZWRTdWJzT25Db21wb25lbnREaWRVcGRhdGUiLCJzZXRTdGF0ZSIsImFkZEV4dHJhUHJvcHMiLCJ3aXRoRXh0cmFzIiwiaG9pc3Rfbm9uX3JlYWN0X3N0YXRpY3NfZGVmYXVsdCIsImhhc093biIsImlzIiwieCIsInkiLCJzaGFsbG93RXF1YWwiLCJvYmpBIiwib2JqQiIsImtleXNBIiwia2V5c0IiLCJmcmVlU2VsZiIsIl9TeW1ib2wiLCJfZnJlZUdsb2JhbCIsIkZ1bmN0aW9uIiwiU3ltYm9sIiwib2JqZWN0UHJvdG8iLCJ0b1N0cmluZyIsInRvU3RyaW5nVGFnIiwiZ2V0UHJvdG90eXBlT2YiLCJmdW5jUHJvdG8iLCJpc1BsYWluT2JqZWN0X29iamVjdFByb3RvIiwiZnVuY1RvU3RyaW5nIiwid3JhcE1hcFRvUHJvcHNDb25zdGFudCIsImdldENvbnN0YW50Iiwib3B0aW9ucyIsImNvbnN0YW50IiwiY29uc3RhbnRTZWxlY3RvciIsImRlcGVuZHNPbk93blByb3BzIiwiZ2V0RGVwZW5kc09uT3duUHJvcHMiLCJtYXBUb1Byb3BzIiwid3JhcE1hcFRvUHJvcHNGdW5jIiwicHJveHkiLCJzdGF0ZU9yRGlzcGF0Y2giLCJvd25Qcm9wcyIsImNvbm5lY3RfbWFwRGlzcGF0Y2hUb1Byb3BzIiwibWFwRGlzcGF0Y2hUb1Byb3BzIiwicmVkdXgiLCJjb25uZWN0X21hcFN0YXRlVG9Qcm9wcyIsIm1hcFN0YXRlVG9Qcm9wcyIsIm1lcmdlUHJvcHNfZXh0ZW5kcyIsImRlZmF1bHRNZXJnZVByb3BzIiwic3RhdGVQcm9wcyIsImRpc3BhdGNoUHJvcHMiLCJjb25uZWN0X21lcmdlUHJvcHMiLCJtZXJnZVByb3BzIiwicHVyZSIsImFyZU1lcmdlZFByb3BzRXF1YWwiLCJoYXNSdW5PbmNlIiwibWVyZ2VkUHJvcHMiLCJuZXh0TWVyZ2VkUHJvcHMiLCJ3cmFwTWVyZ2VQcm9wc0Z1bmMiLCJpbXB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwicHVyZUZpbmFsUHJvcHNTZWxlY3RvckZhY3RvcnkiLCJhcmVTdGF0ZXNFcXVhbCIsImFyZU93blByb3BzRXF1YWwiLCJhcmVTdGF0ZVByb3BzRXF1YWwiLCJoYXNSdW5BdExlYXN0T25jZSIsImhhbmRsZVN1YnNlcXVlbnRDYWxscyIsIm5leHRTdGF0ZSIsIm5leHRPd25Qcm9wcyIsIm5leHRTdGF0ZVByb3BzIiwic3RhdGVQcm9wc0NoYW5nZWQiLCJwcm9wc0NoYW5nZWQiLCJzdGF0ZUNoYW5nZWQiLCJmaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IiwiaW5pdE1hcFN0YXRlVG9Qcm9wcyIsImluaXRNYXBEaXNwYXRjaFRvUHJvcHMiLCJpbml0TWVyZ2VQcm9wcyIsInNlbGVjdG9yRmFjdG9yeV9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImNvbm5lY3RfZXh0ZW5kcyIsIm1hdGNoIiwiZmFjdG9yaWVzIiwic3RyaWN0RXF1YWwiLCJjb25uZWN0X2Nvbm5lY3QiLCJfcmVmJGNvbm5lY3RIT0MiLCJjb25uZWN0SE9DIiwiX3JlZiRtYXBTdGF0ZVRvUHJvcHNGIiwibWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzIiwiX3JlZiRtYXBEaXNwYXRjaFRvUHJvIiwibWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIiwiX3JlZiRtZXJnZVByb3BzRmFjdG9yIiwibWVyZ2VQcm9wc0ZhY3RvcmllcyIsIl9yZWYkc2VsZWN0b3JGYWN0b3J5IiwiX3JlZjIkcHVyZSIsIl9yZWYyJGFyZVN0YXRlc0VxdWFsIiwiX3JlZjIkYXJlT3duUHJvcHNFcXVhIiwiX3JlZjIkYXJlU3RhdGVQcm9wc0VxIiwiX3JlZjIkYXJlTWVyZ2VkUHJvcHNFIiwiZXh0cmFPcHRpb25zIiwiY29ubmVjdF9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsIlRvZG9BcHAiLCJSZWFjdCIsIkNvbXBvbmVudCIsIl9yZWFjdDIiLCJkZWZhdWx0IiwiY3JlYXRlRWxlbWVudCIsImNsYXNzTmFtZSIsIl9IZWFkZXIyIiwiX1RvZG9MaXN0MiIsIl9Gb290ZXIyIiwiX0FkZEZvcm0yIiwiQUREX1RPRE8iLCJSRU1PVkVfVE9ETyIsIk9QRU5fUE9QVVAiLCJDTE9TRV9QT1BVUCIsImciLCJldmFsIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwicHJvcElzRW51bWVyYWJsZSIsInByb3BlcnR5SXNFbnVtZXJhYmxlIiwidGVzdDEiLCJTdHJpbmciLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwidGVzdDIiLCJmcm9tQ2hhckNvZGUiLCJtYXAiLCJqb2luIiwidGVzdDMiLCJzcGxpdCIsImZvckVhY2giLCJsZXR0ZXIiLCJzaG91bGRVc2VOYXRpdmUiLCJmcm9tIiwic3ltYm9scyIsInRvIiwidmFsIiwidG9PYmplY3QiLCJSRUFDVF9TVEFUSUNTIiwiZGVmYXVsdFByb3BzIiwiZ2V0RGVmYXVsdFByb3BzIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzIiwibWl4aW5zIiwiS05PV05fU1RBVElDUyIsImNhbGxlciIsImNhbGxlZSIsImFyaXR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwib2JqZWN0UHJvdG90eXBlIiwiaG9pc3ROb25SZWFjdFN0YXRpY3MiLCJ0YXJnZXRDb21wb25lbnQiLCJzb3VyY2VDb21wb25lbnQiLCJibGFja2xpc3QiLCJpbmhlcml0ZWRDb21wb25lbnQiLCJjb25jYXQiLCJkZXNjcmlwdG9yIiwiZmFjdG9yeSIsInN5bWJvbE9ic2VydmFibGVQb255ZmlsbCIsIm9ic2VydmFibGUiLCJBY3Rpb25UeXBlcyIsIklOSVQiLCJNYXRoIiwicmFuZG9tIiwic3Vic3RyaW5nIiwiUkVQTEFDRSIsIl90eXBlb2YiLCJpdGVyYXRvciIsImlzUGxhaW5PYmplY3QiLCJwcm90byIsImNyZWF0ZVN0b3JlIiwicmVkdWNlciIsInByZWxvYWRlZFN0YXRlIiwiZW5oYW5jZXIiLCJjdXJyZW50UmVkdWNlciIsImN1cnJlbnRTdGF0ZSIsImN1cnJlbnRMaXN0ZW5lcnMiLCJuZXh0TGlzdGVuZXJzIiwiaXNEaXNwYXRjaGluZyIsImVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMiLCJpbmRleCIsImFjdGlvbiIsInJlcGxhY2VSZWR1Y2VyIiwibmV4dFJlZHVjZXIiLCJzeW1ib2xfb2JzZXJ2YWJsZV9fV0VCUEFDS19JTVBPUlRFRF9NT0RVTEVfMF9fIiwib3V0ZXJTdWJzY3JpYmUiLCJvYnNlcnZlciIsIm9ic2VydmVTdGF0ZSIsImdldFVuZGVmaW5lZFN0YXRlRXJyb3JNZXNzYWdlIiwiYWN0aW9uVHlwZSIsImNvbWJpbmVSZWR1Y2VycyIsInJlZHVjZXJzIiwicmVkdWNlcktleXMiLCJmaW5hbFJlZHVjZXJzIiwiZmluYWxSZWR1Y2VyS2V5cyIsInNoYXBlQXNzZXJ0aW9uRXJyb3IiLCJhc3NlcnRSZWR1Y2VyU2hhcGUiLCJoYXNDaGFuZ2VkIiwiX2kiLCJfa2V5IiwicHJldmlvdXNTdGF0ZUZvcktleSIsIm5leHRTdGF0ZUZvcktleSIsImVycm9yTWVzc2FnZSIsImJpbmRBY3Rpb25DcmVhdG9yIiwiYWN0aW9uQ3JlYXRvciIsImFwcGx5IiwiYmluZEFjdGlvbkNyZWF0b3JzIiwiYWN0aW9uQ3JlYXRvcnMiLCJib3VuZEFjdGlvbkNyZWF0b3JzIiwiY29tcG9zZSIsIl9sZW4iLCJmdW5jcyIsIkFycmF5IiwicmVkdWNlIiwiYXBwbHlNaWRkbGV3YXJlIiwibWlkZGxld2FyZXMiLCJfbGVuMiIsIl9rZXkyIiwiX2Rpc3BhdGNoIiwibWlkZGxld2FyZUFQSSIsImNoYWluIiwibWlkZGxld2FyZSIsImNzcyIsImxvY2F0aW9uIiwiYmFzZVVybCIsInByb3RvY29sIiwiaG9zdCIsImN1cnJlbnREaXIiLCJwYXRobmFtZSIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCJ0cmltIiwiJDEiLCJ0ZXN0IiwiZm4iLCJtZW1vIiwic3R5bGVzSW5Eb20iLCJpc09sZElFIiwiZG9jdW1lbnQiLCJhbGwiLCJhdG9iIiwiZ2V0RWxlbWVudCIsInN0eWxlVGFyZ2V0IiwicXVlcnlTZWxlY3RvciIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsInNpbmdsZXRvbiIsInNpbmdsZXRvbkNvdW50ZXIiLCJzdHlsZXNJbnNlcnRlZEF0VG9wIiwiZml4VXJscyIsImFkZFN0eWxlc1RvRG9tIiwic3R5bGVzIiwiaXRlbSIsImRvbVN0eWxlIiwiaWQiLCJyZWZzIiwiaiIsInBhcnRzIiwiYWRkU3R5bGUiLCJsaXN0VG9TdHlsZXMiLCJsaXN0IiwibmV3U3R5bGVzIiwiYmFzZSIsInBhcnQiLCJtZWRpYSIsInNvdXJjZU1hcCIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiaW5zZXJ0SW50byIsImxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wIiwiaW5zZXJ0QXQiLCJuZXh0U2libGluZyIsImluc2VydEJlZm9yZSIsImFwcGVuZENoaWxkIiwiZmlyc3RDaGlsZCIsImJlZm9yZSIsInJlbW92ZVN0eWxlRWxlbWVudCIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsImlkeCIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImF0dHJzIiwiYWRkQXR0cnMiLCJlbCIsInNldEF0dHJpYnV0ZSIsInVwZGF0ZSIsInJlbW92ZSIsInRyYW5zZm9ybSIsInN0eWxlSW5kZXgiLCJhcHBseVRvU2luZ2xldG9uVGFnIiwiVVJMIiwiY3JlYXRlT2JqZWN0VVJMIiwicmV2b2tlT2JqZWN0VVJMIiwiQmxvYiIsImJ0b2EiLCJsaW5rIiwicmVsIiwiY3JlYXRlTGlua0VsZW1lbnQiLCJhdXRvRml4VXJscyIsImNvbnZlcnRUb0Fic29sdXRlVXJscyIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiYmxvYiIsIm9sZFNyYyIsImhyZWYiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImNyZWF0ZVRleHROb2RlIiwibmV3T2JqIiwiREVCVUciLCJuZXdMaXN0IiwibWF5UmVtb3ZlIiwidGV4dFN0b3JlIiwicmVwbGFjZVRleHQiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwidXNlU291cmNlTWFwIiwiY29udGVudCIsImNzc01hcHBpbmciLCJzb3VyY2VNYXBwaW5nIiwic291cmNlVVJMcyIsInNvdXJjZXMiLCJzb3VyY2VSb290IiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiaG1yIiwibG9jYWxzIiwiaW52YXJpYW50IiwiUmVhY3RQcm9wVHlwZXNTZWNyZXQiLCJzaGltIiwicHJvcE5hbWUiLCJjb21wb25lbnROYW1lIiwicHJvcEZ1bGxOYW1lIiwic2VjcmV0IiwiZ2V0U2hpbSIsIlJlYWN0UHJvcFR5cGVzIiwiYXJyYXkiLCJib29sIiwibnVtYmVyIiwic3RyaW5nIiwic3ltYm9sIiwiYW55IiwiYXJyYXlPZiIsImluc3RhbmNlT2YiLCJub2RlIiwib2JqZWN0T2YiLCJvbmVPZiIsIm9uZU9mVHlwZSIsImV4YWN0IiwiY2hlY2tQcm9wVHlwZXMiLCJQcm9wVHlwZXMiLCJfcmVhY3RSZWR1eCIsIl9Ub2RvQXBwIiwiY29ubmVjdCIsImNvdW50ZXIiLCJkYXRlIiwiX2FjdGlvbnMiLCJhY3Rpb25zIiwiX3JlYWN0IiwiVG9kb0xpc3QiLCJsb2ciLCJIZWFkZXIiLCJfdGhpczIiLCJvbkNsaWNrIiwibWVudSIsImFkZCIsInRvZG8iLCJDIiwiX3RvQ29uc3VtYWJsZUFycmF5IiwicG9wdXAiLCJ2aXNpYmxlIiwiZmFzbGUiLCJvcmlnaW5hbE1vZHVsZSIsIndlYnBhY2tQb2x5ZmlsbCIsImRlZmF1bHRWaWV3Iiwib3duZXJEb2N1bWVudCIsIk5vZGUiLCJub2RlVHlwZSIsIm5vZGVOYW1lIiwiaXNOb2RlIiwiaXNUZXh0Tm9kZSIsImNvbnRhaW5zTm9kZSIsIm91dGVyTm9kZSIsImlubmVyTm9kZSIsImNvbnRhaW5zIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJkb2MiLCJhY3RpdmVFbGVtZW50IiwiYm9keSIsImNhblVzZURPTSIsIkV4ZWN1dGlvbkVudmlyb25tZW50IiwiY2FuVXNlV29ya2VycyIsIldvcmtlciIsImNhblVzZUV2ZW50TGlzdGVuZXJzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwiY2FuVXNlVmlld3BvcnQiLCJzY3JlZW4iLCJpc0luV29ya2VyIiwiYWEiLCJjYSIsInYiLCJkYSIsImVhIiwiZmEiLCJoYSIsIkEiLCJCIiwiX2NhdWdodEVycm9yIiwiX2hhc0NhdWdodEVycm9yIiwiX3JldGhyb3dFcnJvciIsIl9oYXNSZXRocm93RXJyb3IiLCJpbnZva2VHdWFyZGVkQ2FsbGJhY2siLCJoIiwiayIsImludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvciIsImhhc0NhdWdodEVycm9yIiwiY2xlYXJDYXVnaHRFcnJvciIsInJldGhyb3dDYXVnaHRFcnJvciIsImxhIiwibWEiLCJuYSIsIm9hIiwiZXh0cmFjdEV2ZW50cyIsImV2ZW50VHlwZXMiLCJwYSIsInBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzIiwicWEiLCJyZWdpc3RyYXRpb25OYW1lIiwicmEiLCJzYSIsImRlcGVuZGVuY2llcyIsInRhIiwidWEiLCJ2YSIsInBsdWdpbnMiLCJldmVudE5hbWVEaXNwYXRjaENvbmZpZ3MiLCJyZWdpc3RyYXRpb25OYW1lTW9kdWxlcyIsInJlZ2lzdHJhdGlvbk5hbWVEZXBlbmRlbmNpZXMiLCJwb3NzaWJsZVJlZ2lzdHJhdGlvbk5hbWVzIiwiaW5qZWN0RXZlbnRQbHVnaW5PcmRlciIsImluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSIsIndhIiwieGEiLCJ5YSIsInphIiwiY3VycmVudFRhcmdldCIsIkFhIiwiaXNBcnJheSIsIkJhIiwiQ2EiLCJEYSIsIl9kaXNwYXRjaExpc3RlbmVycyIsIl9kaXNwYXRjaEluc3RhbmNlcyIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwiaXNQZXJzaXN0ZW50IiwicmVsZWFzZSIsIkVhIiwiRmEiLCJHYSIsIkhhIiwic3RhdGVOb2RlIiwiZGlzYWJsZWQiLCJJYSIsIkphIiwiS2EiLCJpbmplY3Rpb24iLCJnZXRMaXN0ZW5lciIsInJ1bkV2ZW50c0luQmF0Y2giLCJydW5FeHRyYWN0ZWRFdmVudHNJbkJhdGNoIiwiTGEiLCJNYSIsIk5hIiwidGFnIiwiT2EiLCJQYSIsIlFhIiwicHJlY2FjaGVGaWJlck5vZGUiLCJnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZSIsImdldEluc3RhbmNlRnJvbU5vZGUiLCJnZXROb2RlRnJvbUluc3RhbmNlIiwiZ2V0RmliZXJDdXJyZW50UHJvcHNGcm9tTm9kZSIsInVwZGF0ZUZpYmVyUHJvcHMiLCJGIiwicmV0dXJuIiwiUmEiLCJTYSIsImRpc3BhdGNoQ29uZmlnIiwiVGEiLCJfdGFyZ2V0SW5zdCIsIlVhIiwiVmEiLCJYYSIsIllhIiwiWmEiLCJhbHRlcm5hdGUiLCIkYSIsImFjY3VtdWxhdGVUd29QaGFzZURpc3BhdGNoZXMiLCJhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldCIsImFjY3VtdWxhdGVFbnRlckxlYXZlRGlzcGF0Y2hlcyIsImFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzIiwiYWIiLCJ0b0xvd2VyQ2FzZSIsImJiIiwiYW5pbWF0aW9uZW5kIiwiYW5pbWF0aW9uaXRlcmF0aW9uIiwiYW5pbWF0aW9uc3RhcnQiLCJ0cmFuc2l0aW9uZW5kIiwiY2IiLCJkYiIsImViIiwiYW5pbWF0aW9uIiwidHJhbnNpdGlvbiIsImZiIiwiZ2IiLCJoYiIsImliIiwiamIiLCJrYiIsImxiIiwiZG9jdW1lbnRFbGVtZW50IiwiRyIsIl9yb290IiwiX3N0YXJ0VGV4dCIsIl9mYWxsYmFja1RleHQiLCJtYiIsIm5iIiwib2IiLCJwYiIsImV2ZW50UGhhc2UiLCJidWJibGVzIiwiY2FuY2VsYWJsZSIsInRpbWVTdGFtcCIsIm5vdyIsImRlZmF1bHRQcmV2ZW50ZWQiLCJpc1RydXN0ZWQiLCJIIiwibmF0aXZlRXZlbnQiLCJJbnRlcmZhY2UiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJyZXR1cm5WYWx1ZSIsInJiIiwiZXZlbnRQb29sIiwicG9wIiwic2IiLCJkZXN0cnVjdG9yIiwicWIiLCJnZXRQb29sZWQiLCJwcmV2ZW50RGVmYXVsdCIsInN0b3BQcm9wYWdhdGlvbiIsImNhbmNlbEJ1YmJsZSIsInBlcnNpc3QiLCJleHRlbmQiLCJ0YiIsInViIiwidmIiLCJ3YiIsInhiIiwiZG9jdW1lbnRNb2RlIiwieWIiLCJ6YiIsIkFiIiwiQmIiLCJiZWZvcmVJbnB1dCIsImJ1YmJsZWQiLCJjYXB0dXJlZCIsImNvbXBvc2l0aW9uRW5kIiwiY29tcG9zaXRpb25TdGFydCIsImNvbXBvc2l0aW9uVXBkYXRlIiwiQ2IiLCJEYiIsImtleUNvZGUiLCJFYiIsImRldGFpbCIsIkZiIiwiSWIiLCJ3aGljaCIsIkdiIiwiY3RybEtleSIsImFsdEtleSIsIm1ldGFLZXkiLCJjaGFyIiwiSGIiLCJKYiIsIktiIiwiaW5qZWN0RmliZXJDb250cm9sbGVkSG9zdENvbXBvbmVudCIsIkxiIiwiTWIiLCJOYiIsInJlc3RvcmVDb250cm9sbGVkU3RhdGUiLCJPYiIsIlBiIiwiUWIiLCJSYiIsImVucXVldWVTdGF0ZVJlc3RvcmUiLCJuZWVkc1N0YXRlUmVzdG9yZSIsInJlc3RvcmVTdGF0ZUlmTmVlZGVkIiwiU2IiLCJUYiIsIlViIiwiVmIiLCJXYiIsIlhiIiwiY29sb3IiLCJkYXRldGltZSIsImRhdGV0aW1lLWxvY2FsIiwiZW1haWwiLCJtb250aCIsInBhc3N3b3JkIiwicmFuZ2UiLCJzZWFyY2giLCJ0ZWwiLCJ0ZXh0IiwidGltZSIsInVybCIsIndlZWsiLCJZYiIsIlpiIiwiY29ycmVzcG9uZGluZ1VzZUVsZW1lbnQiLCIkYiIsImFjIiwiY2MiLCJfdmFsdWVUcmFja2VyIiwic2V0IiwiZ2V0VmFsdWUiLCJzZXRWYWx1ZSIsInN0b3BUcmFja2luZyIsImJjIiwiZGMiLCJjaGVja2VkIiwiZWMiLCJfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRCIsIlJlYWN0Q3VycmVudE93bmVyIiwiSSIsImZvciIsImZjIiwiZ2MiLCJoYyIsImljIiwiamMiLCJtYyIsIm5jIiwib2MiLCJwYyIsInFjIiwicmMiLCJzYyIsInRjIiwicGVuZGluZ1Byb3BzIiwiJCR0eXBlb2YiLCJ2YyIsIl9kZWJ1Z093bmVyIiwiX2RlYnVnU291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwid2MiLCJ4YyIsInljIiwiSiIsImFjY2VwdHNCb29sZWFucyIsImF0dHJpYnV0ZU5hbWUiLCJhdHRyaWJ1dGVOYW1lc3BhY2UiLCJtdXN0VXNlUHJvcGVydHkiLCJwcm9wZXJ0eU5hbWUiLCJLIiwiQ2MiLCJEYyIsInRvVXBwZXJDYXNlIiwiRWMiLCJBYyIsImlzTmFOIiwiQmMiLCJ6YyIsInJlbW92ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5TIiwiRmMiLCJkZWZhdWx0Q2hlY2tlZCIsImRlZmF1bHRWYWx1ZSIsIl93cmFwcGVyU3RhdGUiLCJpbml0aWFsQ2hlY2tlZCIsIkdjIiwiSGMiLCJpbml0aWFsVmFsdWUiLCJjb250cm9sbGVkIiwiSWMiLCJKYyIsIktjIiwiTGMiLCJ0YWJJbmRleCIsIk1jIiwiY2hhbmdlIiwiTmMiLCJPYyIsIlBjIiwiUWMiLCJSYyIsIlNjIiwiVGMiLCJVYyIsImRldGFjaEV2ZW50IiwiVmMiLCJXYyIsIlhjIiwiWWMiLCJaYyIsIiRjIiwiX2lzSW5wdXRFdmVudFN1cHBvcnRlZCIsImFkIiwidmlldyIsImJkIiwiQWx0IiwiQ29udHJvbCIsIk1ldGEiLCJTaGlmdCIsImNkIiwiZ2V0TW9kaWZpZXJTdGF0ZSIsImRkIiwiZWQiLCJzY3JlZW5YIiwic2NyZWVuWSIsImNsaWVudFgiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNoaWZ0S2V5IiwiYnV0dG9uIiwiYnV0dG9ucyIsInJlbGF0ZWRUYXJnZXQiLCJmcm9tRWxlbWVudCIsInNyY0VsZW1lbnQiLCJ0b0VsZW1lbnQiLCJmZCIsInBvaW50ZXJJZCIsIndpZHRoIiwiaGVpZ2h0IiwicHJlc3N1cmUiLCJ0aWx0WCIsInRpbHRZIiwicG9pbnRlclR5cGUiLCJpc1ByaW1hcnkiLCJnZCIsIm1vdXNlRW50ZXIiLCJtb3VzZUxlYXZlIiwicG9pbnRlckVudGVyIiwicG9pbnRlckxlYXZlIiwiaGQiLCJwYXJlbnRXaW5kb3ciLCJlZmZlY3RUYWciLCJqZCIsImtkIiwiY2hpbGQiLCJzaWJsaW5nIiwibGQiLCJuZCIsImFuaW1hdGlvbk5hbWUiLCJlbGFwc2VkVGltZSIsInBzZXVkb0VsZW1lbnQiLCJvZCIsImNsaXBib2FyZERhdGEiLCJwZCIsInFkIiwiY2hhckNvZGUiLCJyZCIsIkVzYyIsIlNwYWNlYmFyIiwiTGVmdCIsIlVwIiwiUmlnaHQiLCJEb3duIiwiRGVsIiwiV2luIiwiTWVudSIsIkFwcHMiLCJTY3JvbGwiLCJNb3pQcmludGFibGVLZXkiLCJzZCIsIjgiLCI5IiwiMTIiLCIxMyIsIjE2IiwiMTciLCIxOCIsIjE5IiwiMjAiLCIyNyIsIjMyIiwiMzMiLCIzNCIsIjM1IiwiMzYiLCIzNyIsIjM4IiwiMzkiLCI0MCIsIjQ1IiwiNDYiLCIxMTIiLCIxMTMiLCIxMTQiLCIxMTUiLCIxMTYiLCIxMTciLCIxMTgiLCIxMTkiLCIxMjAiLCIxMjEiLCIxMjIiLCIxMjMiLCIxNDQiLCIxNDUiLCIyMjQiLCJ0ZCIsInJlcGVhdCIsImxvY2FsZSIsInVkIiwiZGF0YVRyYW5zZmVyIiwidmQiLCJ0b3VjaGVzIiwidGFyZ2V0VG91Y2hlcyIsImNoYW5nZWRUb3VjaGVzIiwid2QiLCJ4ZCIsImRlbHRhWCIsIndoZWVsRGVsdGFYIiwiZGVsdGFZIiwid2hlZWxEZWx0YVkiLCJ3aGVlbERlbHRhIiwiZGVsdGFaIiwiZGVsdGFNb2RlIiwieWQiLCJ6ZCIsIkFkIiwiQmQiLCJpc0ludGVyYWN0aXZlIiwiQ2QiLCJpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGUiLCJEZCIsIkVkIiwiRmQiLCJ0YXJnZXRJbnN0IiwiYW5jZXN0b3JzIiwiY29udGFpbmVySW5mbyIsInRvcExldmVsVHlwZSIsIkdkIiwiSWQiLCJMIiwiSmQiLCJLZCIsIkxkIiwiTWQiLCJfZW5hYmxlZCIsInNldEVuYWJsZWQiLCJpc0VuYWJsZWQiLCJ0cmFwQnViYmxlZEV2ZW50IiwidHJhcENhcHR1cmVkRXZlbnQiLCJkaXNwYXRjaEV2ZW50IiwiTmQiLCJPZCIsIlBkIiwiUWQiLCJSZCIsIlNkIiwidGV4dENvbnRlbnQiLCJvZmZzZXQiLCJUZCIsImNvbnRlbnRFZGl0YWJsZSIsIlVkIiwiVmQiLCJzZWxlY3QiLCJXZCIsIlhkIiwiWWQiLCJaZCIsIiRkIiwic3RhcnQiLCJzZWxlY3Rpb25TdGFydCIsImVuZCIsInNlbGVjdGlvbkVuZCIsImdldFNlbGVjdGlvbiIsImFuY2hvck5vZGUiLCJhbmNob3JPZmZzZXQiLCJmb2N1c05vZGUiLCJmb2N1c09mZnNldCIsImFlIiwib25TZWxlY3QiLCJTaW1wbGVFdmVudFBsdWdpbiIsIkVudGVyTGVhdmVFdmVudFBsdWdpbiIsIkNoYW5nZUV2ZW50UGx1Z2luIiwiU2VsZWN0RXZlbnRQbHVnaW4iLCJCZWZvcmVJbnB1dEV2ZW50UGx1Z2luIiwiYmUiLCJwZXJmb3JtYW5jZSIsImNlIiwiZGUiLCJlZSIsImZlIiwiZ2UiLCJoZSIsImllIiwiamUiLCJrZSIsImxlIiwibWUiLCJuZSIsImRpZFRpbWVvdXQiLCJ0aW1lUmVtYWluaW5nIiwib2UiLCJwZSIsInRpbWVvdXRUaW1lIiwic2NoZWR1bGVkQ2FsbGJhY2siLCJjYWxsYmFja0lkIiwic2hpZnQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJxZSIsInBvc3RNZXNzYWdlIiwidGltZW91dCIsInJlIiwic2UiLCJzZXRUaW1lb3V0IiwiSW5maW5pdHkiLCJjbGVhclRpbWVvdXQiLCJ1ZSIsIkNoaWxkcmVuIiwidGUiLCJ2ZSIsInNlbGVjdGVkIiwiZGVmYXVsdFNlbGVjdGVkIiwid2UiLCJ3YXNNdWx0aXBsZSIsIm11bHRpcGxlIiwieGUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsInllIiwiemUiLCJBZSIsIkJlIiwiaHRtbCIsIm1hdGhtbCIsInN2ZyIsIkNlIiwiRGUiLCJFZSIsIkZlIiwibmFtZXNwYWNlVVJJIiwiaW5uZXJIVE1MIiwiTVNBcHAiLCJleGVjVW5zYWZlTG9jYWxGdW5jdGlvbiIsIkdlIiwibGFzdENoaWxkIiwibm9kZVZhbHVlIiwiSGUiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImJvcmRlckltYWdlT3V0c2V0IiwiYm9yZGVySW1hZ2VTbGljZSIsImJvcmRlckltYWdlV2lkdGgiLCJib3hGbGV4IiwiYm94RmxleEdyb3VwIiwiYm94T3JkaW5hbEdyb3VwIiwiY29sdW1uQ291bnQiLCJjb2x1bW5zIiwiZmxleCIsImZsZXhHcm93IiwiZmxleFBvc2l0aXZlIiwiZmxleFNocmluayIsImZsZXhOZWdhdGl2ZSIsImZsZXhPcmRlciIsImdyaWRSb3ciLCJncmlkUm93RW5kIiwiZ3JpZFJvd1NwYW4iLCJncmlkUm93U3RhcnQiLCJncmlkQ29sdW1uIiwiZ3JpZENvbHVtbkVuZCIsImdyaWRDb2x1bW5TcGFuIiwiZ3JpZENvbHVtblN0YXJ0IiwiZm9udFdlaWdodCIsImxpbmVDbGFtcCIsImxpbmVIZWlnaHQiLCJvcGFjaXR5Iiwib3JkZXIiLCJvcnBoYW5zIiwidGFiU2l6ZSIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJmaWxsT3BhY2l0eSIsImZsb29kT3BhY2l0eSIsInN0b3BPcGFjaXR5Iiwic3Ryb2tlRGFzaGFycmF5Iiwic3Ryb2tlRGFzaG9mZnNldCIsInN0cm9rZU1pdGVybGltaXQiLCJzdHJva2VPcGFjaXR5Iiwic3Ryb2tlV2lkdGgiLCJJZSIsIkplIiwic2V0UHJvcGVydHkiLCJjaGFyQXQiLCJLZSIsIm1lbnVpdGVtIiwiYXJlYSIsImJyIiwiY29sIiwiZW1iZWQiLCJociIsImltZyIsImlucHV0Iiwia2V5Z2VuIiwibWV0YSIsInBhcmFtIiwidHJhY2siLCJ3YnIiLCJMZSIsIk1lIiwiTmUiLCJPZSIsImJsdXIiLCJmb2N1cyIsIlBlIiwiY3JlYXRlRWxlbWVudE5TIiwiUWUiLCJSZSIsIl9faHRtbCIsIm9uY2xpY2siLCJTZSIsIlRlIiwiVWUiLCJWZSIsIldlIiwic2V0SW5pdGlhbFByb3BlcnRpZXMiLCJkaWZmUHJvcGVydGllcyIsInVwZGF0ZVByb3BlcnRpZXMiLCJkaWZmSHlkcmF0ZWRQcm9wZXJ0aWVzIiwiZGlmZkh5ZHJhdGVkVGV4dCIsIndhcm5Gb3JVbm1hdGNoZWRUZXh0Iiwid2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlRWxlbWVudCIsIndhcm5Gb3JEZWxldGVkSHlkcmF0YWJsZVRleHQiLCJ3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZEVsZW1lbnQiLCJ3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZFRleHQiLCJxdWVyeVNlbGVjdG9yQWxsIiwiZm9ybSIsIlhlIiwiWWUiLCJaZSIsImF1dG9Gb2N1cyIsIiRlIiwiYWYiLCJiZiIsImNmIiwiZGYiLCJlZiIsIlNldCIsImZmIiwiZ2YiLCJoZiIsIk0iLCJOIiwiamYiLCJPIiwia2YiLCJsZiIsIm1mIiwibmYiLCJfX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0IiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQiLCJvZiIsInBmIiwicWYiLCJyZiIsInNmIiwiX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQiLCJ0ZiIsInVmIiwibWVtb2l6ZWRTdGF0ZSIsInVwZGF0ZVF1ZXVlIiwibWVtb2l6ZWRQcm9wcyIsIm1vZGUiLCJsYXN0RWZmZWN0IiwiZmlyc3RFZmZlY3QiLCJuZXh0RWZmZWN0IiwiZXhwaXJhdGlvblRpbWUiLCJ2ZiIsIndmIiwiaXNSZWFjdENvbXBvbmVudCIsInhmIiwieWYiLCJ6ZiIsInBlbmRpbmdDaGlsZHJlbiIsImltcGxlbWVudGF0aW9uIiwiQWYiLCJlYXJsaWVzdFBlbmRpbmdUaW1lIiwibGF0ZXN0UGVuZGluZ1RpbWUiLCJlYXJsaWVzdFN1c3BlbmRlZFRpbWUiLCJsYXRlc3RTdXNwZW5kZWRUaW1lIiwibGF0ZXN0UGluZ2VkVGltZSIsInBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZSIsImZpbmlzaGVkV29yayIsInBlbmRpbmdDb250ZXh0IiwiaHlkcmF0ZSIsInJlbWFpbmluZ0V4cGlyYXRpb25UaW1lIiwiZmlyc3RCYXRjaCIsIm5leHRTY2hlZHVsZWRSb290IiwiQmYiLCJDZiIsIkRmIiwiRmYiLCJHZiIsIkhmIiwiSWYiLCJiYXNlU3RhdGUiLCJmaXJzdFVwZGF0ZSIsImxhc3RVcGRhdGUiLCJmaXJzdENhcHR1cmVkVXBkYXRlIiwibGFzdENhcHR1cmVkVXBkYXRlIiwiZmlyc3RDYXB0dXJlZEVmZmVjdCIsImxhc3RDYXB0dXJlZEVmZmVjdCIsIkpmIiwiS2YiLCJwYXlsb2FkIiwiY2FsbGJhY2siLCJMZiIsIk1mIiwiTmYiLCJPZiIsIlBmIiwiUWYiLCJ3IiwiUmYiLCJTZiIsIlRmIiwic3RhY2siLCJVZiIsIlZmIiwiV2YiLCJYZiIsIl9jb250ZXh0IiwiX2NoYW5nZWRCaXRzIiwiX2N1cnJlbnRWYWx1ZSIsIllmIiwiWmYiLCIkZiIsImFnIiwiYmciLCJjZyIsImRnIiwidGFnTmFtZSIsImVnIiwiZmciLCJoZyIsImxnIiwiaXNNb3VudGVkIiwiX3JlYWN0SW50ZXJuYWxGaWJlciIsImVucXVldWVTZXRTdGF0ZSIsImlnIiwiamciLCJrZyIsImVucXVldWVSZXBsYWNlU3RhdGUiLCJlbnF1ZXVlRm9yY2VVcGRhdGUiLCJtZyIsImlzUHVyZVJlYWN0Q29tcG9uZW50IiwibmciLCJVTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyIsIm9nIiwiZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUiLCJVTlNBRkVfY29tcG9uZW50V2lsbE1vdW50IiwiY29tcG9uZW50V2lsbE1vdW50IiwicGciLCJxZyIsIl9vd25lciIsIl9zdHJpbmdSZWYiLCJyZyIsInNnIiwiTWFwIiwiUCIsImtjIiwiSGQiLCJ1IiwidCIsInEiLCJkZWxldGUiLCJFIiwiZG9uZSIsInRnIiwidWciLCJ2ZyIsIndnIiwieGciLCJ5ZyIsInpnIiwiQWciLCJCZyIsIkNnIiwiRGciLCJRIiwiRWciLCJGZyIsIkdnIiwiUiIsIkhnIiwiSWciLCJLZyIsInVwZGF0ZXIiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsImNvbXBvbmVudFdpbGxVcGRhdGUiLCJoaWRkZW4iLCJfY2FsY3VsYXRlQ2hhbmdlZEJpdHMiLCJKZyIsInVuc3RhYmxlX29ic2VydmVkQml0cyIsIkxnIiwiUGciLCJRZyIsIlJnIiwiU2ciLCJUZyIsInN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmciLCJVZyIsIlZnIiwiV2ciLCJYZyIsIllnIiwiWmciLCIkZyIsImFoIiwiYmgiLCJjaCIsImNvbXBvbmVudERpZENhdGNoIiwiZGgiLCJjb21wb25lbnRTdGFjayIsImVoIiwiaGFzIiwiZmgiLCJnaCIsImhoIiwiaWgiLCJqaCIsImtoIiwibGgiLCJTIiwibWgiLCJUIiwibmgiLCJvaCIsIlUiLCJwaCIsInFoIiwicmgiLCJzaCIsInRoIiwidWgiLCJ2aCIsIndoIiwiWCIsInhoIiwiZ2V0RGVyaXZlZFN0YXRlRnJvbUNhdGNoIiwieWgiLCJ6aCIsIkFoIiwiQmgiLCJDaCIsIkRoIiwiRWgiLCJGaCIsIlYiLCJHaCIsIkhoIiwiVyIsIlkiLCJJaCIsIkpoIiwiS2giLCJMaCIsIloiLCJNaCIsIk5oIiwiT2giLCJQaCIsIlFoIiwiUmgiLCJTaCIsIlRoIiwiVWgiLCJWaCIsIldoIiwiX29uQ29tcGxldGUiLCJYaCIsIl9leHBpcmF0aW9uVGltZSIsIl9kZWZlciIsInJhbmdlQ291bnQiLCJXYSIsImZvY3VzZWRFbGVtIiwic2VsZWN0aW9uUmFuZ2UiLCJEIiwiamEiLCJoaSIsIl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlIiwieiIsIm1pbiIsImNyZWF0ZVJhbmdlIiwic2V0U3RhcnQiLCJyZW1vdmVBbGxSYW5nZXMiLCJhZGRSYW5nZSIsInNldEVuZCIsImxlZnQiLCJzY3JvbGxMZWZ0IiwidG9wIiwic2Nyb2xsVG9wIiwiZ2ciLCJsYyIsImJhIiwicmkiLCJzaSIsIk1nIiwiTmciLCJ0aSIsInVjIiwiT2ciLCJ1aSIsIlloIiwiWmgiLCIkaCIsImFpIiwiYmkiLCJjaSIsImRpIiwiZWkiLCJmaSIsImZpbmRGaWJlckJ5SG9zdEluc3RhbmNlIiwiaXNEaXNhYmxlZCIsInN1cHBvcnRzRmliZXIiLCJpbmplY3QiLCJvbkNvbW1pdEZpYmVyUm9vdCIsIm9uQ29tbWl0RmliZXJVbm1vdW50IiwiRWYiLCJmaW5kSG9zdEluc3RhbmNlQnlGaWJlciIsImdpIiwiamkiLCJfY2FsbGJhY2tzIiwiX25leHQiLCJfaGFzQ2hpbGRyZW4iLCJfZGlkQ29tcGxldGUiLCJfY2hpbGRyZW4iLCJraSIsIl9kaWRDb21taXQiLCJfb25Db21taXQiLCJsaSIsIl9pbnRlcm5hbFJvb3QiLCJtaSIsIm9pIiwiX3JlYWN0Um9vdENvbnRhaW5lciIsImxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lciIsImhhc0F0dHJpYnV0ZSIsIm5pIiwicGkiLCJpaSIsInRoZW4iLCJjb21taXQiLCJ1bm1vdW50IiwiY3JlYXRlQmF0Y2giLCJxaSIsImNyZWF0ZVBvcnRhbCIsImZpbmRET01Ob2RlIiwidW5zdGFibGVfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIiLCJ1bm1vdW50Q29tcG9uZW50QXROb2RlIiwidW5zdGFibGVfY3JlYXRlUG9ydGFsIiwidW5zdGFibGVfYmF0Y2hlZFVwZGF0ZXMiLCJ1bnN0YWJsZV9kZWZlcnJlZFVwZGF0ZXMiLCJmbHVzaFN5bmMiLCJ1bnN0YWJsZV9mbHVzaENvbnRyb2xsZWQiLCJFdmVudFBsdWdpbkh1YiIsIkV2ZW50UGx1Z2luUmVnaXN0cnkiLCJFdmVudFByb3BhZ2F0b3JzIiwiUmVhY3RDb250cm9sbGVkQ29tcG9uZW50IiwiUmVhY3RET01Db21wb25lbnRUcmVlIiwiUmVhY3RET01FdmVudExpc3RlbmVyIiwidW5zdGFibGVfY3JlYXRlUm9vdCIsImJ1bmRsZVR5cGUiLCJyZW5kZXJlclBhY2thZ2VOYW1lIiwidmkiLCJ3aSIsIl9fc2VsZiIsIl9fc291cmNlIiwia2V5UHJlZml4IiwiY291bnQiLCI9IiwiOiIsImVzY2FwZSIsInRvQXJyYXkiLCJjcmVhdGVSZWYiLCJQdXJlQ29tcG9uZW50IiwiY3JlYXRlQ29udGV4dCIsIl9kZWZhdWx0VmFsdWUiLCJfY3VycmVudFZhbHVlMiIsIl9jaGFuZ2VkQml0czIiLCJDb25zdW1lciIsImZvcndhcmRSZWYiLCJGcmFnbWVudCIsIlN0cmljdE1vZGUiLCJ1bnN0YWJsZV9Bc3luY01vZGUiLCJ1bnN0YWJsZV9Qcm9maWxlciIsImNsb25lRWxlbWVudCIsImNyZWF0ZUZhY3RvcnkiLCJpc1ZhbGlkRWxlbWVudCIsIl9yZWFjdERvbSIsIl9yZWR1eCIsIl9yZWR1Y2VycyIsIkZvcm1hdCIsImZtdCIsIk0rIiwiZ2V0TW9udGgiLCJkKyIsImdldERhdGUiLCJoKyIsImdldEhvdXJzIiwibSsiLCJnZXRNaW51dGVzIiwicysiLCJnZXRTZWNvbmRzIiwicSsiLCJmbG9vciIsImdldE1pbGxpc2Vjb25kcyIsIlJlZ0V4cCIsImdldEZ1bGxZZWFyIiwic3Vic3RyIiwiaW5pdGlhbFN0YXRlIiwiX0FwcDIiLCJnZXRFbGVtZW50QnlJZCIsImZyZWVHbG9iYWwiXSwibWFwcGluZ3MiOiJhQUNBLElBQUFBLEtBR0EsU0FBQUMsRUFBQUMsR0FHQSxHQUFBRixFQUFBRSxHQUNBLE9BQUFGLEVBQUFFLEdBQUFDLFFBR0EsSUFBQUMsRUFBQUosRUFBQUUsSUFDQUcsRUFBQUgsRUFDQUksR0FBQSxFQUNBSCxZQVVBLE9BTkFJLEVBQUFMLEdBQUFNLEtBQUFKLEVBQUFELFFBQUFDLElBQUFELFFBQUFGLEdBR0FHLEVBQUFFLEdBQUEsRUFHQUYsRUFBQUQsUUFLQUYsRUFBQVEsRUFBQUYsRUFHQU4sRUFBQVMsRUFBQVYsRUFHQUMsRUFBQVUsRUFBQSxTQUFBUixFQUFBUyxFQUFBQyxHQUNBWixFQUFBYSxFQUFBWCxFQUFBUyxJQUNBRyxPQUFBQyxlQUFBYixFQUFBUyxHQUNBSyxjQUFBLEVBQ0FDLFlBQUEsRUFDQUMsSUFBQU4sS0FNQVosRUFBQW1CLEVBQUEsU0FBQWpCLEdBQ0FZLE9BQUFDLGVBQUFiLEVBQUEsY0FBaURrQixPQUFBLEtBSWpEcEIsRUFBQXFCLEVBQUEsU0FBQWxCLEdBQ0EsSUFBQVMsRUFBQVQsS0FBQW1CLFdBQ0EsV0FBMkIsT0FBQW5CLEVBQUEsU0FDM0IsV0FBaUMsT0FBQUEsR0FFakMsT0FEQUgsRUFBQVUsRUFBQUUsRUFBQSxJQUFBQSxHQUNBQSxHQUlBWixFQUFBYSxFQUFBLFNBQUFVLEVBQUFDLEdBQXNELE9BQUFWLE9BQUFXLFVBQUFDLGVBQUFuQixLQUFBZ0IsRUFBQUMsSUFHdER4QixFQUFBMkIsRUFBQSxHQUlBM0IsSUFBQTRCLEVBQUEsc0JDekNBekIsRUFBQUQsUUFBQUYsRUFBQSxHQUFBQSxpQ0N2QkFHLEVBQUFELFFBQUFGLEVBQUEsbUNDREEsU0FBQTZCLElBRUEsR0FDQSxvQkFBQUMsZ0NBQ0EsbUJBQUFBLCtCQUFBRCxTQWNBLElBRUFDLCtCQUFBRCxZQUNHLE1BQUFFLEdBR0hDLFFBQUFDLE1B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R0FBeUIsR0FBcEJ1cUMsT0FBT3ZxQyxHQUFHcFYsT0FBZ0IxRSxFQUFFd2xCLElBQVEsS0FBT3hsQixFQUFFd2xCLElBQUkrK0IsUUFBUSxHQUFLdmtELEVBQUV3bEIsSUFBSTlnQixVQUMzSSxPQUFPNitDLEdBT1gsSUFKQSxJQUFJaUIsR0FDQWhpQyxRQUNBRyxPQUFNLEdBRUZwakIsRUFBRSxFQUFFQSxFQUFFLEdBQUdBLElBQ2JpbEQsRUFBYWhpQyxLQUFLOWEsTUFDZHZGLE1BQU0sUUFBUTVDLEVBQ2Q4QyxNQUFLLElBQUlDLE1BQU9naEQsT0FBTyxnQkFLL0IsSUFBTS85QyxHQUFRLEVBQUE2OUMsRUFBQXR0QyxjQUNWLEVBQUFzdEMsRUFBQWxzQyxrQkFBaUJzTCxZQUFNRyxnQkFDdkI2aEMsSUFXSixFQUFBckIsRUFBQWo5QyxRQUNJMkwsRUFBQUMsUUFBQUMsY0FBQzBQLEVBQUE3YyxVQUFTVyxNQUFPQSxHQUNqQnNNLEVBQUFDLFFBQUFDLGNBQUMweUMsRUFBQTN5QyxRQUFELE9BR0FzSSxTQUFTc3FDLGVBQWUsdUNDM0Q1QixTQUFBcGhELEdBQ0EsSUFBQXFoRCxFQUFBLGlCQUFBcmhELFFBQUFyRCxpQkFBQXFELEVBRUFFLEVBQUEiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXyhfX3dlYnBhY2tfcmVxdWlyZV9fLnMgPSAzOSk7XG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhciBSRUFDVF9FTEVNRU5UX1RZUEUgPSAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgIFN5bWJvbC5mb3IgJiZcbiAgICBTeW1ib2wuZm9yKCdyZWFjdC5lbGVtZW50JykpIHx8XG4gICAgMHhlYWM3O1xuXG4gIHZhciBpc1ZhbGlkRWxlbWVudCA9IGZ1bmN0aW9uKG9iamVjdCkge1xuICAgIHJldHVybiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJlxuICAgICAgb2JqZWN0ICE9PSBudWxsICYmXG4gICAgICBvYmplY3QuJCR0eXBlb2YgPT09IFJFQUNUX0VMRU1FTlRfVFlQRTtcbiAgfTtcblxuICAvLyBCeSBleHBsaWNpdGx5IHVzaW5nIGBwcm9wLXR5cGVzYCB5b3UgYXJlIG9wdGluZyBpbnRvIG5ldyBkZXZlbG9wbWVudCBiZWhhdmlvci5cbiAgLy8gaHR0cDovL2ZiLm1lL3Byb3AtdHlwZXMtaW4tcHJvZFxuICB2YXIgdGhyb3dPbkRpcmVjdEFjY2VzcyA9IHRydWU7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9mYWN0b3J5V2l0aFR5cGVDaGVja2VycycpKGlzVmFsaWRFbGVtZW50LCB0aHJvd09uRGlyZWN0QWNjZXNzKTtcbn0gZWxzZSB7XG4gIC8vIEJ5IGV4cGxpY2l0bHkgdXNpbmcgYHByb3AtdHlwZXNgIHlvdSBhcmUgb3B0aW5nIGludG8gbmV3IHByb2R1Y3Rpb24gYmVoYXZpb3IuXG4gIC8vIGh0dHA6Ly9mYi5tZS9wcm9wLXR5cGVzLWluLXByb2RcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2ZhY3RvcnlXaXRoVGhyb3dpbmdTaGltcycpKCk7XG59XG4iLCIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QucHJvZHVjdGlvbi5taW4uanMnKTtcbn0gZWxzZSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QuZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIid1c2Ugc3RyaWN0JztcblxuZnVuY3Rpb24gY2hlY2tEQ0UoKSB7XG4gIC8qIGdsb2JhbCBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gKi9cbiAgaWYgKFxuICAgIHR5cGVvZiBfX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX18gPT09ICd1bmRlZmluZWQnIHx8XG4gICAgdHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRSAhPT0gJ2Z1bmN0aW9uJ1xuICApIHtcbiAgICByZXR1cm47XG4gIH1cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAvLyBUaGlzIGJyYW5jaCBpcyB1bnJlYWNoYWJsZSBiZWNhdXNlIHRoaXMgZnVuY3Rpb24gaXMgb25seSBjYWxsZWRcbiAgICAvLyBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGNvbmRpdGlvbiBpcyB0cnVlIG9ubHkgaW4gZGV2ZWxvcG1lbnQuXG4gICAgLy8gVGhlcmVmb3JlIGlmIHRoZSBicmFuY2ggaXMgc3RpbGwgaGVyZSwgZGVhZCBjb2RlIGVsaW1pbmF0aW9uIHdhc24ndFxuICAgIC8vIHByb3Blcmx5IGFwcGxpZWQuXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBtZXNzYWdlLiBSZWFjdCBEZXZUb29scyByZWxpZXMgb24gaXQuIEFsc28gbWFrZSBzdXJlXG4gICAgLy8gdGhpcyBtZXNzYWdlIGRvZXNuJ3Qgb2NjdXIgZWxzZXdoZXJlIGluIHRoaXMgZnVuY3Rpb24sIG9yIGl0IHdpbGwgY2F1c2VcbiAgICAvLyBhIGZhbHNlIHBvc2l0aXZlLlxuICAgIHRocm93IG5ldyBFcnJvcignXl9eJyk7XG4gIH1cbiAgdHJ5IHtcbiAgICAvLyBWZXJpZnkgdGhhdCB0aGUgY29kZSBhYm92ZSBoYXMgYmVlbiBkZWFkIGNvZGUgZWxpbWluYXRlZCAoRENFJ2QpLlxuICAgIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXy5jaGVja0RDRShjaGVja0RDRSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIC8vIERldlRvb2xzIHNob3VsZG4ndCBjcmFzaCBSZWFjdCwgbm8gbWF0dGVyIHdoYXQuXG4gICAgLy8gV2Ugc2hvdWxkIHN0aWxsIHJlcG9ydCBpbiBjYXNlIHdlIGJyZWFrIHRoaXMgY29kZS5cbiAgICBjb25zb2xlLmVycm9yKGVycik7XG4gIH1cbn1cblxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgLy8gRENFIGNoZWNrIHNob3VsZCBoYXBwZW4gYmVmb3JlIFJlYWN0RE9NIGJ1bmRsZSBleGVjdXRlcyBzbyB0aGF0XG4gIC8vIERldlRvb2xzIGNhbiByZXBvcnQgYmFkIG1pbmlmaWNhdGlvbiBkdXJpbmcgaW5qZWN0aW9uLlxuICBjaGVja0RDRSgpO1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qcycpO1xufSBlbHNlIHtcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1kb20uZGV2ZWxvcG1lbnQuanMnKTtcbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFVzZSBpbnZhcmlhbnQoKSB0byBhc3NlcnQgc3RhdGUgd2hpY2ggeW91ciBwcm9ncmFtIGFzc3VtZXMgdG8gYmUgdHJ1ZS5cbiAqXG4gKiBQcm92aWRlIHNwcmludGYtc3R5bGUgZm9ybWF0IChvbmx5ICVzIGlzIHN1cHBvcnRlZCkgYW5kIGFyZ3VtZW50c1xuICogdG8gcHJvdmlkZSBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGJyb2tlIGFuZCB3aGF0IHlvdSB3ZXJlXG4gKiBleHBlY3RpbmcuXG4gKlxuICogVGhlIGludmFyaWFudCBtZXNzYWdlIHdpbGwgYmUgc3RyaXBwZWQgaW4gcHJvZHVjdGlvbiwgYnV0IHRoZSBpbnZhcmlhbnRcbiAqIHdpbGwgcmVtYWluIHRvIGVuc3VyZSBsb2dpYyBkb2VzIG5vdCBkaWZmZXIgaW4gcHJvZHVjdGlvbi5cbiAqL1xuXG52YXIgaW52YXJpYW50ID0gZnVuY3Rpb24oY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignaW52YXJpYW50IHJlcXVpcmVzIGFuIGVycm9yIG1lc3NhZ2UgYXJndW1lbnQnKTtcbiAgICB9XG4gIH1cblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICAnTWluaWZpZWQgZXhjZXB0aW9uIG9jY3VycmVkOyB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgJyArXG4gICAgICAgICdmb3IgdGhlIGZ1bGwgZXJyb3IgbWVzc2FnZSBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLidcbiAgICAgICk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKFxuICAgICAgICBmb3JtYXQucmVwbGFjZSgvJXMvZywgZnVuY3Rpb24oKSB7IHJldHVybiBhcmdzW2FyZ0luZGV4KytdOyB9KVxuICAgICAgKTtcbiAgICAgIGVycm9yLm5hbWUgPSAnSW52YXJpYW50IFZpb2xhdGlvbic7XG4gICAgfVxuXG4gICAgZXJyb3IuZnJhbWVzVG9Qb3AgPSAxOyAvLyB3ZSBkb24ndCBjYXJlIGFib3V0IGludmFyaWFudCdzIG93biBmcmFtZVxuICAgIHRocm93IGVycm9yO1xuICB9XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGludmFyaWFudDtcbiIsImltcG9ydCBDIGZyb20gJy4vY29uc3RhbnRzJ1xuXG5leHBvcnQgY29uc3QgYWRkVG9kbyA9ICh0aXRsZSkgPT4gXG4gICAgKHtcbiAgICAgICAgdHlwZTpcIkFERF9UT0RPXCIsXG4gICAgICAgIHRpdGxlLFxuICAgICAgICBkYXRhOiBuZXcgRGF0ZSgpXG4gICAgfSkiLCJcInVzZSBzdHJpY3RcIjtcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG5mdW5jdGlvbiBtYWtlRW1wdHlGdW5jdGlvbihhcmcpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gYXJnO1xuICB9O1xufVxuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gYWNjZXB0cyBhbmQgZGlzY2FyZHMgaW5wdXRzOyBpdCBoYXMgbm8gc2lkZSBlZmZlY3RzLiBUaGlzIGlzXG4gKiBwcmltYXJpbHkgdXNlZnVsIGlkaW9tYXRpY2FsbHkgZm9yIG92ZXJyaWRhYmxlIGZ1bmN0aW9uIGVuZHBvaW50cyB3aGljaFxuICogYWx3YXlzIG5lZWQgdG8gYmUgY2FsbGFibGUsIHNpbmNlIEpTIGxhY2tzIGEgbnVsbC1jYWxsIGlkaW9tIGFsYSBDb2NvYS5cbiAqL1xudmFyIGVtcHR5RnVuY3Rpb24gPSBmdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCkge307XG5cbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnMgPSBtYWtlRW1wdHlGdW5jdGlvbjtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNGYWxzZSA9IG1ha2VFbXB0eUZ1bmN0aW9uKGZhbHNlKTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNUcnVlID0gbWFrZUVtcHR5RnVuY3Rpb24odHJ1ZSk7XG5lbXB0eUZ1bmN0aW9uLnRoYXRSZXR1cm5zTnVsbCA9IG1ha2VFbXB0eUZ1bmN0aW9uKG51bGwpO1xuZW1wdHlGdW5jdGlvbi50aGF0UmV0dXJuc1RoaXMgPSBmdW5jdGlvbiAoKSB7XG4gIHJldHVybiB0aGlzO1xufTtcbmVtcHR5RnVuY3Rpb24udGhhdFJldHVybnNBcmd1bWVudCA9IGZ1bmN0aW9uIChhcmcpIHtcbiAgcmV0dXJuIGFyZztcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1wdHlGdW5jdGlvbjsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbi8qKlxuICogVXNlIGludmFyaWFudCgpIHRvIGFzc2VydCBzdGF0ZSB3aGljaCB5b3VyIHByb2dyYW0gYXNzdW1lcyB0byBiZSB0cnVlLlxuICpcbiAqIFByb3ZpZGUgc3ByaW50Zi1zdHlsZSBmb3JtYXQgKG9ubHkgJXMgaXMgc3VwcG9ydGVkKSBhbmQgYXJndW1lbnRzXG4gKiB0byBwcm92aWRlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgYnJva2UgYW5kIHdoYXQgeW91IHdlcmVcbiAqIGV4cGVjdGluZy5cbiAqXG4gKiBUaGUgaW52YXJpYW50IG1lc3NhZ2Ugd2lsbCBiZSBzdHJpcHBlZCBpbiBwcm9kdWN0aW9uLCBidXQgdGhlIGludmFyaWFudFxuICogd2lsbCByZW1haW4gdG8gZW5zdXJlIGxvZ2ljIGRvZXMgbm90IGRpZmZlciBpbiBwcm9kdWN0aW9uLlxuICovXG5cbnZhciB2YWxpZGF0ZUZvcm1hdCA9IGZ1bmN0aW9uIHZhbGlkYXRlRm9ybWF0KGZvcm1hdCkge307XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIHZhbGlkYXRlRm9ybWF0ID0gZnVuY3Rpb24gdmFsaWRhdGVGb3JtYXQoZm9ybWF0KSB7XG4gICAgaWYgKGZvcm1hdCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ2ludmFyaWFudCByZXF1aXJlcyBhbiBlcnJvciBtZXNzYWdlIGFyZ3VtZW50Jyk7XG4gICAgfVxuICB9O1xufVxuXG5mdW5jdGlvbiBpbnZhcmlhbnQoY29uZGl0aW9uLCBmb3JtYXQsIGEsIGIsIGMsIGQsIGUsIGYpIHtcbiAgdmFsaWRhdGVGb3JtYXQoZm9ybWF0KTtcblxuICBpZiAoIWNvbmRpdGlvbikge1xuICAgIHZhciBlcnJvcjtcbiAgICBpZiAoZm9ybWF0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKCdNaW5pZmllZCBleGNlcHRpb24gb2NjdXJyZWQ7IHVzZSB0aGUgbm9uLW1pbmlmaWVkIGRldiBlbnZpcm9ubWVudCAnICsgJ2ZvciB0aGUgZnVsbCBlcnJvciBtZXNzYWdlIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuJyk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBhcmdzID0gW2EsIGIsIGMsIGQsIGUsIGZdO1xuICAgICAgdmFyIGFyZ0luZGV4ID0gMDtcbiAgICAgIGVycm9yID0gbmV3IEVycm9yKGZvcm1hdC5yZXBsYWNlKC8lcy9nLCBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBhcmdzW2FyZ0luZGV4KytdO1xuICAgICAgfSkpO1xuICAgICAgZXJyb3IubmFtZSA9ICdJbnZhcmlhbnQgVmlvbGF0aW9uJztcbiAgICB9XG5cbiAgICBlcnJvci5mcmFtZXNUb1BvcCA9IDE7IC8vIHdlIGRvbid0IGNhcmUgYWJvdXQgaW52YXJpYW50J3Mgb3duIGZyYW1lXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnZhcmlhbnQ7IiwiLyogZ2xvYmFsIHdpbmRvdyAqL1xuaW1wb3J0IHBvbnlmaWxsIGZyb20gJy4vcG9ueWZpbGwuanMnO1xuXG52YXIgcm9vdDtcblxuaWYgKHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykge1xuICByb290ID0gc2VsZjtcbn0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IHdpbmRvdztcbn0gZWxzZSBpZiAodHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IGdsb2JhbDtcbn0gZWxzZSBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgcm9vdCA9IG1vZHVsZTtcbn0gZWxzZSB7XG4gIHJvb3QgPSBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xufVxuXG52YXIgcmVzdWx0ID0gcG9ueWZpbGwocm9vdCk7XG5leHBvcnQgZGVmYXVsdCByZXN1bHQ7XG4iLCJpbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuXG5leHBvcnQgdmFyIHN1YnNjcmlwdGlvblNoYXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgdHJ5U3Vic2NyaWJlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICB0cnlVbnN1YnNjcmliZTogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgbm90aWZ5TmVzdGVkU3ViczogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgaXNTdWJzY3JpYmVkOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkXG59KTtcblxuZXhwb3J0IHZhciBzdG9yZVNoYXBlID0gUHJvcFR5cGVzLnNoYXBlKHtcbiAgc3Vic2NyaWJlOiBQcm9wVHlwZXMuZnVuYy5pc1JlcXVpcmVkLFxuICBkaXNwYXRjaDogUHJvcFR5cGVzLmZ1bmMuaXNSZXF1aXJlZCxcbiAgZ2V0U3RhdGU6IFByb3BUeXBlcy5mdW5jLmlzUmVxdWlyZWRcbn0pOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuaW1wb3J0IHsgQ29tcG9uZW50LCBDaGlsZHJlbiB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBQcm9wVHlwZXMgZnJvbSAncHJvcC10eXBlcyc7XG5pbXBvcnQgeyBzdG9yZVNoYXBlLCBzdWJzY3JpcHRpb25TaGFwZSB9IGZyb20gJy4uL3V0aWxzL1Byb3BUeXBlcyc7XG5pbXBvcnQgd2FybmluZyBmcm9tICcuLi91dGlscy93YXJuaW5nJztcblxudmFyIGRpZFdhcm5BYm91dFJlY2VpdmluZ1N0b3JlID0gZmFsc2U7XG5mdW5jdGlvbiB3YXJuQWJvdXRSZWNlaXZpbmdTdG9yZSgpIHtcbiAgaWYgKGRpZFdhcm5BYm91dFJlY2VpdmluZ1N0b3JlKSB7XG4gICAgcmV0dXJuO1xuICB9XG4gIGRpZFdhcm5BYm91dFJlY2VpdmluZ1N0b3JlID0gdHJ1ZTtcblxuICB3YXJuaW5nKCc8UHJvdmlkZXI+IGRvZXMgbm90IHN1cHBvcnQgY2hhbmdpbmcgYHN0b3JlYCBvbiB0aGUgZmx5LiAnICsgJ0l0IGlzIG1vc3QgbGlrZWx5IHRoYXQgeW91IHNlZSB0aGlzIGVycm9yIGJlY2F1c2UgeW91IHVwZGF0ZWQgdG8gJyArICdSZWR1eCAyLnggYW5kIFJlYWN0IFJlZHV4IDIueCB3aGljaCBubyBsb25nZXIgaG90IHJlbG9hZCByZWR1Y2VycyAnICsgJ2F1dG9tYXRpY2FsbHkuIFNlZSBodHRwczovL2dpdGh1Yi5jb20vcmVhY3Rqcy9yZWFjdC1yZWR1eC9yZWxlYXNlcy8nICsgJ3RhZy92Mi4wLjAgZm9yIHRoZSBtaWdyYXRpb24gaW5zdHJ1Y3Rpb25zLicpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlUHJvdmlkZXIoKSB7XG4gIHZhciBfUHJvdmlkZXIkY2hpbGRDb250ZXg7XG5cbiAgdmFyIHN0b3JlS2V5ID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiAnc3RvcmUnO1xuICB2YXIgc3ViS2V5ID0gYXJndW1lbnRzWzFdO1xuXG4gIHZhciBzdWJzY3JpcHRpb25LZXkgPSBzdWJLZXkgfHwgc3RvcmVLZXkgKyAnU3Vic2NyaXB0aW9uJztcblxuICB2YXIgUHJvdmlkZXIgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgIF9pbmhlcml0cyhQcm92aWRlciwgX0NvbXBvbmVudCk7XG5cbiAgICBQcm92aWRlci5wcm90b3R5cGUuZ2V0Q2hpbGRDb250ZXh0ID0gZnVuY3Rpb24gZ2V0Q2hpbGRDb250ZXh0KCkge1xuICAgICAgdmFyIF9yZWY7XG5cbiAgICAgIHJldHVybiBfcmVmID0ge30sIF9yZWZbc3RvcmVLZXldID0gdGhpc1tzdG9yZUtleV0sIF9yZWZbc3Vic2NyaXB0aW9uS2V5XSA9IG51bGwsIF9yZWY7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIFByb3ZpZGVyKHByb3BzLCBjb250ZXh0KSB7XG4gICAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHJvdmlkZXIpO1xuXG4gICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQpKTtcblxuICAgICAgX3RoaXNbc3RvcmVLZXldID0gcHJvcHMuc3RvcmU7XG4gICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuXG4gICAgUHJvdmlkZXIucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBDaGlsZHJlbi5vbmx5KHRoaXMucHJvcHMuY2hpbGRyZW4pO1xuICAgIH07XG5cbiAgICByZXR1cm4gUHJvdmlkZXI7XG4gIH0oQ29tcG9uZW50KTtcblxuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIFByb3ZpZGVyLnByb3RvdHlwZS5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzID0gZnVuY3Rpb24gKG5leHRQcm9wcykge1xuICAgICAgaWYgKHRoaXNbc3RvcmVLZXldICE9PSBuZXh0UHJvcHMuc3RvcmUpIHtcbiAgICAgICAgd2FybkFib3V0UmVjZWl2aW5nU3RvcmUoKTtcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgUHJvdmlkZXIucHJvcFR5cGVzID0ge1xuICAgIHN0b3JlOiBzdG9yZVNoYXBlLmlzUmVxdWlyZWQsXG4gICAgY2hpbGRyZW46IFByb3BUeXBlcy5lbGVtZW50LmlzUmVxdWlyZWRcbiAgfTtcbiAgUHJvdmlkZXIuY2hpbGRDb250ZXh0VHlwZXMgPSAoX1Byb3ZpZGVyJGNoaWxkQ29udGV4ID0ge30sIF9Qcm92aWRlciRjaGlsZENvbnRleFtzdG9yZUtleV0gPSBzdG9yZVNoYXBlLmlzUmVxdWlyZWQsIF9Qcm92aWRlciRjaGlsZENvbnRleFtzdWJzY3JpcHRpb25LZXldID0gc3Vic2NyaXB0aW9uU2hhcGUsIF9Qcm92aWRlciRjaGlsZENvbnRleCk7XG5cbiAgcmV0dXJuIFByb3ZpZGVyO1xufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVQcm92aWRlcigpOyIsImZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbi8vIGVuY2Fwc3VsYXRlcyB0aGUgc3Vic2NyaXB0aW9uIGxvZ2ljIGZvciBjb25uZWN0aW5nIGEgY29tcG9uZW50IHRvIHRoZSByZWR1eCBzdG9yZSwgYXNcbi8vIHdlbGwgYXMgbmVzdGluZyBzdWJzY3JpcHRpb25zIG9mIGRlc2NlbmRhbnQgY29tcG9uZW50cywgc28gdGhhdCB3ZSBjYW4gZW5zdXJlIHRoZVxuLy8gYW5jZXN0b3IgY29tcG9uZW50cyByZS1yZW5kZXIgYmVmb3JlIGRlc2NlbmRhbnRzXG5cbnZhciBDTEVBUkVEID0gbnVsbDtcbnZhciBudWxsTGlzdGVuZXJzID0ge1xuICBub3RpZnk6IGZ1bmN0aW9uIG5vdGlmeSgpIHt9XG59O1xuXG5mdW5jdGlvbiBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKSB7XG4gIC8vIHRoZSBjdXJyZW50L25leHQgcGF0dGVybiBpcyBjb3BpZWQgZnJvbSByZWR1eCdzIGNyZWF0ZVN0b3JlIGNvZGUuXG4gIC8vIFRPRE86IHJlZmFjdG9yK2V4cG9zZSB0aGF0IGNvZGUgdG8gYmUgcmV1c2FibGUgaGVyZT9cbiAgdmFyIGN1cnJlbnQgPSBbXTtcbiAgdmFyIG5leHQgPSBbXTtcblxuICByZXR1cm4ge1xuICAgIGNsZWFyOiBmdW5jdGlvbiBjbGVhcigpIHtcbiAgICAgIG5leHQgPSBDTEVBUkVEO1xuICAgICAgY3VycmVudCA9IENMRUFSRUQ7XG4gICAgfSxcbiAgICBub3RpZnk6IGZ1bmN0aW9uIG5vdGlmeSgpIHtcbiAgICAgIHZhciBsaXN0ZW5lcnMgPSBjdXJyZW50ID0gbmV4dDtcbiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdGVuZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxpc3RlbmVyc1tpXSgpO1xuICAgICAgfVxuICAgIH0sXG4gICAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG4gICAgICByZXR1cm4gbmV4dDtcbiAgICB9LFxuICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcbiAgICAgIGlmIChuZXh0ID09PSBjdXJyZW50KSBuZXh0ID0gY3VycmVudC5zbGljZSgpO1xuICAgICAgbmV4dC5wdXNoKGxpc3RlbmVyKTtcblxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCkge1xuICAgICAgICBpZiAoIWlzU3Vic2NyaWJlZCB8fCBjdXJyZW50ID09PSBDTEVBUkVEKSByZXR1cm47XG4gICAgICAgIGlzU3Vic2NyaWJlZCA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChuZXh0ID09PSBjdXJyZW50KSBuZXh0ID0gY3VycmVudC5zbGljZSgpO1xuICAgICAgICBuZXh0LnNwbGljZShuZXh0LmluZGV4T2YobGlzdGVuZXIpLCAxKTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuXG52YXIgU3Vic2NyaXB0aW9uID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBTdWJzY3JpcHRpb24oc3RvcmUsIHBhcmVudFN1Yiwgb25TdGF0ZUNoYW5nZSkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTdWJzY3JpcHRpb24pO1xuXG4gICAgdGhpcy5zdG9yZSA9IHN0b3JlO1xuICAgIHRoaXMucGFyZW50U3ViID0gcGFyZW50U3ViO1xuICAgIHRoaXMub25TdGF0ZUNoYW5nZSA9IG9uU3RhdGVDaGFuZ2U7XG4gICAgdGhpcy51bnN1YnNjcmliZSA9IG51bGw7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuICB9XG5cbiAgU3Vic2NyaXB0aW9uLnByb3RvdHlwZS5hZGROZXN0ZWRTdWIgPSBmdW5jdGlvbiBhZGROZXN0ZWRTdWIobGlzdGVuZXIpIHtcbiAgICB0aGlzLnRyeVN1YnNjcmliZSgpO1xuICAgIHJldHVybiB0aGlzLmxpc3RlbmVycy5zdWJzY3JpYmUobGlzdGVuZXIpO1xuICB9O1xuXG4gIFN1YnNjcmlwdGlvbi5wcm90b3R5cGUubm90aWZ5TmVzdGVkU3VicyA9IGZ1bmN0aW9uIG5vdGlmeU5lc3RlZFN1YnMoKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMubm90aWZ5KCk7XG4gIH07XG5cbiAgU3Vic2NyaXB0aW9uLnByb3RvdHlwZS5pc1N1YnNjcmliZWQgPSBmdW5jdGlvbiBpc1N1YnNjcmliZWQoKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4odGhpcy51bnN1YnNjcmliZSk7XG4gIH07XG5cbiAgU3Vic2NyaXB0aW9uLnByb3RvdHlwZS50cnlTdWJzY3JpYmUgPSBmdW5jdGlvbiB0cnlTdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLnVuc3Vic2NyaWJlKSB7XG4gICAgICB0aGlzLnVuc3Vic2NyaWJlID0gdGhpcy5wYXJlbnRTdWIgPyB0aGlzLnBhcmVudFN1Yi5hZGROZXN0ZWRTdWIodGhpcy5vblN0YXRlQ2hhbmdlKSA6IHRoaXMuc3RvcmUuc3Vic2NyaWJlKHRoaXMub25TdGF0ZUNoYW5nZSk7XG5cbiAgICAgIHRoaXMubGlzdGVuZXJzID0gY3JlYXRlTGlzdGVuZXJDb2xsZWN0aW9uKCk7XG4gICAgfVxuICB9O1xuXG4gIFN1YnNjcmlwdGlvbi5wcm90b3R5cGUudHJ5VW5zdWJzY3JpYmUgPSBmdW5jdGlvbiB0cnlVbnN1YnNjcmliZSgpIHtcbiAgICBpZiAodGhpcy51bnN1YnNjcmliZSkge1xuICAgICAgdGhpcy51bnN1YnNjcmliZSgpO1xuICAgICAgdGhpcy51bnN1YnNjcmliZSA9IG51bGw7XG4gICAgICB0aGlzLmxpc3RlbmVycy5jbGVhcigpO1xuICAgICAgdGhpcy5saXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gU3Vic2NyaXB0aW9uO1xufSgpO1xuXG5leHBvcnQgeyBTdWJzY3JpcHRpb24gYXMgZGVmYXVsdCB9OyIsInZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldOyBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7IGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoc291cmNlLCBrZXkpKSB7IHRhcmdldFtrZXldID0gc291cmNlW2tleV07IH0gfSB9IHJldHVybiB0YXJnZXQ7IH07XG5cbmZ1bmN0aW9uIF9jbGFzc0NhbGxDaGVjayhpbnN0YW5jZSwgQ29uc3RydWN0b3IpIHsgaWYgKCEoaW5zdGFuY2UgaW5zdGFuY2VvZiBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNhbm5vdCBjYWxsIGEgY2xhc3MgYXMgYSBmdW5jdGlvblwiKTsgfSB9XG5cbmZ1bmN0aW9uIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHNlbGYsIGNhbGwpIHsgaWYgKCFzZWxmKSB7IHRocm93IG5ldyBSZWZlcmVuY2VFcnJvcihcInRoaXMgaGFzbid0IGJlZW4gaW5pdGlhbGlzZWQgLSBzdXBlcigpIGhhc24ndCBiZWVuIGNhbGxlZFwiKTsgfSByZXR1cm4gY2FsbCAmJiAodHlwZW9mIGNhbGwgPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGNhbGwgPT09IFwiZnVuY3Rpb25cIikgPyBjYWxsIDogc2VsZjsgfVxuXG5mdW5jdGlvbiBfaW5oZXJpdHMoc3ViQ2xhc3MsIHN1cGVyQ2xhc3MpIHsgaWYgKHR5cGVvZiBzdXBlckNsYXNzICE9PSBcImZ1bmN0aW9uXCIgJiYgc3VwZXJDbGFzcyAhPT0gbnVsbCkgeyB0aHJvdyBuZXcgVHlwZUVycm9yKFwiU3VwZXIgZXhwcmVzc2lvbiBtdXN0IGVpdGhlciBiZSBudWxsIG9yIGEgZnVuY3Rpb24sIG5vdCBcIiArIHR5cGVvZiBzdXBlckNsYXNzKTsgfSBzdWJDbGFzcy5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKHN1cGVyQ2xhc3MgJiYgc3VwZXJDbGFzcy5wcm90b3R5cGUsIHsgY29uc3RydWN0b3I6IHsgdmFsdWU6IHN1YkNsYXNzLCBlbnVtZXJhYmxlOiBmYWxzZSwgd3JpdGFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSB9IH0pOyBpZiAoc3VwZXJDbGFzcykgT2JqZWN0LnNldFByb3RvdHlwZU9mID8gT2JqZWN0LnNldFByb3RvdHlwZU9mKHN1YkNsYXNzLCBzdXBlckNsYXNzKSA6IHN1YkNsYXNzLl9fcHJvdG9fXyA9IHN1cGVyQ2xhc3M7IH1cblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgaG9pc3RTdGF0aWNzIGZyb20gJ2hvaXN0LW5vbi1yZWFjdC1zdGF0aWNzJztcbmltcG9ydCBpbnZhcmlhbnQgZnJvbSAnaW52YXJpYW50JztcbmltcG9ydCB7IENvbXBvbmVudCwgY3JlYXRlRWxlbWVudCB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IFN1YnNjcmlwdGlvbiBmcm9tICcuLi91dGlscy9TdWJzY3JpcHRpb24nO1xuaW1wb3J0IHsgc3RvcmVTaGFwZSwgc3Vic2NyaXB0aW9uU2hhcGUgfSBmcm9tICcuLi91dGlscy9Qcm9wVHlwZXMnO1xuXG52YXIgaG90UmVsb2FkaW5nVmVyc2lvbiA9IDA7XG52YXIgZHVtbXlTdGF0ZSA9IHt9O1xuZnVuY3Rpb24gbm9vcCgpIHt9XG5mdW5jdGlvbiBtYWtlU2VsZWN0b3JTdGF0ZWZ1bChzb3VyY2VTZWxlY3Rvciwgc3RvcmUpIHtcbiAgLy8gd3JhcCB0aGUgc2VsZWN0b3IgaW4gYW4gb2JqZWN0IHRoYXQgdHJhY2tzIGl0cyByZXN1bHRzIGJldHdlZW4gcnVucy5cbiAgdmFyIHNlbGVjdG9yID0ge1xuICAgIHJ1bjogZnVuY3Rpb24gcnVuQ29tcG9uZW50U2VsZWN0b3IocHJvcHMpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIHZhciBuZXh0UHJvcHMgPSBzb3VyY2VTZWxlY3RvcihzdG9yZS5nZXRTdGF0ZSgpLCBwcm9wcyk7XG4gICAgICAgIGlmIChuZXh0UHJvcHMgIT09IHNlbGVjdG9yLnByb3BzIHx8IHNlbGVjdG9yLmVycm9yKSB7XG4gICAgICAgICAgc2VsZWN0b3Iuc2hvdWxkQ29tcG9uZW50VXBkYXRlID0gdHJ1ZTtcbiAgICAgICAgICBzZWxlY3Rvci5wcm9wcyA9IG5leHRQcm9wcztcbiAgICAgICAgICBzZWxlY3Rvci5lcnJvciA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IHRydWU7XG4gICAgICAgIHNlbGVjdG9yLmVycm9yID0gZXJyb3I7XG4gICAgICB9XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBzZWxlY3Rvcjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29ubmVjdEFkdmFuY2VkKFxuLypcbiAgc2VsZWN0b3JGYWN0b3J5IGlzIGEgZnVuYyB0aGF0IGlzIHJlc3BvbnNpYmxlIGZvciByZXR1cm5pbmcgdGhlIHNlbGVjdG9yIGZ1bmN0aW9uIHVzZWQgdG9cbiAgY29tcHV0ZSBuZXcgcHJvcHMgZnJvbSBzdGF0ZSwgcHJvcHMsIGFuZCBkaXNwYXRjaC4gRm9yIGV4YW1wbGU6XG4gICAgIGV4cG9ydCBkZWZhdWx0IGNvbm5lY3RBZHZhbmNlZCgoZGlzcGF0Y2gsIG9wdGlvbnMpID0+IChzdGF0ZSwgcHJvcHMpID0+ICh7XG4gICAgICB0aGluZzogc3RhdGUudGhpbmdzW3Byb3BzLnRoaW5nSWRdLFxuICAgICAgc2F2ZVRoaW5nOiBmaWVsZHMgPT4gZGlzcGF0Y2goYWN0aW9uQ3JlYXRvcnMuc2F2ZVRoaW5nKHByb3BzLnRoaW5nSWQsIGZpZWxkcykpLFxuICAgIH0pKShZb3VyQ29tcG9uZW50KVxuICAgQWNjZXNzIHRvIGRpc3BhdGNoIGlzIHByb3ZpZGVkIHRvIHRoZSBmYWN0b3J5IHNvIHNlbGVjdG9yRmFjdG9yaWVzIGNhbiBiaW5kIGFjdGlvbkNyZWF0b3JzXG4gIG91dHNpZGUgb2YgdGhlaXIgc2VsZWN0b3IgYXMgYW4gb3B0aW1pemF0aW9uLiBPcHRpb25zIHBhc3NlZCB0byBjb25uZWN0QWR2YW5jZWQgYXJlIHBhc3NlZCB0b1xuICB0aGUgc2VsZWN0b3JGYWN0b3J5LCBhbG9uZyB3aXRoIGRpc3BsYXlOYW1lIGFuZCBXcmFwcGVkQ29tcG9uZW50LCBhcyB0aGUgc2Vjb25kIGFyZ3VtZW50LlxuICAgTm90ZSB0aGF0IHNlbGVjdG9yRmFjdG9yeSBpcyByZXNwb25zaWJsZSBmb3IgYWxsIGNhY2hpbmcvbWVtb2l6YXRpb24gb2YgaW5ib3VuZCBhbmQgb3V0Ym91bmRcbiAgcHJvcHMuIERvIG5vdCB1c2UgY29ubmVjdEFkdmFuY2VkIGRpcmVjdGx5IHdpdGhvdXQgbWVtb2l6aW5nIHJlc3VsdHMgYmV0d2VlbiBjYWxscyB0byB5b3VyXG4gIHNlbGVjdG9yLCBvdGhlcndpc2UgdGhlIENvbm5lY3QgY29tcG9uZW50IHdpbGwgcmUtcmVuZGVyIG9uIGV2ZXJ5IHN0YXRlIG9yIHByb3BzIGNoYW5nZS5cbiovXG5zZWxlY3RvckZhY3RvcnkpIHtcbiAgdmFyIF9jb250ZXh0VHlwZXMsIF9jaGlsZENvbnRleHRUeXBlcztcblxuICB2YXIgX3JlZiA9IGFyZ3VtZW50cy5sZW5ndGggPiAxICYmIGFyZ3VtZW50c1sxXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzFdIDoge30sXG4gICAgICBfcmVmJGdldERpc3BsYXlOYW1lID0gX3JlZi5nZXREaXNwbGF5TmFtZSxcbiAgICAgIGdldERpc3BsYXlOYW1lID0gX3JlZiRnZXREaXNwbGF5TmFtZSA9PT0gdW5kZWZpbmVkID8gZnVuY3Rpb24gKG5hbWUpIHtcbiAgICByZXR1cm4gJ0Nvbm5lY3RBZHZhbmNlZCgnICsgbmFtZSArICcpJztcbiAgfSA6IF9yZWYkZ2V0RGlzcGxheU5hbWUsXG4gICAgICBfcmVmJG1ldGhvZE5hbWUgPSBfcmVmLm1ldGhvZE5hbWUsXG4gICAgICBtZXRob2ROYW1lID0gX3JlZiRtZXRob2ROYW1lID09PSB1bmRlZmluZWQgPyAnY29ubmVjdEFkdmFuY2VkJyA6IF9yZWYkbWV0aG9kTmFtZSxcbiAgICAgIF9yZWYkcmVuZGVyQ291bnRQcm9wID0gX3JlZi5yZW5kZXJDb3VudFByb3AsXG4gICAgICByZW5kZXJDb3VudFByb3AgPSBfcmVmJHJlbmRlckNvdW50UHJvcCA9PT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogX3JlZiRyZW5kZXJDb3VudFByb3AsXG4gICAgICBfcmVmJHNob3VsZEhhbmRsZVN0YXQgPSBfcmVmLnNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyxcbiAgICAgIHNob3VsZEhhbmRsZVN0YXRlQ2hhbmdlcyA9IF9yZWYkc2hvdWxkSGFuZGxlU3RhdCA9PT0gdW5kZWZpbmVkID8gdHJ1ZSA6IF9yZWYkc2hvdWxkSGFuZGxlU3RhdCxcbiAgICAgIF9yZWYkc3RvcmVLZXkgPSBfcmVmLnN0b3JlS2V5LFxuICAgICAgc3RvcmVLZXkgPSBfcmVmJHN0b3JlS2V5ID09PSB1bmRlZmluZWQgPyAnc3RvcmUnIDogX3JlZiRzdG9yZUtleSxcbiAgICAgIF9yZWYkd2l0aFJlZiA9IF9yZWYud2l0aFJlZixcbiAgICAgIHdpdGhSZWYgPSBfcmVmJHdpdGhSZWYgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX3JlZiR3aXRoUmVmLFxuICAgICAgY29ubmVjdE9wdGlvbnMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgWydnZXREaXNwbGF5TmFtZScsICdtZXRob2ROYW1lJywgJ3JlbmRlckNvdW50UHJvcCcsICdzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMnLCAnc3RvcmVLZXknLCAnd2l0aFJlZiddKTtcblxuICB2YXIgc3Vic2NyaXB0aW9uS2V5ID0gc3RvcmVLZXkgKyAnU3Vic2NyaXB0aW9uJztcbiAgdmFyIHZlcnNpb24gPSBob3RSZWxvYWRpbmdWZXJzaW9uKys7XG5cbiAgdmFyIGNvbnRleHRUeXBlcyA9IChfY29udGV4dFR5cGVzID0ge30sIF9jb250ZXh0VHlwZXNbc3RvcmVLZXldID0gc3RvcmVTaGFwZSwgX2NvbnRleHRUeXBlc1tzdWJzY3JpcHRpb25LZXldID0gc3Vic2NyaXB0aW9uU2hhcGUsIF9jb250ZXh0VHlwZXMpO1xuICB2YXIgY2hpbGRDb250ZXh0VHlwZXMgPSAoX2NoaWxkQ29udGV4dFR5cGVzID0ge30sIF9jaGlsZENvbnRleHRUeXBlc1tzdWJzY3JpcHRpb25LZXldID0gc3Vic2NyaXB0aW9uU2hhcGUsIF9jaGlsZENvbnRleHRUeXBlcyk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIHdyYXBXaXRoQ29ubmVjdChXcmFwcGVkQ29tcG9uZW50KSB7XG4gICAgaW52YXJpYW50KHR5cGVvZiBXcmFwcGVkQ29tcG9uZW50ID09ICdmdW5jdGlvbicsICdZb3UgbXVzdCBwYXNzIGEgY29tcG9uZW50IHRvIHRoZSBmdW5jdGlvbiByZXR1cm5lZCBieSAnICsgKG1ldGhvZE5hbWUgKyAnLiBJbnN0ZWFkIHJlY2VpdmVkICcgKyBKU09OLnN0cmluZ2lmeShXcmFwcGVkQ29tcG9uZW50KSkpO1xuXG4gICAgdmFyIHdyYXBwZWRDb21wb25lbnROYW1lID0gV3JhcHBlZENvbXBvbmVudC5kaXNwbGF5TmFtZSB8fCBXcmFwcGVkQ29tcG9uZW50Lm5hbWUgfHwgJ0NvbXBvbmVudCc7XG5cbiAgICB2YXIgZGlzcGxheU5hbWUgPSBnZXREaXNwbGF5TmFtZSh3cmFwcGVkQ29tcG9uZW50TmFtZSk7XG5cbiAgICB2YXIgc2VsZWN0b3JGYWN0b3J5T3B0aW9ucyA9IF9leHRlbmRzKHt9LCBjb25uZWN0T3B0aW9ucywge1xuICAgICAgZ2V0RGlzcGxheU5hbWU6IGdldERpc3BsYXlOYW1lLFxuICAgICAgbWV0aG9kTmFtZTogbWV0aG9kTmFtZSxcbiAgICAgIHJlbmRlckNvdW50UHJvcDogcmVuZGVyQ291bnRQcm9wLFxuICAgICAgc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzOiBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMsXG4gICAgICBzdG9yZUtleTogc3RvcmVLZXksXG4gICAgICB3aXRoUmVmOiB3aXRoUmVmLFxuICAgICAgZGlzcGxheU5hbWU6IGRpc3BsYXlOYW1lLFxuICAgICAgd3JhcHBlZENvbXBvbmVudE5hbWU6IHdyYXBwZWRDb21wb25lbnROYW1lLFxuICAgICAgV3JhcHBlZENvbXBvbmVudDogV3JhcHBlZENvbXBvbmVudFxuICAgIH0pO1xuXG4gICAgdmFyIENvbm5lY3QgPSBmdW5jdGlvbiAoX0NvbXBvbmVudCkge1xuICAgICAgX2luaGVyaXRzKENvbm5lY3QsIF9Db21wb25lbnQpO1xuXG4gICAgICBmdW5jdGlvbiBDb25uZWN0KHByb3BzLCBjb250ZXh0KSB7XG4gICAgICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDb25uZWN0KTtcblxuICAgICAgICB2YXIgX3RoaXMgPSBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCBfQ29tcG9uZW50LmNhbGwodGhpcywgcHJvcHMsIGNvbnRleHQpKTtcblxuICAgICAgICBfdGhpcy52ZXJzaW9uID0gdmVyc2lvbjtcbiAgICAgICAgX3RoaXMuc3RhdGUgPSB7fTtcbiAgICAgICAgX3RoaXMucmVuZGVyQ291bnQgPSAwO1xuICAgICAgICBfdGhpcy5zdG9yZSA9IHByb3BzW3N0b3JlS2V5XSB8fCBjb250ZXh0W3N0b3JlS2V5XTtcbiAgICAgICAgX3RoaXMucHJvcHNNb2RlID0gQm9vbGVhbihwcm9wc1tzdG9yZUtleV0pO1xuICAgICAgICBfdGhpcy5zZXRXcmFwcGVkSW5zdGFuY2UgPSBfdGhpcy5zZXRXcmFwcGVkSW5zdGFuY2UuYmluZChfdGhpcyk7XG5cbiAgICAgICAgaW52YXJpYW50KF90aGlzLnN0b3JlLCAnQ291bGQgbm90IGZpbmQgXCInICsgc3RvcmVLZXkgKyAnXCIgaW4gZWl0aGVyIHRoZSBjb250ZXh0IG9yIHByb3BzIG9mICcgKyAoJ1wiJyArIGRpc3BsYXlOYW1lICsgJ1wiLiBFaXRoZXIgd3JhcCB0aGUgcm9vdCBjb21wb25lbnQgaW4gYSA8UHJvdmlkZXI+LCAnKSArICgnb3IgZXhwbGljaXRseSBwYXNzIFwiJyArIHN0b3JlS2V5ICsgJ1wiIGFzIGEgcHJvcCB0byBcIicgKyBkaXNwbGF5TmFtZSArICdcIi4nKSk7XG5cbiAgICAgICAgX3RoaXMuaW5pdFNlbGVjdG9yKCk7XG4gICAgICAgIF90aGlzLmluaXRTdWJzY3JpcHRpb24oKTtcbiAgICAgICAgcmV0dXJuIF90aGlzO1xuICAgICAgfVxuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5nZXRDaGlsZENvbnRleHQgPSBmdW5jdGlvbiBnZXRDaGlsZENvbnRleHQoKSB7XG4gICAgICAgIHZhciBfcmVmMjtcblxuICAgICAgICAvLyBJZiB0aGlzIGNvbXBvbmVudCByZWNlaXZlZCBzdG9yZSBmcm9tIHByb3BzLCBpdHMgc3Vic2NyaXB0aW9uIHNob3VsZCBiZSB0cmFuc3BhcmVudFxuICAgICAgICAvLyB0byBhbnkgZGVzY2VuZGFudHMgcmVjZWl2aW5nIHN0b3JlK3N1YnNjcmlwdGlvbiBmcm9tIGNvbnRleHQ7IGl0IHBhc3NlcyBhbG9uZ1xuICAgICAgICAvLyBzdWJzY3JpcHRpb24gcGFzc2VkIHRvIGl0LiBPdGhlcndpc2UsIGl0IHNoYWRvd3MgdGhlIHBhcmVudCBzdWJzY3JpcHRpb24sIHdoaWNoIGFsbG93c1xuICAgICAgICAvLyBDb25uZWN0IHRvIGNvbnRyb2wgb3JkZXJpbmcgb2Ygbm90aWZpY2F0aW9ucyB0byBmbG93IHRvcC1kb3duLlxuICAgICAgICB2YXIgc3Vic2NyaXB0aW9uID0gdGhpcy5wcm9wc01vZGUgPyBudWxsIDogdGhpcy5zdWJzY3JpcHRpb247XG4gICAgICAgIHJldHVybiBfcmVmMiA9IHt9LCBfcmVmMltzdWJzY3JpcHRpb25LZXldID0gc3Vic2NyaXB0aW9uIHx8IHRoaXMuY29udGV4dFtzdWJzY3JpcHRpb25LZXldLCBfcmVmMjtcbiAgICAgIH07XG5cbiAgICAgIENvbm5lY3QucHJvdG90eXBlLmNvbXBvbmVudERpZE1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIGlmICghc2hvdWxkSGFuZGxlU3RhdGVDaGFuZ2VzKSByZXR1cm47XG5cbiAgICAgICAgLy8gY29tcG9uZW50V2lsbE1vdW50IGZpcmVzIGR1cmluZyBzZXJ2ZXIgc2lkZSByZW5kZXJpbmcsIGJ1dCBjb21wb25lbnREaWRNb3VudCBhbmRcbiAgICAgICAgLy8gY29tcG9uZW50V2lsbFVubW91bnQgZG8gbm90LiBCZWNhdXNlIG9mIHRoaXMsIHRyeVN1YnNjcmliZSBoYXBwZW5zIGR1cmluZyAuLi5kaWRNb3VudC5cbiAgICAgICAgLy8gT3RoZXJ3aXNlLCB1bnN1YnNjcmlwdGlvbiB3b3VsZCBuZXZlciB0YWtlIHBsYWNlIGR1cmluZyBTU1IsIGNhdXNpbmcgYSBtZW1vcnkgbGVhay5cbiAgICAgICAgLy8gVG8gaGFuZGxlIHRoZSBjYXNlIHdoZXJlIGEgY2hpbGQgY29tcG9uZW50IG1heSBoYXZlIHRyaWdnZXJlZCBhIHN0YXRlIGNoYW5nZSBieVxuICAgICAgICAvLyBkaXNwYXRjaGluZyBhbiBhY3Rpb24gaW4gaXRzIGNvbXBvbmVudFdpbGxNb3VudCwgd2UgaGF2ZSB0byByZS1ydW4gdGhlIHNlbGVjdCBhbmQgbWF5YmVcbiAgICAgICAgLy8gcmUtcmVuZGVyLlxuICAgICAgICB0aGlzLnN1YnNjcmlwdGlvbi50cnlTdWJzY3JpYmUoKTtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5ydW4odGhpcy5wcm9wcyk7XG4gICAgICAgIGlmICh0aGlzLnNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSkgdGhpcy5mb3JjZVVwZGF0ZSgpO1xuICAgICAgfTtcblxuICAgICAgQ29ubmVjdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICAgIHRoaXMuc2VsZWN0b3IucnVuKG5leHRQcm9wcyk7XG4gICAgICB9O1xuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5zaG91bGRDb21wb25lbnRVcGRhdGUgPSBmdW5jdGlvbiBzaG91bGRDb21wb25lbnRVcGRhdGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZTtcbiAgICAgIH07XG5cbiAgICAgIENvbm5lY3QucHJvdG90eXBlLmNvbXBvbmVudFdpbGxVbm1vdW50ID0gZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIGlmICh0aGlzLnN1YnNjcmlwdGlvbikgdGhpcy5zdWJzY3JpcHRpb24udHJ5VW5zdWJzY3JpYmUoKTtcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24gPSBudWxsO1xuICAgICAgICB0aGlzLm5vdGlmeU5lc3RlZFN1YnMgPSBub29wO1xuICAgICAgICB0aGlzLnN0b3JlID0gbnVsbDtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5ydW4gPSBub29wO1xuICAgICAgICB0aGlzLnNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZhbHNlO1xuICAgICAgfTtcblxuICAgICAgQ29ubmVjdC5wcm90b3R5cGUuZ2V0V3JhcHBlZEluc3RhbmNlID0gZnVuY3Rpb24gZ2V0V3JhcHBlZEluc3RhbmNlKCkge1xuICAgICAgICBpbnZhcmlhbnQod2l0aFJlZiwgJ1RvIGFjY2VzcyB0aGUgd3JhcHBlZCBpbnN0YW5jZSwgeW91IG5lZWQgdG8gc3BlY2lmeSAnICsgKCd7IHdpdGhSZWY6IHRydWUgfSBpbiB0aGUgb3B0aW9ucyBhcmd1bWVudCBvZiB0aGUgJyArIG1ldGhvZE5hbWUgKyAnKCkgY2FsbC4nKSk7XG4gICAgICAgIHJldHVybiB0aGlzLndyYXBwZWRJbnN0YW5jZTtcbiAgICAgIH07XG5cbiAgICAgIENvbm5lY3QucHJvdG90eXBlLnNldFdyYXBwZWRJbnN0YW5jZSA9IGZ1bmN0aW9uIHNldFdyYXBwZWRJbnN0YW5jZShyZWYpIHtcbiAgICAgICAgdGhpcy53cmFwcGVkSW5zdGFuY2UgPSByZWY7XG4gICAgICB9O1xuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5pbml0U2VsZWN0b3IgPSBmdW5jdGlvbiBpbml0U2VsZWN0b3IoKSB7XG4gICAgICAgIHZhciBzb3VyY2VTZWxlY3RvciA9IHNlbGVjdG9yRmFjdG9yeSh0aGlzLnN0b3JlLmRpc3BhdGNoLCBzZWxlY3RvckZhY3RvcnlPcHRpb25zKTtcbiAgICAgICAgdGhpcy5zZWxlY3RvciA9IG1ha2VTZWxlY3RvclN0YXRlZnVsKHNvdXJjZVNlbGVjdG9yLCB0aGlzLnN0b3JlKTtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5ydW4odGhpcy5wcm9wcyk7XG4gICAgICB9O1xuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5pbml0U3Vic2NyaXB0aW9uID0gZnVuY3Rpb24gaW5pdFN1YnNjcmlwdGlvbigpIHtcbiAgICAgICAgaWYgKCFzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHJldHVybjtcblxuICAgICAgICAvLyBwYXJlbnRTdWIncyBzb3VyY2Ugc2hvdWxkIG1hdGNoIHdoZXJlIHN0b3JlIGNhbWUgZnJvbTogcHJvcHMgdnMuIGNvbnRleHQuIEEgY29tcG9uZW50XG4gICAgICAgIC8vIGNvbm5lY3RlZCB0byB0aGUgc3RvcmUgdmlhIHByb3BzIHNob3VsZG4ndCB1c2Ugc3Vic2NyaXB0aW9uIGZyb20gY29udGV4dCwgb3IgdmljZSB2ZXJzYS5cbiAgICAgICAgdmFyIHBhcmVudFN1YiA9ICh0aGlzLnByb3BzTW9kZSA/IHRoaXMucHJvcHMgOiB0aGlzLmNvbnRleHQpW3N1YnNjcmlwdGlvbktleV07XG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbih0aGlzLnN0b3JlLCBwYXJlbnRTdWIsIHRoaXMub25TdGF0ZUNoYW5nZS5iaW5kKHRoaXMpKTtcblxuICAgICAgICAvLyBgbm90aWZ5TmVzdGVkU3Vic2AgaXMgZHVwbGljYXRlZCB0byBoYW5kbGUgdGhlIGNhc2Ugd2hlcmUgdGhlIGNvbXBvbmVudCBpcyAgdW5tb3VudGVkIGluXG4gICAgICAgIC8vIHRoZSBtaWRkbGUgb2YgdGhlIG5vdGlmaWNhdGlvbiBsb29wLCB3aGVyZSBgdGhpcy5zdWJzY3JpcHRpb25gIHdpbGwgdGhlbiBiZSBudWxsLiBBblxuICAgICAgICAvLyBleHRyYSBudWxsIGNoZWNrIGV2ZXJ5IGNoYW5nZSBjYW4gYmUgYXZvaWRlZCBieSBjb3B5aW5nIHRoZSBtZXRob2Qgb250byBgdGhpc2AgYW5kIHRoZW5cbiAgICAgICAgLy8gcmVwbGFjaW5nIGl0IHdpdGggYSBuby1vcCBvbiB1bm1vdW50LiBUaGlzIGNhbiBwcm9iYWJseSBiZSBhdm9pZGVkIGlmIFN1YnNjcmlwdGlvbidzXG4gICAgICAgIC8vIGxpc3RlbmVycyBsb2dpYyBpcyBjaGFuZ2VkIHRvIG5vdCBjYWxsIGxpc3RlbmVycyB0aGF0IGhhdmUgYmVlbiB1bnN1YnNjcmliZWQgaW4gdGhlXG4gICAgICAgIC8vIG1pZGRsZSBvZiB0aGUgbm90aWZpY2F0aW9uIGxvb3AuXG4gICAgICAgIHRoaXMubm90aWZ5TmVzdGVkU3VicyA9IHRoaXMuc3Vic2NyaXB0aW9uLm5vdGlmeU5lc3RlZFN1YnMuYmluZCh0aGlzLnN1YnNjcmlwdGlvbik7XG4gICAgICB9O1xuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5vblN0YXRlQ2hhbmdlID0gZnVuY3Rpb24gb25TdGF0ZUNoYW5nZSgpIHtcbiAgICAgICAgdGhpcy5zZWxlY3Rvci5ydW4odGhpcy5wcm9wcyk7XG5cbiAgICAgICAgaWYgKCF0aGlzLnNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSkge1xuICAgICAgICAgIHRoaXMubm90aWZ5TmVzdGVkU3VicygpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHRoaXMuY29tcG9uZW50RGlkVXBkYXRlID0gdGhpcy5ub3RpZnlOZXN0ZWRTdWJzT25Db21wb25lbnREaWRVcGRhdGU7XG4gICAgICAgICAgdGhpcy5zZXRTdGF0ZShkdW1teVN0YXRlKTtcbiAgICAgICAgfVxuICAgICAgfTtcblxuICAgICAgQ29ubmVjdC5wcm90b3R5cGUubm90aWZ5TmVzdGVkU3Vic09uQ29tcG9uZW50RGlkVXBkYXRlID0gZnVuY3Rpb24gbm90aWZ5TmVzdGVkU3Vic09uQ29tcG9uZW50RGlkVXBkYXRlKCkge1xuICAgICAgICAvLyBgY29tcG9uZW50RGlkVXBkYXRlYCBpcyBjb25kaXRpb25hbGx5IGltcGxlbWVudGVkIHdoZW4gYG9uU3RhdGVDaGFuZ2VgIGRldGVybWluZXMgaXRcbiAgICAgICAgLy8gbmVlZHMgdG8gbm90aWZ5IG5lc3RlZCBzdWJzLiBPbmNlIGNhbGxlZCwgaXQgdW5pbXBsZW1lbnRzIGl0c2VsZiB1bnRpbCBmdXJ0aGVyIHN0YXRlXG4gICAgICAgIC8vIGNoYW5nZXMgb2NjdXIuIERvaW5nIGl0IHRoaXMgd2F5IHZzIGhhdmluZyBhIHBlcm1hbmVudCBgY29tcG9uZW50RGlkVXBkYXRlYCB0aGF0IGRvZXNcbiAgICAgICAgLy8gYSBib29sZWFuIGNoZWNrIGV2ZXJ5IHRpbWUgYXZvaWRzIGFuIGV4dHJhIG1ldGhvZCBjYWxsIG1vc3Qgb2YgdGhlIHRpbWUsIHJlc3VsdGluZ1xuICAgICAgICAvLyBpbiBzb21lIHBlcmYgYm9vc3QuXG4gICAgICAgIHRoaXMuY29tcG9uZW50RGlkVXBkYXRlID0gdW5kZWZpbmVkO1xuICAgICAgICB0aGlzLm5vdGlmeU5lc3RlZFN1YnMoKTtcbiAgICAgIH07XG5cbiAgICAgIENvbm5lY3QucHJvdG90eXBlLmlzU3Vic2NyaWJlZCA9IGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICAgICAgcmV0dXJuIEJvb2xlYW4odGhpcy5zdWJzY3JpcHRpb24pICYmIHRoaXMuc3Vic2NyaXB0aW9uLmlzU3Vic2NyaWJlZCgpO1xuICAgICAgfTtcblxuICAgICAgQ29ubmVjdC5wcm90b3R5cGUuYWRkRXh0cmFQcm9wcyA9IGZ1bmN0aW9uIGFkZEV4dHJhUHJvcHMocHJvcHMpIHtcbiAgICAgICAgaWYgKCF3aXRoUmVmICYmICFyZW5kZXJDb3VudFByb3AgJiYgISh0aGlzLnByb3BzTW9kZSAmJiB0aGlzLnN1YnNjcmlwdGlvbikpIHJldHVybiBwcm9wcztcbiAgICAgICAgLy8gbWFrZSBhIHNoYWxsb3cgY29weSBzbyB0aGF0IGZpZWxkcyBhZGRlZCBkb24ndCBsZWFrIHRvIHRoZSBvcmlnaW5hbCBzZWxlY3Rvci5cbiAgICAgICAgLy8gdGhpcyBpcyBlc3BlY2lhbGx5IGltcG9ydGFudCBmb3IgJ3JlZicgc2luY2UgdGhhdCdzIGEgcmVmZXJlbmNlIGJhY2sgdG8gdGhlIGNvbXBvbmVudFxuICAgICAgICAvLyBpbnN0YW5jZS4gYSBzaW5nbGV0b24gbWVtb2l6ZWQgc2VsZWN0b3Igd291bGQgdGhlbiBiZSBob2xkaW5nIGEgcmVmZXJlbmNlIHRvIHRoZVxuICAgICAgICAvLyBpbnN0YW5jZSwgcHJldmVudGluZyB0aGUgaW5zdGFuY2UgZnJvbSBiZWluZyBnYXJiYWdlIGNvbGxlY3RlZCwgYW5kIHRoYXQgd291bGQgYmUgYmFkXG4gICAgICAgIHZhciB3aXRoRXh0cmFzID0gX2V4dGVuZHMoe30sIHByb3BzKTtcbiAgICAgICAgaWYgKHdpdGhSZWYpIHdpdGhFeHRyYXMucmVmID0gdGhpcy5zZXRXcmFwcGVkSW5zdGFuY2U7XG4gICAgICAgIGlmIChyZW5kZXJDb3VudFByb3ApIHdpdGhFeHRyYXNbcmVuZGVyQ291bnRQcm9wXSA9IHRoaXMucmVuZGVyQ291bnQrKztcbiAgICAgICAgaWYgKHRoaXMucHJvcHNNb2RlICYmIHRoaXMuc3Vic2NyaXB0aW9uKSB3aXRoRXh0cmFzW3N1YnNjcmlwdGlvbktleV0gPSB0aGlzLnN1YnNjcmlwdGlvbjtcbiAgICAgICAgcmV0dXJuIHdpdGhFeHRyYXM7XG4gICAgICB9O1xuXG4gICAgICBDb25uZWN0LnByb3RvdHlwZS5yZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICAgIHZhciBzZWxlY3RvciA9IHRoaXMuc2VsZWN0b3I7XG4gICAgICAgIHNlbGVjdG9yLnNob3VsZENvbXBvbmVudFVwZGF0ZSA9IGZhbHNlO1xuXG4gICAgICAgIGlmIChzZWxlY3Rvci5lcnJvcikge1xuICAgICAgICAgIHRocm93IHNlbGVjdG9yLmVycm9yO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIHJldHVybiBjcmVhdGVFbGVtZW50KFdyYXBwZWRDb21wb25lbnQsIHRoaXMuYWRkRXh0cmFQcm9wcyhzZWxlY3Rvci5wcm9wcykpO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICByZXR1cm4gQ29ubmVjdDtcbiAgICB9KENvbXBvbmVudCk7XG5cbiAgICBDb25uZWN0LldyYXBwZWRDb21wb25lbnQgPSBXcmFwcGVkQ29tcG9uZW50O1xuICAgIENvbm5lY3QuZGlzcGxheU5hbWUgPSBkaXNwbGF5TmFtZTtcbiAgICBDb25uZWN0LmNoaWxkQ29udGV4dFR5cGVzID0gY2hpbGRDb250ZXh0VHlwZXM7XG4gICAgQ29ubmVjdC5jb250ZXh0VHlwZXMgPSBjb250ZXh0VHlwZXM7XG4gICAgQ29ubmVjdC5wcm9wVHlwZXMgPSBjb250ZXh0VHlwZXM7XG5cbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgQ29ubmVjdC5wcm90b3R5cGUuY29tcG9uZW50V2lsbFVwZGF0ZSA9IGZ1bmN0aW9uIGNvbXBvbmVudFdpbGxVcGRhdGUoKSB7XG4gICAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICAgIC8vIFdlIGFyZSBob3QgcmVsb2FkaW5nIVxuICAgICAgICBpZiAodGhpcy52ZXJzaW9uICE9PSB2ZXJzaW9uKSB7XG4gICAgICAgICAgdGhpcy52ZXJzaW9uID0gdmVyc2lvbjtcbiAgICAgICAgICB0aGlzLmluaXRTZWxlY3RvcigpO1xuXG4gICAgICAgICAgLy8gSWYgYW55IGNvbm5lY3RlZCBkZXNjZW5kYW50cyBkb24ndCBob3QgcmVsb2FkIChhbmQgcmVzdWJzY3JpYmUgaW4gdGhlIHByb2Nlc3MpLCB0aGVpclxuICAgICAgICAgIC8vIGxpc3RlbmVycyB3aWxsIGJlIGxvc3Qgd2hlbiB3ZSB1bnN1YnNjcmliZS4gVW5mb3J0dW5hdGVseSwgYnkgY29weWluZyBvdmVyIGFsbFxuICAgICAgICAgIC8vIGxpc3RlbmVycywgdGhpcyBkb2VzIG1lYW4gdGhhdCB0aGUgb2xkIHZlcnNpb25zIG9mIGNvbm5lY3RlZCBkZXNjZW5kYW50cyB3aWxsIHN0aWxsIGJlXG4gICAgICAgICAgLy8gbm90aWZpZWQgb2Ygc3RhdGUgY2hhbmdlczsgaG93ZXZlciwgdGhlaXIgb25TdGF0ZUNoYW5nZSBmdW5jdGlvbiBpcyBhIG5vLW9wIHNvIHRoaXNcbiAgICAgICAgICAvLyBpc24ndCBhIGh1Z2UgZGVhbC5cbiAgICAgICAgICB2YXIgb2xkTGlzdGVuZXJzID0gW107XG5cbiAgICAgICAgICBpZiAodGhpcy5zdWJzY3JpcHRpb24pIHtcbiAgICAgICAgICAgIG9sZExpc3RlbmVycyA9IHRoaXMuc3Vic2NyaXB0aW9uLmxpc3RlbmVycy5nZXQoKTtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnRyeVVuc3Vic2NyaWJlKCk7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRoaXMuaW5pdFN1YnNjcmlwdGlvbigpO1xuICAgICAgICAgIGlmIChzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXMpIHtcbiAgICAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLnRyeVN1YnNjcmliZSgpO1xuICAgICAgICAgICAgb2xkTGlzdGVuZXJzLmZvckVhY2goZnVuY3Rpb24gKGxpc3RlbmVyKSB7XG4gICAgICAgICAgICAgIHJldHVybiBfdGhpczIuc3Vic2NyaXB0aW9uLmxpc3RlbmVycy5zdWJzY3JpYmUobGlzdGVuZXIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBob2lzdFN0YXRpY3MoQ29ubmVjdCwgV3JhcHBlZENvbXBvbmVudCk7XG4gIH07XG59IiwidmFyIGhhc093biA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XG5cbmZ1bmN0aW9uIGlzKHgsIHkpIHtcbiAgaWYgKHggPT09IHkpIHtcbiAgICByZXR1cm4geCAhPT0gMCB8fCB5ICE9PSAwIHx8IDEgLyB4ID09PSAxIC8geTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNoYWxsb3dFcXVhbChvYmpBLCBvYmpCKSB7XG4gIGlmIChpcyhvYmpBLCBvYmpCKSkgcmV0dXJuIHRydWU7XG5cbiAgaWYgKHR5cGVvZiBvYmpBICE9PSAnb2JqZWN0JyB8fCBvYmpBID09PSBudWxsIHx8IHR5cGVvZiBvYmpCICE9PSAnb2JqZWN0JyB8fCBvYmpCID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgdmFyIGtleXNBID0gT2JqZWN0LmtleXMob2JqQSk7XG4gIHZhciBrZXlzQiA9IE9iamVjdC5rZXlzKG9iakIpO1xuXG4gIGlmIChrZXlzQS5sZW5ndGggIT09IGtleXNCLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwga2V5c0EubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoIWhhc093bi5jYWxsKG9iakIsIGtleXNBW2ldKSB8fCAhaXMob2JqQVtrZXlzQVtpXV0sIG9iakJba2V5c0FbaV1dKSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0cnVlO1xufSIsImltcG9ydCBmcmVlR2xvYmFsIGZyb20gJy4vX2ZyZWVHbG9iYWwuanMnO1xuXG4vKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYHNlbGZgLiAqL1xudmFyIGZyZWVTZWxmID0gdHlwZW9mIHNlbGYgPT0gJ29iamVjdCcgJiYgc2VsZiAmJiBzZWxmLk9iamVjdCA9PT0gT2JqZWN0ICYmIHNlbGY7XG5cbi8qKiBVc2VkIGFzIGEgcmVmZXJlbmNlIHRvIHRoZSBnbG9iYWwgb2JqZWN0LiAqL1xudmFyIHJvb3QgPSBmcmVlR2xvYmFsIHx8IGZyZWVTZWxmIHx8IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cbmV4cG9ydCBkZWZhdWx0IHJvb3Q7XG4iLCJpbXBvcnQgcm9vdCBmcm9tICcuL19yb290LmpzJztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgU3ltYm9sID0gcm9vdC5TeW1ib2w7XG5cbmV4cG9ydCBkZWZhdWx0IFN5bWJvbDtcbiIsImltcG9ydCBTeW1ib2wgZnJvbSAnLi9fU3ltYm9sLmpzJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIG9iamVjdFByb3RvID0gT2JqZWN0LnByb3RvdHlwZTtcblxuLyoqIFVzZWQgdG8gY2hlY2sgb2JqZWN0cyBmb3Igb3duIHByb3BlcnRpZXMuICovXG52YXIgaGFzT3duUHJvcGVydHkgPSBvYmplY3RQcm90by5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBVc2VkIHRvIHJlc29sdmUgdGhlXG4gKiBbYHRvU3RyaW5nVGFnYF0oaHR0cDovL2VjbWEtaW50ZXJuYXRpb25hbC5vcmcvZWNtYS0yNjIvNy4wLyNzZWMtb2JqZWN0LnByb3RvdHlwZS50b3N0cmluZylcbiAqIG9mIHZhbHVlcy5cbiAqL1xudmFyIG5hdGl2ZU9iamVjdFRvU3RyaW5nID0gb2JqZWN0UHJvdG8udG9TdHJpbmc7XG5cbi8qKiBCdWlsdC1pbiB2YWx1ZSByZWZlcmVuY2VzLiAqL1xudmFyIHN5bVRvU3RyaW5nVGFnID0gU3ltYm9sID8gU3ltYm9sLnRvU3RyaW5nVGFnIDogdW5kZWZpbmVkO1xuXG4vKipcbiAqIEEgc3BlY2lhbGl6ZWQgdmVyc2lvbiBvZiBgYmFzZUdldFRhZ2Agd2hpY2ggaWdub3JlcyBgU3ltYm9sLnRvU3RyaW5nVGFnYCB2YWx1ZXMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIHF1ZXJ5LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgcmF3IGB0b1N0cmluZ1RhZ2AuXG4gKi9cbmZ1bmN0aW9uIGdldFJhd1RhZyh2YWx1ZSkge1xuICB2YXIgaXNPd24gPSBoYXNPd25Qcm9wZXJ0eS5jYWxsKHZhbHVlLCBzeW1Ub1N0cmluZ1RhZyksXG4gICAgICB0YWcgPSB2YWx1ZVtzeW1Ub1N0cmluZ1RhZ107XG5cbiAgdHJ5IHtcbiAgICB2YWx1ZVtzeW1Ub1N0cmluZ1RhZ10gPSB1bmRlZmluZWQ7XG4gICAgdmFyIHVubWFza2VkID0gdHJ1ZTtcbiAgfSBjYXRjaCAoZSkge31cblxuICB2YXIgcmVzdWx0ID0gbmF0aXZlT2JqZWN0VG9TdHJpbmcuY2FsbCh2YWx1ZSk7XG4gIGlmICh1bm1hc2tlZCkge1xuICAgIGlmIChpc093bikge1xuICAgICAgdmFsdWVbc3ltVG9TdHJpbmdUYWddID0gdGFnO1xuICAgIH0gZWxzZSB7XG4gICAgICBkZWxldGUgdmFsdWVbc3ltVG9TdHJpbmdUYWddO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBnZXRSYXdUYWc7XG4iLCIvKiogVXNlZCBmb3IgYnVpbHQtaW4gbWV0aG9kIHJlZmVyZW5jZXMuICovXG52YXIgb2JqZWN0UHJvdG8gPSBPYmplY3QucHJvdG90eXBlO1xuXG4vKipcbiAqIFVzZWQgdG8gcmVzb2x2ZSB0aGVcbiAqIFtgdG9TdHJpbmdUYWdgXShodHRwOi8vZWNtYS1pbnRlcm5hdGlvbmFsLm9yZy9lY21hLTI2Mi83LjAvI3NlYy1vYmplY3QucHJvdG90eXBlLnRvc3RyaW5nKVxuICogb2YgdmFsdWVzLlxuICovXG52YXIgbmF0aXZlT2JqZWN0VG9TdHJpbmcgPSBvYmplY3RQcm90by50b1N0cmluZztcblxuLyoqXG4gKiBDb252ZXJ0cyBgdmFsdWVgIHRvIGEgc3RyaW5nIHVzaW5nIGBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nYC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY29udmVydC5cbiAqIEByZXR1cm5zIHtzdHJpbmd9IFJldHVybnMgdGhlIGNvbnZlcnRlZCBzdHJpbmcuXG4gKi9cbmZ1bmN0aW9uIG9iamVjdFRvU3RyaW5nKHZhbHVlKSB7XG4gIHJldHVybiBuYXRpdmVPYmplY3RUb1N0cmluZy5jYWxsKHZhbHVlKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgb2JqZWN0VG9TdHJpbmc7XG4iLCJpbXBvcnQgU3ltYm9sIGZyb20gJy4vX1N5bWJvbC5qcyc7XG5pbXBvcnQgZ2V0UmF3VGFnIGZyb20gJy4vX2dldFJhd1RhZy5qcyc7XG5pbXBvcnQgb2JqZWN0VG9TdHJpbmcgZnJvbSAnLi9fb2JqZWN0VG9TdHJpbmcuanMnO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgbnVsbFRhZyA9ICdbb2JqZWN0IE51bGxdJyxcbiAgICB1bmRlZmluZWRUYWcgPSAnW29iamVjdCBVbmRlZmluZWRdJztcblxuLyoqIEJ1aWx0LWluIHZhbHVlIHJlZmVyZW5jZXMuICovXG52YXIgc3ltVG9TdHJpbmdUYWcgPSBTeW1ib2wgPyBTeW1ib2wudG9TdHJpbmdUYWcgOiB1bmRlZmluZWQ7XG5cbi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYGdldFRhZ2Agd2l0aG91dCBmYWxsYmFja3MgZm9yIGJ1Z2d5IGVudmlyb25tZW50cy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gcXVlcnkuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBgdG9TdHJpbmdUYWdgLlxuICovXG5mdW5jdGlvbiBiYXNlR2V0VGFnKHZhbHVlKSB7XG4gIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgcmV0dXJuIHZhbHVlID09PSB1bmRlZmluZWQgPyB1bmRlZmluZWRUYWcgOiBudWxsVGFnO1xuICB9XG4gIHJldHVybiAoc3ltVG9TdHJpbmdUYWcgJiYgc3ltVG9TdHJpbmdUYWcgaW4gT2JqZWN0KHZhbHVlKSlcbiAgICA/IGdldFJhd1RhZyh2YWx1ZSlcbiAgICA6IG9iamVjdFRvU3RyaW5nKHZhbHVlKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgYmFzZUdldFRhZztcbiIsImltcG9ydCBvdmVyQXJnIGZyb20gJy4vX292ZXJBcmcuanMnO1xuXG4vKiogQnVpbHQtaW4gdmFsdWUgcmVmZXJlbmNlcy4gKi9cbnZhciBnZXRQcm90b3R5cGUgPSBvdmVyQXJnKE9iamVjdC5nZXRQcm90b3R5cGVPZiwgT2JqZWN0KTtcblxuZXhwb3J0IGRlZmF1bHQgZ2V0UHJvdG90eXBlO1xuIiwiLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZS4gQSB2YWx1ZSBpcyBvYmplY3QtbGlrZSBpZiBpdCdzIG5vdCBgbnVsbGBcbiAqIGFuZCBoYXMgYSBgdHlwZW9mYCByZXN1bHQgb2YgXCJvYmplY3RcIi5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBvYmplY3QtbGlrZSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZSh7fSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc09iamVjdExpa2UoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShudWxsKTtcbiAqIC8vID0+IGZhbHNlXG4gKi9cbmZ1bmN0aW9uIGlzT2JqZWN0TGlrZSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWUgIT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT0gJ29iamVjdCc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGlzT2JqZWN0TGlrZTtcbiIsImltcG9ydCBiYXNlR2V0VGFnIGZyb20gJy4vX2Jhc2VHZXRUYWcuanMnO1xuaW1wb3J0IGdldFByb3RvdHlwZSBmcm9tICcuL19nZXRQcm90b3R5cGUuanMnO1xuaW1wb3J0IGlzT2JqZWN0TGlrZSBmcm9tICcuL2lzT2JqZWN0TGlrZS5qcyc7XG5cbi8qKiBgT2JqZWN0I3RvU3RyaW5nYCByZXN1bHQgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RUYWcgPSAnW29iamVjdCBPYmplY3RdJztcblxuLyoqIFVzZWQgZm9yIGJ1aWx0LWluIG1ldGhvZCByZWZlcmVuY2VzLiAqL1xudmFyIGZ1bmNQcm90byA9IEZ1bmN0aW9uLnByb3RvdHlwZSxcbiAgICBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKiBVc2VkIHRvIHJlc29sdmUgdGhlIGRlY29tcGlsZWQgc291cmNlIG9mIGZ1bmN0aW9ucy4gKi9cbnZhciBmdW5jVG9TdHJpbmcgPSBmdW5jUHJvdG8udG9TdHJpbmc7XG5cbi8qKiBVc2VkIHRvIGNoZWNrIG9iamVjdHMgZm9yIG93biBwcm9wZXJ0aWVzLiAqL1xudmFyIGhhc093blByb3BlcnR5ID0gb2JqZWN0UHJvdG8uaGFzT3duUHJvcGVydHk7XG5cbi8qKiBVc2VkIHRvIGluZmVyIHRoZSBgT2JqZWN0YCBjb25zdHJ1Y3Rvci4gKi9cbnZhciBvYmplY3RDdG9yU3RyaW5nID0gZnVuY1RvU3RyaW5nLmNhbGwoT2JqZWN0KTtcblxuLyoqXG4gKiBDaGVja3MgaWYgYHZhbHVlYCBpcyBhIHBsYWluIG9iamVjdCwgdGhhdCBpcywgYW4gb2JqZWN0IGNyZWF0ZWQgYnkgdGhlXG4gKiBgT2JqZWN0YCBjb25zdHJ1Y3RvciBvciBvbmUgd2l0aCBhIGBbW1Byb3RvdHlwZV1dYCBvZiBgbnVsbGAuXG4gKlxuICogQHN0YXRpY1xuICogQG1lbWJlck9mIF9cbiAqIEBzaW5jZSAwLjguMFxuICogQGNhdGVnb3J5IExhbmdcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgVGhlIHZhbHVlIHRvIGNoZWNrLlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGB2YWx1ZWAgaXMgYSBwbGFpbiBvYmplY3QsIGVsc2UgYGZhbHNlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogZnVuY3Rpb24gRm9vKCkge1xuICogICB0aGlzLmEgPSAxO1xuICogfVxuICpcbiAqIF8uaXNQbGFpbk9iamVjdChuZXcgRm9vKTtcbiAqIC8vID0+IGZhbHNlXG4gKlxuICogXy5pc1BsYWluT2JqZWN0KFsxLCAyLCAzXSk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNQbGFpbk9iamVjdCh7ICd4JzogMCwgJ3knOiAwIH0pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNQbGFpbk9iamVjdChPYmplY3QuY3JlYXRlKG51bGwpKTtcbiAqIC8vID0+IHRydWVcbiAqL1xuZnVuY3Rpb24gaXNQbGFpbk9iamVjdCh2YWx1ZSkge1xuICBpZiAoIWlzT2JqZWN0TGlrZSh2YWx1ZSkgfHwgYmFzZUdldFRhZyh2YWx1ZSkgIT0gb2JqZWN0VGFnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIHZhciBwcm90byA9IGdldFByb3RvdHlwZSh2YWx1ZSk7XG4gIGlmIChwcm90byA9PT0gbnVsbCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG4gIHZhciBDdG9yID0gaGFzT3duUHJvcGVydHkuY2FsbChwcm90bywgJ2NvbnN0cnVjdG9yJykgJiYgcHJvdG8uY29uc3RydWN0b3I7XG4gIHJldHVybiB0eXBlb2YgQ3RvciA9PSAnZnVuY3Rpb24nICYmIEN0b3IgaW5zdGFuY2VvZiBDdG9yICYmXG4gICAgZnVuY1RvU3RyaW5nLmNhbGwoQ3RvcikgPT0gb2JqZWN0Q3RvclN0cmluZztcbn1cblxuZXhwb3J0IGRlZmF1bHQgaXNQbGFpbk9iamVjdDtcbiIsImltcG9ydCB2ZXJpZnlQbGFpbk9iamVjdCBmcm9tICcuLi91dGlscy92ZXJpZnlQbGFpbk9iamVjdCc7XG5cbmV4cG9ydCBmdW5jdGlvbiB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGdldENvbnN0YW50KSB7XG4gIHJldHVybiBmdW5jdGlvbiBpbml0Q29uc3RhbnRTZWxlY3RvcihkaXNwYXRjaCwgb3B0aW9ucykge1xuICAgIHZhciBjb25zdGFudCA9IGdldENvbnN0YW50KGRpc3BhdGNoLCBvcHRpb25zKTtcblxuICAgIGZ1bmN0aW9uIGNvbnN0YW50U2VsZWN0b3IoKSB7XG4gICAgICByZXR1cm4gY29uc3RhbnQ7XG4gICAgfVxuICAgIGNvbnN0YW50U2VsZWN0b3IuZGVwZW5kc09uT3duUHJvcHMgPSBmYWxzZTtcbiAgICByZXR1cm4gY29uc3RhbnRTZWxlY3RvcjtcbiAgfTtcbn1cblxuLy8gZGVwZW5kc09uT3duUHJvcHMgaXMgdXNlZCBieSBjcmVhdGVNYXBUb1Byb3BzUHJveHkgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdG8gcGFzcyBwcm9wcyBhcyBhcmdzXG4vLyB0byB0aGUgbWFwVG9Qcm9wcyBmdW5jdGlvbiBiZWluZyB3cmFwcGVkLiBJdCBpcyBhbHNvIHVzZWQgYnkgbWFrZVB1cmVQcm9wc1NlbGVjdG9yIHRvIGRldGVybWluZVxuLy8gd2hldGhlciBtYXBUb1Byb3BzIG5lZWRzIHRvIGJlIGludm9rZWQgd2hlbiBwcm9wcyBoYXZlIGNoYW5nZWQuXG4vLyBcbi8vIEEgbGVuZ3RoIG9mIG9uZSBzaWduYWxzIHRoYXQgbWFwVG9Qcm9wcyBkb2VzIG5vdCBkZXBlbmQgb24gcHJvcHMgZnJvbSB0aGUgcGFyZW50IGNvbXBvbmVudC5cbi8vIEEgbGVuZ3RoIG9mIHplcm8gaXMgYXNzdW1lZCB0byBtZWFuIG1hcFRvUHJvcHMgaXMgZ2V0dGluZyBhcmdzIHZpYSBhcmd1bWVudHMgb3IgLi4uYXJncyBhbmRcbi8vIHRoZXJlZm9yZSBub3QgcmVwb3J0aW5nIGl0cyBsZW5ndGggYWNjdXJhdGVseS4uXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGVwZW5kc09uT3duUHJvcHMobWFwVG9Qcm9wcykge1xuICByZXR1cm4gbWFwVG9Qcm9wcy5kZXBlbmRzT25Pd25Qcm9wcyAhPT0gbnVsbCAmJiBtYXBUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzICE9PSB1bmRlZmluZWQgPyBCb29sZWFuKG1hcFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIDogbWFwVG9Qcm9wcy5sZW5ndGggIT09IDE7XG59XG5cbi8vIFVzZWQgYnkgd2hlbk1hcFN0YXRlVG9Qcm9wc0lzRnVuY3Rpb24gYW5kIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uLFxuLy8gdGhpcyBmdW5jdGlvbiB3cmFwcyBtYXBUb1Byb3BzIGluIGEgcHJveHkgZnVuY3Rpb24gd2hpY2ggZG9lcyBzZXZlcmFsIHRoaW5nczpcbi8vIFxuLy8gICogRGV0ZWN0cyB3aGV0aGVyIHRoZSBtYXBUb1Byb3BzIGZ1bmN0aW9uIGJlaW5nIGNhbGxlZCBkZXBlbmRzIG9uIHByb3BzLCB3aGljaFxuLy8gICAgaXMgdXNlZCBieSBzZWxlY3RvckZhY3RvcnkgdG8gZGVjaWRlIGlmIGl0IHNob3VsZCByZWludm9rZSBvbiBwcm9wcyBjaGFuZ2VzLlxuLy8gICAgXG4vLyAgKiBPbiBmaXJzdCBjYWxsLCBoYW5kbGVzIG1hcFRvUHJvcHMgaWYgcmV0dXJucyBhbm90aGVyIGZ1bmN0aW9uLCBhbmQgdHJlYXRzIHRoYXRcbi8vICAgIG5ldyBmdW5jdGlvbiBhcyB0aGUgdHJ1ZSBtYXBUb1Byb3BzIGZvciBzdWJzZXF1ZW50IGNhbGxzLlxuLy8gICAgXG4vLyAgKiBPbiBmaXJzdCBjYWxsLCB2ZXJpZmllcyB0aGUgZmlyc3QgcmVzdWx0IGlzIGEgcGxhaW4gb2JqZWN0LCBpbiBvcmRlciB0byB3YXJuXG4vLyAgICB0aGUgZGV2ZWxvcGVyIHRoYXQgdGhlaXIgbWFwVG9Qcm9wcyBmdW5jdGlvbiBpcyBub3QgcmV0dXJuaW5nIGEgdmFsaWQgcmVzdWx0LlxuLy8gICAgXG5leHBvcnQgZnVuY3Rpb24gd3JhcE1hcFRvUHJvcHNGdW5jKG1hcFRvUHJvcHMsIG1ldGhvZE5hbWUpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRQcm94eVNlbGVjdG9yKGRpc3BhdGNoLCBfcmVmKSB7XG4gICAgdmFyIGRpc3BsYXlOYW1lID0gX3JlZi5kaXNwbGF5TmFtZTtcblxuICAgIHZhciBwcm94eSA9IGZ1bmN0aW9uIG1hcFRvUHJvcHNQcm94eShzdGF0ZU9yRGlzcGF0Y2gsIG93blByb3BzKSB7XG4gICAgICByZXR1cm4gcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPyBwcm94eS5tYXBUb1Byb3BzKHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIDogcHJveHkubWFwVG9Qcm9wcyhzdGF0ZU9yRGlzcGF0Y2gpO1xuICAgIH07XG5cbiAgICAvLyBhbGxvdyBkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5IHRvIGdldCBvd25Qcm9wc1xuICAgIHByb3h5LmRlcGVuZHNPbk93blByb3BzID0gdHJ1ZTtcblxuICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBmdW5jdGlvbiBkZXRlY3RGYWN0b3J5QW5kVmVyaWZ5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpIHtcbiAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBtYXBUb1Byb3BzO1xuICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhtYXBUb1Byb3BzKTtcbiAgICAgIHZhciBwcm9wcyA9IHByb3h5KHN0YXRlT3JEaXNwYXRjaCwgb3duUHJvcHMpO1xuXG4gICAgICBpZiAodHlwZW9mIHByb3BzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIHByb3h5Lm1hcFRvUHJvcHMgPSBwcm9wcztcbiAgICAgICAgcHJveHkuZGVwZW5kc09uT3duUHJvcHMgPSBnZXREZXBlbmRzT25Pd25Qcm9wcyhwcm9wcyk7XG4gICAgICAgIHByb3BzID0gcHJveHkoc3RhdGVPckRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgICB9XG5cbiAgICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB2ZXJpZnlQbGFpbk9iamVjdChwcm9wcywgZGlzcGxheU5hbWUsIG1ldGhvZE5hbWUpO1xuXG4gICAgICByZXR1cm4gcHJvcHM7XG4gICAgfTtcblxuICAgIHJldHVybiBwcm94eTtcbiAgfTtcbn0iLCJpbXBvcnQgeyBiaW5kQWN0aW9uQ3JlYXRvcnMgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgeyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50LCB3cmFwTWFwVG9Qcm9wc0Z1bmMgfSBmcm9tICcuL3dyYXBNYXBUb1Byb3BzJztcblxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc0Z1bmN0aW9uKG1hcERpc3BhdGNoVG9Qcm9wcykge1xuICByZXR1cm4gdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ2Z1bmN0aW9uJyA/IHdyYXBNYXBUb1Byb3BzRnVuYyhtYXBEaXNwYXRjaFRvUHJvcHMsICdtYXBEaXNwYXRjaFRvUHJvcHMnKSA6IHVuZGVmaW5lZDtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiAhbWFwRGlzcGF0Y2hUb1Byb3BzID8gd3JhcE1hcFRvUHJvcHNDb25zdGFudChmdW5jdGlvbiAoZGlzcGF0Y2gpIHtcbiAgICByZXR1cm4geyBkaXNwYXRjaDogZGlzcGF0Y2ggfTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwRGlzcGF0Y2hUb1Byb3BzSXNPYmplY3QobWFwRGlzcGF0Y2hUb1Byb3BzKSB7XG4gIHJldHVybiBtYXBEaXNwYXRjaFRvUHJvcHMgJiYgdHlwZW9mIG1hcERpc3BhdGNoVG9Qcm9wcyA9PT0gJ29iamVjdCcgPyB3cmFwTWFwVG9Qcm9wc0NvbnN0YW50KGZ1bmN0aW9uIChkaXNwYXRjaCkge1xuICAgIHJldHVybiBiaW5kQWN0aW9uQ3JlYXRvcnMobWFwRGlzcGF0Y2hUb1Byb3BzLCBkaXNwYXRjaCk7XG4gIH0pIDogdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgZGVmYXVsdCBbd2hlbk1hcERpc3BhdGNoVG9Qcm9wc0lzRnVuY3Rpb24sIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc01pc3NpbmcsIHdoZW5NYXBEaXNwYXRjaFRvUHJvcHNJc09iamVjdF07IiwiaW1wb3J0IHsgd3JhcE1hcFRvUHJvcHNDb25zdGFudCwgd3JhcE1hcFRvUHJvcHNGdW5jIH0gZnJvbSAnLi93cmFwTWFwVG9Qcm9wcyc7XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbihtYXBTdGF0ZVRvUHJvcHMpIHtcbiAgcmV0dXJuIHR5cGVvZiBtYXBTdGF0ZVRvUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWFwVG9Qcm9wc0Z1bmMobWFwU3RhdGVUb1Byb3BzLCAnbWFwU3RhdGVUb1Byb3BzJykgOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWFwU3RhdGVUb1Byb3BzSXNNaXNzaW5nKG1hcFN0YXRlVG9Qcm9wcykge1xuICByZXR1cm4gIW1hcFN0YXRlVG9Qcm9wcyA/IHdyYXBNYXBUb1Byb3BzQ29uc3RhbnQoZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB7fTtcbiAgfSkgOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWFwU3RhdGVUb1Byb3BzSXNGdW5jdGlvbiwgd2hlbk1hcFN0YXRlVG9Qcm9wc0lzTWlzc2luZ107IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuaW1wb3J0IHZlcmlmeVBsYWluT2JqZWN0IGZyb20gJy4uL3V0aWxzL3ZlcmlmeVBsYWluT2JqZWN0JztcblxuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRNZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gIHJldHVybiBfZXh0ZW5kcyh7fSwgb3duUHJvcHMsIHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gd3JhcE1lcmdlUHJvcHNGdW5jKG1lcmdlUHJvcHMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGluaXRNZXJnZVByb3BzUHJveHkoZGlzcGF0Y2gsIF9yZWYpIHtcbiAgICB2YXIgZGlzcGxheU5hbWUgPSBfcmVmLmRpc3BsYXlOYW1lLFxuICAgICAgICBwdXJlID0gX3JlZi5wdXJlLFxuICAgICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsID0gX3JlZi5hcmVNZXJnZWRQcm9wc0VxdWFsO1xuXG4gICAgdmFyIGhhc1J1bk9uY2UgPSBmYWxzZTtcbiAgICB2YXIgbWVyZ2VkUHJvcHMgPSB2b2lkIDA7XG5cbiAgICByZXR1cm4gZnVuY3Rpb24gbWVyZ2VQcm9wc1Byb3h5KHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKSB7XG4gICAgICB2YXIgbmV4dE1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG5cbiAgICAgIGlmIChoYXNSdW5PbmNlKSB7XG4gICAgICAgIGlmICghcHVyZSB8fCAhYXJlTWVyZ2VkUHJvcHNFcXVhbChuZXh0TWVyZ2VkUHJvcHMsIG1lcmdlZFByb3BzKSkgbWVyZ2VkUHJvcHMgPSBuZXh0TWVyZ2VkUHJvcHM7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBoYXNSdW5PbmNlID0gdHJ1ZTtcbiAgICAgICAgbWVyZ2VkUHJvcHMgPSBuZXh0TWVyZ2VkUHJvcHM7XG5cbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHZlcmlmeVBsYWluT2JqZWN0KG1lcmdlZFByb3BzLCBkaXNwbGF5TmFtZSwgJ21lcmdlUHJvcHMnKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICAgIH07XG4gIH07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWVyZ2VQcm9wc0lzRnVuY3Rpb24obWVyZ2VQcm9wcykge1xuICByZXR1cm4gdHlwZW9mIG1lcmdlUHJvcHMgPT09ICdmdW5jdGlvbicgPyB3cmFwTWVyZ2VQcm9wc0Z1bmMobWVyZ2VQcm9wcykgOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiB3aGVuTWVyZ2VQcm9wc0lzT21pdHRlZChtZXJnZVByb3BzKSB7XG4gIHJldHVybiAhbWVyZ2VQcm9wcyA/IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gZGVmYXVsdE1lcmdlUHJvcHM7XG4gIH0gOiB1bmRlZmluZWQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0IFt3aGVuTWVyZ2VQcm9wc0lzRnVuY3Rpb24sIHdoZW5NZXJnZVByb3BzSXNPbWl0dGVkXTsiLCJmdW5jdGlvbiBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMob2JqLCBrZXlzKSB7IHZhciB0YXJnZXQgPSB7fTsgZm9yICh2YXIgaSBpbiBvYmopIHsgaWYgKGtleXMuaW5kZXhPZihpKSA+PSAwKSBjb250aW51ZTsgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBpKSkgY29udGludWU7IHRhcmdldFtpXSA9IG9ialtpXTsgfSByZXR1cm4gdGFyZ2V0OyB9XG5cbmltcG9ydCB2ZXJpZnlTdWJzZWxlY3RvcnMgZnJvbSAnLi92ZXJpZnlTdWJzZWxlY3RvcnMnO1xuXG5leHBvcnQgZnVuY3Rpb24gaW1wdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeShtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcywgbWVyZ2VQcm9wcywgZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uIGltcHVyZUZpbmFsUHJvcHNTZWxlY3RvcihzdGF0ZSwgb3duUHJvcHMpIHtcbiAgICByZXR1cm4gbWVyZ2VQcm9wcyhtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKSwgbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyksIG93blByb3BzKTtcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBkaXNwYXRjaCwgX3JlZikge1xuICB2YXIgYXJlU3RhdGVzRXF1YWwgPSBfcmVmLmFyZVN0YXRlc0VxdWFsLFxuICAgICAgYXJlT3duUHJvcHNFcXVhbCA9IF9yZWYuYXJlT3duUHJvcHNFcXVhbCxcbiAgICAgIGFyZVN0YXRlUHJvcHNFcXVhbCA9IF9yZWYuYXJlU3RhdGVQcm9wc0VxdWFsO1xuXG4gIHZhciBoYXNSdW5BdExlYXN0T25jZSA9IGZhbHNlO1xuICB2YXIgc3RhdGUgPSB2b2lkIDA7XG4gIHZhciBvd25Qcm9wcyA9IHZvaWQgMDtcbiAgdmFyIHN0YXRlUHJvcHMgPSB2b2lkIDA7XG4gIHZhciBkaXNwYXRjaFByb3BzID0gdm9pZCAwO1xuICB2YXIgbWVyZ2VkUHJvcHMgPSB2b2lkIDA7XG5cbiAgZnVuY3Rpb24gaGFuZGxlRmlyc3RDYWxsKGZpcnN0U3RhdGUsIGZpcnN0T3duUHJvcHMpIHtcbiAgICBzdGF0ZSA9IGZpcnN0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBmaXJzdE93blByb3BzO1xuICAgIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcbiAgICBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG4gICAgbWVyZ2VkUHJvcHMgPSBtZXJnZVByb3BzKHN0YXRlUHJvcHMsIGRpc3BhdGNoUHJvcHMsIG93blByb3BzKTtcbiAgICBoYXNSdW5BdExlYXN0T25jZSA9IHRydWU7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3UHJvcHNBbmROZXdTdGF0ZSgpIHtcbiAgICBzdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG5cbiAgICBpZiAobWFwRGlzcGF0Y2hUb1Byb3BzLmRlcGVuZHNPbk93blByb3BzKSBkaXNwYXRjaFByb3BzID0gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvd25Qcm9wcyk7XG5cbiAgICBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuICAgIHJldHVybiBtZXJnZWRQcm9wcztcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZU5ld1Byb3BzKCkge1xuICAgIGlmIChtYXBTdGF0ZVRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIHN0YXRlUHJvcHMgPSBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKTtcblxuICAgIGlmIChtYXBEaXNwYXRjaFRvUHJvcHMuZGVwZW5kc09uT3duUHJvcHMpIGRpc3BhdGNoUHJvcHMgPSBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gsIG93blByb3BzKTtcblxuICAgIG1lcmdlZFByb3BzID0gbWVyZ2VQcm9wcyhzdGF0ZVByb3BzLCBkaXNwYXRjaFByb3BzLCBvd25Qcm9wcyk7XG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlTmV3U3RhdGUoKSB7XG4gICAgdmFyIG5leHRTdGF0ZVByb3BzID0gbWFwU3RhdGVUb1Byb3BzKHN0YXRlLCBvd25Qcm9wcyk7XG4gICAgdmFyIHN0YXRlUHJvcHNDaGFuZ2VkID0gIWFyZVN0YXRlUHJvcHNFcXVhbChuZXh0U3RhdGVQcm9wcywgc3RhdGVQcm9wcyk7XG4gICAgc3RhdGVQcm9wcyA9IG5leHRTdGF0ZVByb3BzO1xuXG4gICAgaWYgKHN0YXRlUHJvcHNDaGFuZ2VkKSBtZXJnZWRQcm9wcyA9IG1lcmdlUHJvcHMoc3RhdGVQcm9wcywgZGlzcGF0Y2hQcm9wcywgb3duUHJvcHMpO1xuXG4gICAgcmV0dXJuIG1lcmdlZFByb3BzO1xuICB9XG5cbiAgZnVuY3Rpb24gaGFuZGxlU3Vic2VxdWVudENhbGxzKG5leHRTdGF0ZSwgbmV4dE93blByb3BzKSB7XG4gICAgdmFyIHByb3BzQ2hhbmdlZCA9ICFhcmVPd25Qcm9wc0VxdWFsKG5leHRPd25Qcm9wcywgb3duUHJvcHMpO1xuICAgIHZhciBzdGF0ZUNoYW5nZWQgPSAhYXJlU3RhdGVzRXF1YWwobmV4dFN0YXRlLCBzdGF0ZSk7XG4gICAgc3RhdGUgPSBuZXh0U3RhdGU7XG4gICAgb3duUHJvcHMgPSBuZXh0T3duUHJvcHM7XG5cbiAgICBpZiAocHJvcHNDaGFuZ2VkICYmIHN0YXRlQ2hhbmdlZCkgcmV0dXJuIGhhbmRsZU5ld1Byb3BzQW5kTmV3U3RhdGUoKTtcbiAgICBpZiAocHJvcHNDaGFuZ2VkKSByZXR1cm4gaGFuZGxlTmV3UHJvcHMoKTtcbiAgICBpZiAoc3RhdGVDaGFuZ2VkKSByZXR1cm4gaGFuZGxlTmV3U3RhdGUoKTtcbiAgICByZXR1cm4gbWVyZ2VkUHJvcHM7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gcHVyZUZpbmFsUHJvcHNTZWxlY3RvcihuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykge1xuICAgIHJldHVybiBoYXNSdW5BdExlYXN0T25jZSA/IGhhbmRsZVN1YnNlcXVlbnRDYWxscyhuZXh0U3RhdGUsIG5leHRPd25Qcm9wcykgOiBoYW5kbGVGaXJzdENhbGwobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpO1xuICB9O1xufVxuXG4vLyBUT0RPOiBBZGQgbW9yZSBjb21tZW50c1xuXG4vLyBJZiBwdXJlIGlzIHRydWUsIHRoZSBzZWxlY3RvciByZXR1cm5lZCBieSBzZWxlY3RvckZhY3Rvcnkgd2lsbCBtZW1vaXplIGl0cyByZXN1bHRzLFxuLy8gYWxsb3dpbmcgY29ubmVjdEFkdmFuY2VkJ3Mgc2hvdWxkQ29tcG9uZW50VXBkYXRlIHRvIHJldHVybiBmYWxzZSBpZiBmaW5hbFxuLy8gcHJvcHMgaGF2ZSBub3QgY2hhbmdlZC4gSWYgZmFsc2UsIHRoZSBzZWxlY3RvciB3aWxsIGFsd2F5cyByZXR1cm4gYSBuZXdcbi8vIG9iamVjdCBhbmQgc2hvdWxkQ29tcG9uZW50VXBkYXRlIHdpbGwgYWx3YXlzIHJldHVybiB0cnVlLlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBmaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5KGRpc3BhdGNoLCBfcmVmMikge1xuICB2YXIgaW5pdE1hcFN0YXRlVG9Qcm9wcyA9IF9yZWYyLmluaXRNYXBTdGF0ZVRvUHJvcHMsXG4gICAgICBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzID0gX3JlZjIuaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzID0gX3JlZjIuaW5pdE1lcmdlUHJvcHMsXG4gICAgICBvcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYyLCBbJ2luaXRNYXBTdGF0ZVRvUHJvcHMnLCAnaW5pdE1hcERpc3BhdGNoVG9Qcm9wcycsICdpbml0TWVyZ2VQcm9wcyddKTtcblxuICB2YXIgbWFwU3RhdGVUb1Byb3BzID0gaW5pdE1hcFN0YXRlVG9Qcm9wcyhkaXNwYXRjaCwgb3B0aW9ucyk7XG4gIHZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBpbml0TWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoLCBvcHRpb25zKTtcbiAgdmFyIG1lcmdlUHJvcHMgPSBpbml0TWVyZ2VQcm9wcyhkaXNwYXRjaCwgb3B0aW9ucyk7XG5cbiAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICB2ZXJpZnlTdWJzZWxlY3RvcnMobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMsIG9wdGlvbnMuZGlzcGxheU5hbWUpO1xuICB9XG5cbiAgdmFyIHNlbGVjdG9yRmFjdG9yeSA9IG9wdGlvbnMucHVyZSA/IHB1cmVGaW5hbFByb3BzU2VsZWN0b3JGYWN0b3J5IDogaW1wdXJlRmluYWxQcm9wc1NlbGVjdG9yRmFjdG9yeTtcblxuICByZXR1cm4gc2VsZWN0b3JGYWN0b3J5KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzLCBtZXJnZVByb3BzLCBkaXNwYXRjaCwgb3B0aW9ucyk7XG59IiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgY29ubmVjdEFkdmFuY2VkIGZyb20gJy4uL2NvbXBvbmVudHMvY29ubmVjdEFkdmFuY2VkJztcbmltcG9ydCBzaGFsbG93RXF1YWwgZnJvbSAnLi4vdXRpbHMvc2hhbGxvd0VxdWFsJztcbmltcG9ydCBkZWZhdWx0TWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzIGZyb20gJy4vbWFwRGlzcGF0Y2hUb1Byb3BzJztcbmltcG9ydCBkZWZhdWx0TWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzIGZyb20gJy4vbWFwU3RhdGVUb1Byb3BzJztcbmltcG9ydCBkZWZhdWx0TWVyZ2VQcm9wc0ZhY3RvcmllcyBmcm9tICcuL21lcmdlUHJvcHMnO1xuaW1wb3J0IGRlZmF1bHRTZWxlY3RvckZhY3RvcnkgZnJvbSAnLi9zZWxlY3RvckZhY3RvcnknO1xuXG4vKlxuICBjb25uZWN0IGlzIGEgZmFjYWRlIG92ZXIgY29ubmVjdEFkdmFuY2VkLiBJdCB0dXJucyBpdHMgYXJncyBpbnRvIGEgY29tcGF0aWJsZVxuICBzZWxlY3RvckZhY3RvcnksIHdoaWNoIGhhcyB0aGUgc2lnbmF0dXJlOlxuXG4gICAgKGRpc3BhdGNoLCBvcHRpb25zKSA9PiAobmV4dFN0YXRlLCBuZXh0T3duUHJvcHMpID0+IG5leHRGaW5hbFByb3BzXG4gIFxuICBjb25uZWN0IHBhc3NlcyBpdHMgYXJncyB0byBjb25uZWN0QWR2YW5jZWQgYXMgb3B0aW9ucywgd2hpY2ggd2lsbCBpbiB0dXJuIHBhc3MgdGhlbSB0b1xuICBzZWxlY3RvckZhY3RvcnkgZWFjaCB0aW1lIGEgQ29ubmVjdCBjb21wb25lbnQgaW5zdGFuY2UgaXMgaW5zdGFudGlhdGVkIG9yIGhvdCByZWxvYWRlZC5cblxuICBzZWxlY3RvckZhY3RvcnkgcmV0dXJucyBhIGZpbmFsIHByb3BzIHNlbGVjdG9yIGZyb20gaXRzIG1hcFN0YXRlVG9Qcm9wcyxcbiAgbWFwU3RhdGVUb1Byb3BzRmFjdG9yaWVzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcywgbWVyZ2VQcm9wcyxcbiAgbWVyZ2VQcm9wc0ZhY3RvcmllcywgYW5kIHB1cmUgYXJncy5cblxuICBUaGUgcmVzdWx0aW5nIGZpbmFsIHByb3BzIHNlbGVjdG9yIGlzIGNhbGxlZCBieSB0aGUgQ29ubmVjdCBjb21wb25lbnQgaW5zdGFuY2Ugd2hlbmV2ZXJcbiAgaXQgcmVjZWl2ZXMgbmV3IHByb3BzIG9yIHN0b3JlIHN0YXRlLlxuICovXG5cbmZ1bmN0aW9uIG1hdGNoKGFyZywgZmFjdG9yaWVzLCBuYW1lKSB7XG4gIGZvciAodmFyIGkgPSBmYWN0b3JpZXMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIHtcbiAgICB2YXIgcmVzdWx0ID0gZmFjdG9yaWVzW2ldKGFyZyk7XG4gICAgaWYgKHJlc3VsdCkgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoZGlzcGF0Y2gsIG9wdGlvbnMpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQgdmFsdWUgb2YgdHlwZSAnICsgdHlwZW9mIGFyZyArICcgZm9yICcgKyBuYW1lICsgJyBhcmd1bWVudCB3aGVuIGNvbm5lY3RpbmcgY29tcG9uZW50ICcgKyBvcHRpb25zLndyYXBwZWRDb21wb25lbnROYW1lICsgJy4nKTtcbiAgfTtcbn1cblxuZnVuY3Rpb24gc3RyaWN0RXF1YWwoYSwgYikge1xuICByZXR1cm4gYSA9PT0gYjtcbn1cblxuLy8gY3JlYXRlQ29ubmVjdCB3aXRoIGRlZmF1bHQgYXJncyBidWlsZHMgdGhlICdvZmZpY2lhbCcgY29ubmVjdCBiZWhhdmlvci4gQ2FsbGluZyBpdCB3aXRoXG4vLyBkaWZmZXJlbnQgb3B0aW9ucyBvcGVucyB1cCBzb21lIHRlc3RpbmcgYW5kIGV4dGVuc2liaWxpdHkgc2NlbmFyaW9zXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQ29ubmVjdCgpIHtcbiAgdmFyIF9yZWYgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IHt9LFxuICAgICAgX3JlZiRjb25uZWN0SE9DID0gX3JlZi5jb25uZWN0SE9DLFxuICAgICAgY29ubmVjdEhPQyA9IF9yZWYkY29ubmVjdEhPQyA9PT0gdW5kZWZpbmVkID8gY29ubmVjdEFkdmFuY2VkIDogX3JlZiRjb25uZWN0SE9DLFxuICAgICAgX3JlZiRtYXBTdGF0ZVRvUHJvcHNGID0gX3JlZi5tYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMsXG4gICAgICBtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMgPSBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRNYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMgOiBfcmVmJG1hcFN0YXRlVG9Qcm9wc0YsXG4gICAgICBfcmVmJG1hcERpc3BhdGNoVG9Qcm8gPSBfcmVmLm1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyA9IF9yZWYkbWFwRGlzcGF0Y2hUb1BybyA9PT0gdW5kZWZpbmVkID8gZGVmYXVsdE1hcERpc3BhdGNoVG9Qcm9wc0ZhY3RvcmllcyA6IF9yZWYkbWFwRGlzcGF0Y2hUb1BybyxcbiAgICAgIF9yZWYkbWVyZ2VQcm9wc0ZhY3RvciA9IF9yZWYubWVyZ2VQcm9wc0ZhY3RvcmllcyxcbiAgICAgIG1lcmdlUHJvcHNGYWN0b3JpZXMgPSBfcmVmJG1lcmdlUHJvcHNGYWN0b3IgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRNZXJnZVByb3BzRmFjdG9yaWVzIDogX3JlZiRtZXJnZVByb3BzRmFjdG9yLFxuICAgICAgX3JlZiRzZWxlY3RvckZhY3RvcnkgPSBfcmVmLnNlbGVjdG9yRmFjdG9yeSxcbiAgICAgIHNlbGVjdG9yRmFjdG9yeSA9IF9yZWYkc2VsZWN0b3JGYWN0b3J5ID09PSB1bmRlZmluZWQgPyBkZWZhdWx0U2VsZWN0b3JGYWN0b3J5IDogX3JlZiRzZWxlY3RvckZhY3Rvcnk7XG5cbiAgcmV0dXJuIGZ1bmN0aW9uIGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMsIG1lcmdlUHJvcHMpIHtcbiAgICB2YXIgX3JlZjIgPSBhcmd1bWVudHMubGVuZ3RoID4gMyAmJiBhcmd1bWVudHNbM10gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1szXSA6IHt9LFxuICAgICAgICBfcmVmMiRwdXJlID0gX3JlZjIucHVyZSxcbiAgICAgICAgcHVyZSA9IF9yZWYyJHB1cmUgPT09IHVuZGVmaW5lZCA/IHRydWUgOiBfcmVmMiRwdXJlLFxuICAgICAgICBfcmVmMiRhcmVTdGF0ZXNFcXVhbCA9IF9yZWYyLmFyZVN0YXRlc0VxdWFsLFxuICAgICAgICBhcmVTdGF0ZXNFcXVhbCA9IF9yZWYyJGFyZVN0YXRlc0VxdWFsID09PSB1bmRlZmluZWQgPyBzdHJpY3RFcXVhbCA6IF9yZWYyJGFyZVN0YXRlc0VxdWFsLFxuICAgICAgICBfcmVmMiRhcmVPd25Qcm9wc0VxdWEgPSBfcmVmMi5hcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgICBhcmVPd25Qcm9wc0VxdWFsID0gX3JlZjIkYXJlT3duUHJvcHNFcXVhID09PSB1bmRlZmluZWQgPyBzaGFsbG93RXF1YWwgOiBfcmVmMiRhcmVPd25Qcm9wc0VxdWEsXG4gICAgICAgIF9yZWYyJGFyZVN0YXRlUHJvcHNFcSA9IF9yZWYyLmFyZVN0YXRlUHJvcHNFcXVhbCxcbiAgICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsID0gX3JlZjIkYXJlU3RhdGVQcm9wc0VxID09PSB1bmRlZmluZWQgPyBzaGFsbG93RXF1YWwgOiBfcmVmMiRhcmVTdGF0ZVByb3BzRXEsXG4gICAgICAgIF9yZWYyJGFyZU1lcmdlZFByb3BzRSA9IF9yZWYyLmFyZU1lcmdlZFByb3BzRXF1YWwsXG4gICAgICAgIGFyZU1lcmdlZFByb3BzRXF1YWwgPSBfcmVmMiRhcmVNZXJnZWRQcm9wc0UgPT09IHVuZGVmaW5lZCA/IHNoYWxsb3dFcXVhbCA6IF9yZWYyJGFyZU1lcmdlZFByb3BzRSxcbiAgICAgICAgZXh0cmFPcHRpb25zID0gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKF9yZWYyLCBbJ3B1cmUnLCAnYXJlU3RhdGVzRXF1YWwnLCAnYXJlT3duUHJvcHNFcXVhbCcsICdhcmVTdGF0ZVByb3BzRXF1YWwnLCAnYXJlTWVyZ2VkUHJvcHNFcXVhbCddKTtcblxuICAgIHZhciBpbml0TWFwU3RhdGVUb1Byb3BzID0gbWF0Y2gobWFwU3RhdGVUb1Byb3BzLCBtYXBTdGF0ZVRvUHJvcHNGYWN0b3JpZXMsICdtYXBTdGF0ZVRvUHJvcHMnKTtcbiAgICB2YXIgaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyA9IG1hdGNoKG1hcERpc3BhdGNoVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzRmFjdG9yaWVzLCAnbWFwRGlzcGF0Y2hUb1Byb3BzJyk7XG4gICAgdmFyIGluaXRNZXJnZVByb3BzID0gbWF0Y2gobWVyZ2VQcm9wcywgbWVyZ2VQcm9wc0ZhY3RvcmllcywgJ21lcmdlUHJvcHMnKTtcblxuICAgIHJldHVybiBjb25uZWN0SE9DKHNlbGVjdG9yRmFjdG9yeSwgX2V4dGVuZHMoe1xuICAgICAgLy8gdXNlZCBpbiBlcnJvciBtZXNzYWdlc1xuICAgICAgbWV0aG9kTmFtZTogJ2Nvbm5lY3QnLFxuXG4gICAgICAvLyB1c2VkIHRvIGNvbXB1dGUgQ29ubmVjdCdzIGRpc3BsYXlOYW1lIGZyb20gdGhlIHdyYXBwZWQgY29tcG9uZW50J3MgZGlzcGxheU5hbWUuXG4gICAgICBnZXREaXNwbGF5TmFtZTogZnVuY3Rpb24gZ2V0RGlzcGxheU5hbWUobmFtZSkge1xuICAgICAgICByZXR1cm4gJ0Nvbm5lY3QoJyArIG5hbWUgKyAnKSc7XG4gICAgICB9LFxuXG4gICAgICAvLyBpZiBtYXBTdGF0ZVRvUHJvcHMgaXMgZmFsc3ksIHRoZSBDb25uZWN0IGNvbXBvbmVudCBkb2Vzbid0IHN1YnNjcmliZSB0byBzdG9yZSBzdGF0ZSBjaGFuZ2VzXG4gICAgICBzaG91bGRIYW5kbGVTdGF0ZUNoYW5nZXM6IEJvb2xlYW4obWFwU3RhdGVUb1Byb3BzKSxcblxuICAgICAgLy8gcGFzc2VkIHRocm91Z2ggdG8gc2VsZWN0b3JGYWN0b3J5XG4gICAgICBpbml0TWFwU3RhdGVUb1Byb3BzOiBpbml0TWFwU3RhdGVUb1Byb3BzLFxuICAgICAgaW5pdE1hcERpc3BhdGNoVG9Qcm9wczogaW5pdE1hcERpc3BhdGNoVG9Qcm9wcyxcbiAgICAgIGluaXRNZXJnZVByb3BzOiBpbml0TWVyZ2VQcm9wcyxcbiAgICAgIHB1cmU6IHB1cmUsXG4gICAgICBhcmVTdGF0ZXNFcXVhbDogYXJlU3RhdGVzRXF1YWwsXG4gICAgICBhcmVPd25Qcm9wc0VxdWFsOiBhcmVPd25Qcm9wc0VxdWFsLFxuICAgICAgYXJlU3RhdGVQcm9wc0VxdWFsOiBhcmVTdGF0ZVByb3BzRXF1YWwsXG4gICAgICBhcmVNZXJnZWRQcm9wc0VxdWFsOiBhcmVNZXJnZWRQcm9wc0VxdWFsXG5cbiAgICB9LCBleHRyYU9wdGlvbnMpKTtcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlQ29ubmVjdCgpOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7cmVuZGVyfSBmcm9tICdyZWFjdC1kb20nXG5cbmltcG9ydCBIZWFkZXIgZnJvbSAnLi9jb21wb25lbnRzL0hlYWRlcidcbmltcG9ydCBUb2RvTGlzdCBmcm9tICcuL2NvbXBvbmVudHMvVG9kb0xpc3QnXG5pbXBvcnQgRm9vdGVyIGZyb20gJy4vY29tcG9uZW50cy9Gb290ZXInXG5pbXBvcnQgQWRkRm9ybSBmcm9tICcuL2NvbXBvbmVudHMvQWRkRm9ybSdcblxuXG5cblxuY2xhc3MgVG9kb0FwcCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcbiAgICByZW5kZXIoKXtcbiAgICAgICAgcmV0dXJuKFxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cIndyYXBcIj5cbiAgICAgICAgICAgIDxIZWFkZXIgLz5cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgPFRvZG9MaXN0Lz5cbiAgICAgICAgICAgIDxGb290ZXIgLz5cbiAgICAgICAgICAgIHs8QWRkRm9ybSAvPn1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIClcbiAgICB9XG59XG5cbiAgICBcblxuZXhwb3J0IGRlZmF1bHQgVG9kb0FwcCIsImNvbnN0IGNvbnN0YW50cyA9IHtcbiAgICBBRERfVE9ETzogXCJBRERfVE9ET1wiLFxuICAgIFJFTU9WRV9UT0RPOiBcIlJFTU9WRV9UT0RPXCIsXG4gICAgT1BFTl9QT1BVUDpcIk9QRU5fUE9QVVBcIixcbiAgICBDTE9TRV9QT1BVUDpcIkNMT1NFX1BPUFVQXCJcbn1cblxuZXhwb3J0IGRlZmF1bHQgY29uc3RhbnRzIiwidmFyIGc7XHJcblxyXG4vLyBUaGlzIHdvcmtzIGluIG5vbi1zdHJpY3QgbW9kZVxyXG5nID0gKGZ1bmN0aW9uKCkge1xyXG5cdHJldHVybiB0aGlzO1xyXG59KSgpO1xyXG5cclxudHJ5IHtcclxuXHQvLyBUaGlzIHdvcmtzIGlmIGV2YWwgaXMgYWxsb3dlZCAoc2VlIENTUClcclxuXHRnID0gZyB8fCBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCkgfHwgKDEsIGV2YWwpKFwidGhpc1wiKTtcclxufSBjYXRjaCAoZSkge1xyXG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXHJcblx0aWYgKHR5cGVvZiB3aW5kb3cgPT09IFwib2JqZWN0XCIpIGcgPSB3aW5kb3c7XHJcbn1cclxuXHJcbi8vIGcgY2FuIHN0aWxsIGJlIHVuZGVmaW5lZCwgYnV0IG5vdGhpbmcgdG8gZG8gYWJvdXQgaXQuLi5cclxuLy8gV2UgcmV0dXJuIHVuZGVmaW5lZCwgaW5zdGVhZCBvZiBub3RoaW5nIGhlcmUsIHNvIGl0J3NcclxuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBnO1xyXG4iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBlbXB0eU9iamVjdCA9IHt9O1xuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICBPYmplY3QuZnJlZXplKGVtcHR5T2JqZWN0KTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBlbXB0eU9iamVjdDsiLCIvKlxub2JqZWN0LWFzc2lnblxuKGMpIFNpbmRyZSBTb3JodXNcbkBsaWNlbnNlIE1JVFxuKi9cblxuJ3VzZSBzdHJpY3QnO1xuLyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cbnZhciBnZXRPd25Qcm9wZXJ0eVN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzO1xudmFyIGhhc093blByb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcbnZhciBwcm9wSXNFbnVtZXJhYmxlID0gT2JqZWN0LnByb3RvdHlwZS5wcm9wZXJ0eUlzRW51bWVyYWJsZTtcblxuZnVuY3Rpb24gdG9PYmplY3QodmFsKSB7XG5cdGlmICh2YWwgPT09IG51bGwgfHwgdmFsID09PSB1bmRlZmluZWQpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdPYmplY3QuYXNzaWduIGNhbm5vdCBiZSBjYWxsZWQgd2l0aCBudWxsIG9yIHVuZGVmaW5lZCcpO1xuXHR9XG5cblx0cmV0dXJuIE9iamVjdCh2YWwpO1xufVxuXG5mdW5jdGlvbiBzaG91bGRVc2VOYXRpdmUoKSB7XG5cdHRyeSB7XG5cdFx0aWYgKCFPYmplY3QuYXNzaWduKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZWN0IGJ1Z2d5IHByb3BlcnR5IGVudW1lcmF0aW9uIG9yZGVyIGluIG9sZGVyIFY4IHZlcnNpb25zLlxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9NDExOFxuXHRcdHZhciB0ZXN0MSA9IG5ldyBTdHJpbmcoJ2FiYycpOyAgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1uZXctd3JhcHBlcnNcblx0XHR0ZXN0MVs1XSA9ICdkZSc7XG5cdFx0aWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRlc3QxKVswXSA9PT0gJzUnKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0Ly8gaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL3Y4L2lzc3Vlcy9kZXRhaWw/aWQ9MzA1NlxuXHRcdHZhciB0ZXN0MiA9IHt9O1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgMTA7IGkrKykge1xuXHRcdFx0dGVzdDJbJ18nICsgU3RyaW5nLmZyb21DaGFyQ29kZShpKV0gPSBpO1xuXHRcdH1cblx0XHR2YXIgb3JkZXIyID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGVzdDIpLm1hcChmdW5jdGlvbiAobikge1xuXHRcdFx0cmV0dXJuIHRlc3QyW25dO1xuXHRcdH0pO1xuXHRcdGlmIChvcmRlcjIuam9pbignJykgIT09ICcwMTIzNDU2Nzg5Jykge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdC8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC92OC9pc3N1ZXMvZGV0YWlsP2lkPTMwNTZcblx0XHR2YXIgdGVzdDMgPSB7fTtcblx0XHQnYWJjZGVmZ2hpamtsbW5vcHFyc3QnLnNwbGl0KCcnKS5mb3JFYWNoKGZ1bmN0aW9uIChsZXR0ZXIpIHtcblx0XHRcdHRlc3QzW2xldHRlcl0gPSBsZXR0ZXI7XG5cdFx0fSk7XG5cdFx0aWYgKE9iamVjdC5rZXlzKE9iamVjdC5hc3NpZ24oe30sIHRlc3QzKSkuam9pbignJykgIT09XG5cdFx0XHRcdCdhYmNkZWZnaGlqa2xtbm9wcXJzdCcpIHtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSBjYXRjaCAoZXJyKSB7XG5cdFx0Ly8gV2UgZG9uJ3QgZXhwZWN0IGFueSBvZiB0aGUgYWJvdmUgdG8gdGhyb3csIGJ1dCBiZXR0ZXIgdG8gYmUgc2FmZS5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaG91bGRVc2VOYXRpdmUoKSA/IE9iamVjdC5hc3NpZ24gOiBmdW5jdGlvbiAodGFyZ2V0LCBzb3VyY2UpIHtcblx0dmFyIGZyb207XG5cdHZhciB0byA9IHRvT2JqZWN0KHRhcmdldCk7XG5cdHZhciBzeW1ib2xzO1xuXG5cdGZvciAodmFyIHMgPSAxOyBzIDwgYXJndW1lbnRzLmxlbmd0aDsgcysrKSB7XG5cdFx0ZnJvbSA9IE9iamVjdChhcmd1bWVudHNbc10pO1xuXG5cdFx0Zm9yICh2YXIga2V5IGluIGZyb20pIHtcblx0XHRcdGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKGZyb20sIGtleSkpIHtcblx0XHRcdFx0dG9ba2V5XSA9IGZyb21ba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG5cdFx0XHRzeW1ib2xzID0gZ2V0T3duUHJvcGVydHlTeW1ib2xzKGZyb20pO1xuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzeW1ib2xzLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHRcdGlmIChwcm9wSXNFbnVtZXJhYmxlLmNhbGwoZnJvbSwgc3ltYm9sc1tpXSkpIHtcblx0XHRcdFx0XHR0b1tzeW1ib2xzW2ldXSA9IGZyb21bc3ltYm9sc1tpXV07XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdG87XG59O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgMjAxNSwgWWFob28hIEluYy5cbiAqIENvcHlyaWdodHMgbGljZW5zZWQgdW5kZXIgdGhlIE5ldyBCU0QgTGljZW5zZS4gU2VlIHRoZSBhY2NvbXBhbnlpbmcgTElDRU5TRSBmaWxlIGZvciB0ZXJtcy5cbiAqL1xuKGZ1bmN0aW9uIChnbG9iYWwsIGZhY3RvcnkpIHtcbiAgICB0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgPyBtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKSA6XG4gICAgdHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kID8gZGVmaW5lKGZhY3RvcnkpIDpcbiAgICAoZ2xvYmFsLmhvaXN0Tm9uUmVhY3RTdGF0aWNzID0gZmFjdG9yeSgpKTtcbn0odGhpcywgKGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG4gICAgXG4gICAgdmFyIFJFQUNUX1NUQVRJQ1MgPSB7XG4gICAgICAgIGNoaWxkQ29udGV4dFR5cGVzOiB0cnVlLFxuICAgICAgICBjb250ZXh0VHlwZXM6IHRydWUsXG4gICAgICAgIGRlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICAgICAgZGlzcGxheU5hbWU6IHRydWUsXG4gICAgICAgIGdldERlZmF1bHRQcm9wczogdHJ1ZSxcbiAgICAgICAgZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOiB0cnVlLFxuICAgICAgICBtaXhpbnM6IHRydWUsXG4gICAgICAgIHByb3BUeXBlczogdHJ1ZSxcbiAgICAgICAgdHlwZTogdHJ1ZVxuICAgIH07XG4gICAgXG4gICAgdmFyIEtOT1dOX1NUQVRJQ1MgPSB7XG4gICAgICAgIG5hbWU6IHRydWUsXG4gICAgICAgIGxlbmd0aDogdHJ1ZSxcbiAgICAgICAgcHJvdG90eXBlOiB0cnVlLFxuICAgICAgICBjYWxsZXI6IHRydWUsXG4gICAgICAgIGNhbGxlZTogdHJ1ZSxcbiAgICAgICAgYXJndW1lbnRzOiB0cnVlLFxuICAgICAgICBhcml0eTogdHJ1ZVxuICAgIH07XG4gICAgXG4gICAgdmFyIGRlZmluZVByb3BlcnR5ID0gT2JqZWN0LmRlZmluZVByb3BlcnR5O1xuICAgIHZhciBnZXRPd25Qcm9wZXJ0eU5hbWVzID0gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXM7XG4gICAgdmFyIGdldE93blByb3BlcnR5U3ltYm9scyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHM7XG4gICAgdmFyIGdldE93blByb3BlcnR5RGVzY3JpcHRvciA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3I7XG4gICAgdmFyIGdldFByb3RvdHlwZU9mID0gT2JqZWN0LmdldFByb3RvdHlwZU9mO1xuICAgIHZhciBvYmplY3RQcm90b3R5cGUgPSBnZXRQcm90b3R5cGVPZiAmJiBnZXRQcm90b3R5cGVPZihPYmplY3QpO1xuICAgIFxuICAgIHJldHVybiBmdW5jdGlvbiBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIHNvdXJjZUNvbXBvbmVudCwgYmxhY2tsaXN0KSB7XG4gICAgICAgIGlmICh0eXBlb2Ygc291cmNlQ29tcG9uZW50ICE9PSAnc3RyaW5nJykgeyAvLyBkb24ndCBob2lzdCBvdmVyIHN0cmluZyAoaHRtbCkgY29tcG9uZW50c1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAob2JqZWN0UHJvdG90eXBlKSB7XG4gICAgICAgICAgICAgICAgdmFyIGluaGVyaXRlZENvbXBvbmVudCA9IGdldFByb3RvdHlwZU9mKHNvdXJjZUNvbXBvbmVudCk7XG4gICAgICAgICAgICAgICAgaWYgKGluaGVyaXRlZENvbXBvbmVudCAmJiBpbmhlcml0ZWRDb21wb25lbnQgIT09IG9iamVjdFByb3RvdHlwZSkge1xuICAgICAgICAgICAgICAgICAgICBob2lzdE5vblJlYWN0U3RhdGljcyh0YXJnZXRDb21wb25lbnQsIGluaGVyaXRlZENvbXBvbmVudCwgYmxhY2tsaXN0KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHZhciBrZXlzID0gZ2V0T3duUHJvcGVydHlOYW1lcyhzb3VyY2VDb21wb25lbnQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgICAgICAgICAgICAga2V5cyA9IGtleXMuY29uY2F0KGdldE93blByb3BlcnR5U3ltYm9scyhzb3VyY2VDb21wb25lbnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICAgICAgICAgICAgaWYgKCFSRUFDVF9TVEFUSUNTW2tleV0gJiYgIUtOT1dOX1NUQVRJQ1Nba2V5XSAmJiAoIWJsYWNrbGlzdCB8fCAhYmxhY2tsaXN0W2tleV0pKSB7XG4gICAgICAgICAgICAgICAgICAgIHZhciBkZXNjcmlwdG9yID0gZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZUNvbXBvbmVudCwga2V5KTtcbiAgICAgICAgICAgICAgICAgICAgdHJ5IHsgLy8gQXZvaWQgZmFpbHVyZXMgZnJvbSByZWFkLW9ubHkgcHJvcGVydGllc1xuICAgICAgICAgICAgICAgICAgICAgICAgZGVmaW5lUHJvcGVydHkodGFyZ2V0Q29tcG9uZW50LCBrZXksIGRlc2NyaXB0b3IpO1xuICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7fVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHRhcmdldENvbXBvbmVudDtcbiAgICB9O1xufSkpKTtcbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHN5bWJvbE9ic2VydmFibGVQb255ZmlsbChyb290KSB7XG5cdHZhciByZXN1bHQ7XG5cdHZhciBTeW1ib2wgPSByb290LlN5bWJvbDtcblxuXHRpZiAodHlwZW9mIFN5bWJvbCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdGlmIChTeW1ib2wub2JzZXJ2YWJsZSkge1xuXHRcdFx0cmVzdWx0ID0gU3ltYm9sLm9ic2VydmFibGU7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHJlc3VsdCA9IFN5bWJvbCgnb2JzZXJ2YWJsZScpO1xuXHRcdFx0U3ltYm9sLm9ic2VydmFibGUgPSByZXN1bHQ7XG5cdFx0fVxuXHR9IGVsc2Uge1xuXHRcdHJlc3VsdCA9ICdAQG9ic2VydmFibGUnO1xuXHR9XG5cblx0cmV0dXJuIHJlc3VsdDtcbn07XG4iLCJpbXBvcnQgJCRvYnNlcnZhYmxlIGZyb20gJ3N5bWJvbC1vYnNlcnZhYmxlJztcblxuLyoqXG4gKiBUaGVzZSBhcmUgcHJpdmF0ZSBhY3Rpb24gdHlwZXMgcmVzZXJ2ZWQgYnkgUmVkdXguXG4gKiBGb3IgYW55IHVua25vd24gYWN0aW9ucywgeW91IG11c3QgcmV0dXJuIHRoZSBjdXJyZW50IHN0YXRlLlxuICogSWYgdGhlIGN1cnJlbnQgc3RhdGUgaXMgdW5kZWZpbmVkLCB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUuXG4gKiBEbyBub3QgcmVmZXJlbmNlIHRoZXNlIGFjdGlvbiB0eXBlcyBkaXJlY3RseSBpbiB5b3VyIGNvZGUuXG4gKi9cbnZhciBBY3Rpb25UeXBlcyA9IHtcbiAgSU5JVDogJ0BAcmVkdXgvSU5JVCcgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNykuc3BsaXQoJycpLmpvaW4oJy4nKSxcbiAgUkVQTEFDRTogJ0BAcmVkdXgvUkVQTEFDRScgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNykuc3BsaXQoJycpLmpvaW4oJy4nKVxufTtcblxudmFyIF90eXBlb2YgPSB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgdHlwZW9mIFN5bWJvbC5pdGVyYXRvciA9PT0gXCJzeW1ib2xcIiA/IGZ1bmN0aW9uIChvYmopIHtcbiAgcmV0dXJuIHR5cGVvZiBvYmo7XG59IDogZnVuY3Rpb24gKG9iaikge1xuICByZXR1cm4gb2JqICYmIHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiBvYmouY29uc3RydWN0b3IgPT09IFN5bWJvbCAmJiBvYmogIT09IFN5bWJvbC5wcm90b3R5cGUgPyBcInN5bWJvbFwiIDogdHlwZW9mIG9iajtcbn07XG5cbnZhciBfZXh0ZW5kcyA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24gKHRhcmdldCkge1xuICBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xuICAgIHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07XG5cbiAgICBmb3IgKHZhciBrZXkgaW4gc291cmNlKSB7XG4gICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHNvdXJjZSwga2V5KSkge1xuICAgICAgICB0YXJnZXRba2V5XSA9IHNvdXJjZVtrZXldO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiB0YXJnZXQ7XG59O1xuXG4vKipcbiAqIEBwYXJhbSB7YW55fSBvYmogVGhlIG9iamVjdCB0byBpbnNwZWN0LlxuICogQHJldHVybnMge2Jvb2xlYW59IFRydWUgaWYgdGhlIGFyZ3VtZW50IGFwcGVhcnMgdG8gYmUgYSBwbGFpbiBvYmplY3QuXG4gKi9cbmZ1bmN0aW9uIGlzUGxhaW5PYmplY3Qob2JqKSB7XG4gIGlmICgodHlwZW9mIG9iaiA9PT0gJ3VuZGVmaW5lZCcgPyAndW5kZWZpbmVkJyA6IF90eXBlb2Yob2JqKSkgIT09ICdvYmplY3QnIHx8IG9iaiA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXG4gIHZhciBwcm90byA9IG9iajtcbiAgd2hpbGUgKE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90bykgIT09IG51bGwpIHtcbiAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihwcm90byk7XG4gIH1cblxuICByZXR1cm4gT2JqZWN0LmdldFByb3RvdHlwZU9mKG9iaikgPT09IHByb3RvO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBSZWR1eCBzdG9yZSB0aGF0IGhvbGRzIHRoZSBzdGF0ZSB0cmVlLlxuICogVGhlIG9ubHkgd2F5IHRvIGNoYW5nZSB0aGUgZGF0YSBpbiB0aGUgc3RvcmUgaXMgdG8gY2FsbCBgZGlzcGF0Y2goKWAgb24gaXQuXG4gKlxuICogVGhlcmUgc2hvdWxkIG9ubHkgYmUgYSBzaW5nbGUgc3RvcmUgaW4geW91ciBhcHAuIFRvIHNwZWNpZnkgaG93IGRpZmZlcmVudFxuICogcGFydHMgb2YgdGhlIHN0YXRlIHRyZWUgcmVzcG9uZCB0byBhY3Rpb25zLCB5b3UgbWF5IGNvbWJpbmUgc2V2ZXJhbCByZWR1Y2Vyc1xuICogaW50byBhIHNpbmdsZSByZWR1Y2VyIGZ1bmN0aW9uIGJ5IHVzaW5nIGBjb21iaW5lUmVkdWNlcnNgLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IHJlZHVjZXIgQSBmdW5jdGlvbiB0aGF0IHJldHVybnMgdGhlIG5leHQgc3RhdGUgdHJlZSwgZ2l2ZW5cbiAqIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBhY3Rpb24gdG8gaGFuZGxlLlxuICpcbiAqIEBwYXJhbSB7YW55fSBbcHJlbG9hZGVkU3RhdGVdIFRoZSBpbml0aWFsIHN0YXRlLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gaHlkcmF0ZSB0aGUgc3RhdGUgZnJvbSB0aGUgc2VydmVyIGluIHVuaXZlcnNhbCBhcHBzLCBvciB0byByZXN0b3JlIGFcbiAqIHByZXZpb3VzbHkgc2VyaWFsaXplZCB1c2VyIHNlc3Npb24uXG4gKiBJZiB5b3UgdXNlIGBjb21iaW5lUmVkdWNlcnNgIHRvIHByb2R1Y2UgdGhlIHJvb3QgcmVkdWNlciBmdW5jdGlvbiwgdGhpcyBtdXN0IGJlXG4gKiBhbiBvYmplY3Qgd2l0aCB0aGUgc2FtZSBzaGFwZSBhcyBgY29tYmluZVJlZHVjZXJzYCBrZXlzLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IFtlbmhhbmNlcl0gVGhlIHN0b3JlIGVuaGFuY2VyLiBZb3UgbWF5IG9wdGlvbmFsbHkgc3BlY2lmeSBpdFxuICogdG8gZW5oYW5jZSB0aGUgc3RvcmUgd2l0aCB0aGlyZC1wYXJ0eSBjYXBhYmlsaXRpZXMgc3VjaCBhcyBtaWRkbGV3YXJlLFxuICogdGltZSB0cmF2ZWwsIHBlcnNpc3RlbmNlLCBldGMuIFRoZSBvbmx5IHN0b3JlIGVuaGFuY2VyIHRoYXQgc2hpcHMgd2l0aCBSZWR1eFxuICogaXMgYGFwcGx5TWlkZGxld2FyZSgpYC5cbiAqXG4gKiBAcmV0dXJucyB7U3RvcmV9IEEgUmVkdXggc3RvcmUgdGhhdCBsZXRzIHlvdSByZWFkIHRoZSBzdGF0ZSwgZGlzcGF0Y2ggYWN0aW9uc1xuICogYW5kIHN1YnNjcmliZSB0byBjaGFuZ2VzLlxuICovXG5mdW5jdGlvbiBjcmVhdGVTdG9yZShyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSwgZW5oYW5jZXIpIHtcbiAgdmFyIF9yZWYyO1xuXG4gIGlmICh0eXBlb2YgcHJlbG9hZGVkU3RhdGUgPT09ICdmdW5jdGlvbicgJiYgdHlwZW9mIGVuaGFuY2VyID09PSAndW5kZWZpbmVkJykge1xuICAgIGVuaGFuY2VyID0gcHJlbG9hZGVkU3RhdGU7XG4gICAgcHJlbG9hZGVkU3RhdGUgPSB1bmRlZmluZWQ7XG4gIH1cblxuICBpZiAodHlwZW9mIGVuaGFuY2VyICE9PSAndW5kZWZpbmVkJykge1xuICAgIGlmICh0eXBlb2YgZW5oYW5jZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIGVuaGFuY2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGVuaGFuY2VyKGNyZWF0ZVN0b3JlKShyZWR1Y2VyLCBwcmVsb2FkZWRTdGF0ZSk7XG4gIH1cblxuICBpZiAodHlwZW9mIHJlZHVjZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHRoZSByZWR1Y2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gIH1cblxuICB2YXIgY3VycmVudFJlZHVjZXIgPSByZWR1Y2VyO1xuICB2YXIgY3VycmVudFN0YXRlID0gcHJlbG9hZGVkU3RhdGU7XG4gIHZhciBjdXJyZW50TGlzdGVuZXJzID0gW107XG4gIHZhciBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycztcbiAgdmFyIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBSZWFkcyB0aGUgc3RhdGUgdHJlZSBtYW5hZ2VkIGJ5IHRoZSBzdG9yZS5cbiAgICpcbiAgICogQHJldHVybnMge2FueX0gVGhlIGN1cnJlbnQgc3RhdGUgdHJlZSBvZiB5b3VyIGFwcGxpY2F0aW9uLlxuICAgKi9cbiAgZnVuY3Rpb24gZ2V0U3RhdGUoKSB7XG4gICAgaWYgKGlzRGlzcGF0Y2hpbmcpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignWW91IG1heSBub3QgY2FsbCBzdG9yZS5nZXRTdGF0ZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdUaGUgcmVkdWNlciBoYXMgYWxyZWFkeSByZWNlaXZlZCB0aGUgc3RhdGUgYXMgYW4gYXJndW1lbnQuICcgKyAnUGFzcyBpdCBkb3duIGZyb20gdGhlIHRvcCByZWR1Y2VyIGluc3RlYWQgb2YgcmVhZGluZyBpdCBmcm9tIHRoZSBzdG9yZS4nKTtcbiAgICB9XG5cbiAgICByZXR1cm4gY3VycmVudFN0YXRlO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZHMgYSBjaGFuZ2UgbGlzdGVuZXIuIEl0IHdpbGwgYmUgY2FsbGVkIGFueSB0aW1lIGFuIGFjdGlvbiBpcyBkaXNwYXRjaGVkLFxuICAgKiBhbmQgc29tZSBwYXJ0IG9mIHRoZSBzdGF0ZSB0cmVlIG1heSBwb3RlbnRpYWxseSBoYXZlIGNoYW5nZWQuIFlvdSBtYXkgdGhlblxuICAgKiBjYWxsIGBnZXRTdGF0ZSgpYCB0byByZWFkIHRoZSBjdXJyZW50IHN0YXRlIHRyZWUgaW5zaWRlIHRoZSBjYWxsYmFjay5cbiAgICpcbiAgICogWW91IG1heSBjYWxsIGBkaXNwYXRjaCgpYCBmcm9tIGEgY2hhbmdlIGxpc3RlbmVyLCB3aXRoIHRoZSBmb2xsb3dpbmdcbiAgICogY2F2ZWF0czpcbiAgICpcbiAgICogMS4gVGhlIHN1YnNjcmlwdGlvbnMgYXJlIHNuYXBzaG90dGVkIGp1c3QgYmVmb3JlIGV2ZXJ5IGBkaXNwYXRjaCgpYCBjYWxsLlxuICAgKiBJZiB5b3Ugc3Vic2NyaWJlIG9yIHVuc3Vic2NyaWJlIHdoaWxlIHRoZSBsaXN0ZW5lcnMgYXJlIGJlaW5nIGludm9rZWQsIHRoaXNcbiAgICogd2lsbCBub3QgaGF2ZSBhbnkgZWZmZWN0IG9uIHRoZSBgZGlzcGF0Y2goKWAgdGhhdCBpcyBjdXJyZW50bHkgaW4gcHJvZ3Jlc3MuXG4gICAqIEhvd2V2ZXIsIHRoZSBuZXh0IGBkaXNwYXRjaCgpYCBjYWxsLCB3aGV0aGVyIG5lc3RlZCBvciBub3QsIHdpbGwgdXNlIGEgbW9yZVxuICAgKiByZWNlbnQgc25hcHNob3Qgb2YgdGhlIHN1YnNjcmlwdGlvbiBsaXN0LlxuICAgKlxuICAgKiAyLiBUaGUgbGlzdGVuZXIgc2hvdWxkIG5vdCBleHBlY3QgdG8gc2VlIGFsbCBzdGF0ZSBjaGFuZ2VzLCBhcyB0aGUgc3RhdGVcbiAgICogbWlnaHQgaGF2ZSBiZWVuIHVwZGF0ZWQgbXVsdGlwbGUgdGltZXMgZHVyaW5nIGEgbmVzdGVkIGBkaXNwYXRjaCgpYCBiZWZvcmVcbiAgICogdGhlIGxpc3RlbmVyIGlzIGNhbGxlZC4gSXQgaXMsIGhvd2V2ZXIsIGd1YXJhbnRlZWQgdGhhdCBhbGwgc3Vic2NyaWJlcnNcbiAgICogcmVnaXN0ZXJlZCBiZWZvcmUgdGhlIGBkaXNwYXRjaCgpYCBzdGFydGVkIHdpbGwgYmUgY2FsbGVkIHdpdGggdGhlIGxhdGVzdFxuICAgKiBzdGF0ZSBieSB0aGUgdGltZSBpdCBleGl0cy5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbGlzdGVuZXIgQSBjYWxsYmFjayB0byBiZSBpbnZva2VkIG9uIGV2ZXJ5IGRpc3BhdGNoLlxuICAgKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gdG8gcmVtb3ZlIHRoaXMgY2hhbmdlIGxpc3RlbmVyLlxuICAgKi9cbiAgZnVuY3Rpb24gc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgaWYgKHR5cGVvZiBsaXN0ZW5lciAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCB0aGUgbGlzdGVuZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdZb3UgbWF5IG5vdCBjYWxsIHN0b3JlLnN1YnNjcmliZSgpIHdoaWxlIHRoZSByZWR1Y2VyIGlzIGV4ZWN1dGluZy4gJyArICdJZiB5b3Ugd291bGQgbGlrZSB0byBiZSBub3RpZmllZCBhZnRlciB0aGUgc3RvcmUgaGFzIGJlZW4gdXBkYXRlZCwgc3Vic2NyaWJlIGZyb20gYSAnICsgJ2NvbXBvbmVudCBhbmQgaW52b2tlIHN0b3JlLmdldFN0YXRlKCkgaW4gdGhlIGNhbGxiYWNrIHRvIGFjY2VzcyB0aGUgbGF0ZXN0IHN0YXRlLiAnICsgJ1NlZSBodHRwczovL3JlZHV4LmpzLm9yZy9hcGktcmVmZXJlbmNlL3N0b3JlI3N1YnNjcmliZShsaXN0ZW5lcikgZm9yIG1vcmUgZGV0YWlscy4nKTtcbiAgICB9XG5cbiAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcblxuICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICBuZXh0TGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVuc3Vic2NyaWJlKCkge1xuICAgICAgaWYgKCFpc1N1YnNjcmliZWQpIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXNEaXNwYXRjaGluZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1lvdSBtYXkgbm90IHVuc3Vic2NyaWJlIGZyb20gYSBzdG9yZSBsaXN0ZW5lciB3aGlsZSB0aGUgcmVkdWNlciBpcyBleGVjdXRpbmcuICcgKyAnU2VlIGh0dHBzOi8vcmVkdXguanMub3JnL2FwaS1yZWZlcmVuY2Uvc3RvcmUjc3Vic2NyaWJlKGxpc3RlbmVyKSBmb3IgbW9yZSBkZXRhaWxzLicpO1xuICAgICAgfVxuXG4gICAgICBpc1N1YnNjcmliZWQgPSBmYWxzZTtcblxuICAgICAgZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycygpO1xuICAgICAgdmFyIGluZGV4ID0gbmV4dExpc3RlbmVycy5pbmRleE9mKGxpc3RlbmVyKTtcbiAgICAgIG5leHRMaXN0ZW5lcnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICB9O1xuICB9XG5cbiAgLyoqXG4gICAqIERpc3BhdGNoZXMgYW4gYWN0aW9uLiBJdCBpcyB0aGUgb25seSB3YXkgdG8gdHJpZ2dlciBhIHN0YXRlIGNoYW5nZS5cbiAgICpcbiAgICogVGhlIGByZWR1Y2VyYCBmdW5jdGlvbiwgdXNlZCB0byBjcmVhdGUgdGhlIHN0b3JlLCB3aWxsIGJlIGNhbGxlZCB3aXRoIHRoZVxuICAgKiBjdXJyZW50IHN0YXRlIHRyZWUgYW5kIHRoZSBnaXZlbiBgYWN0aW9uYC4gSXRzIHJldHVybiB2YWx1ZSB3aWxsXG4gICAqIGJlIGNvbnNpZGVyZWQgdGhlICoqbmV4dCoqIHN0YXRlIG9mIHRoZSB0cmVlLCBhbmQgdGhlIGNoYW5nZSBsaXN0ZW5lcnNcbiAgICogd2lsbCBiZSBub3RpZmllZC5cbiAgICpcbiAgICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb25seSBzdXBwb3J0cyBwbGFpbiBvYmplY3QgYWN0aW9ucy4gSWYgeW91IHdhbnQgdG9cbiAgICogZGlzcGF0Y2ggYSBQcm9taXNlLCBhbiBPYnNlcnZhYmxlLCBhIHRodW5rLCBvciBzb21ldGhpbmcgZWxzZSwgeW91IG5lZWQgdG9cbiAgICogd3JhcCB5b3VyIHN0b3JlIGNyZWF0aW5nIGZ1bmN0aW9uIGludG8gdGhlIGNvcnJlc3BvbmRpbmcgbWlkZGxld2FyZS4gRm9yXG4gICAqIGV4YW1wbGUsIHNlZSB0aGUgZG9jdW1lbnRhdGlvbiBmb3IgdGhlIGByZWR1eC10aHVua2AgcGFja2FnZS4gRXZlbiB0aGVcbiAgICogbWlkZGxld2FyZSB3aWxsIGV2ZW50dWFsbHkgZGlzcGF0Y2ggcGxhaW4gb2JqZWN0IGFjdGlvbnMgdXNpbmcgdGhpcyBtZXRob2QuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBhY3Rpb24gQSBwbGFpbiBvYmplY3QgcmVwcmVzZW50aW5nIOKAnHdoYXQgY2hhbmdlZOKAnS4gSXQgaXNcbiAgICogYSBnb29kIGlkZWEgdG8ga2VlcCBhY3Rpb25zIHNlcmlhbGl6YWJsZSBzbyB5b3UgY2FuIHJlY29yZCBhbmQgcmVwbGF5IHVzZXJcbiAgICogc2Vzc2lvbnMsIG9yIHVzZSB0aGUgdGltZSB0cmF2ZWxsaW5nIGByZWR1eC1kZXZ0b29sc2AuIEFuIGFjdGlvbiBtdXN0IGhhdmVcbiAgICogYSBgdHlwZWAgcHJvcGVydHkgd2hpY2ggbWF5IG5vdCBiZSBgdW5kZWZpbmVkYC4gSXQgaXMgYSBnb29kIGlkZWEgdG8gdXNlXG4gICAqIHN0cmluZyBjb25zdGFudHMgZm9yIGFjdGlvbiB0eXBlcy5cbiAgICpcbiAgICogQHJldHVybnMge09iamVjdH0gRm9yIGNvbnZlbmllbmNlLCB0aGUgc2FtZSBhY3Rpb24gb2JqZWN0IHlvdSBkaXNwYXRjaGVkLlxuICAgKlxuICAgKiBOb3RlIHRoYXQsIGlmIHlvdSB1c2UgYSBjdXN0b20gbWlkZGxld2FyZSwgaXQgbWF5IHdyYXAgYGRpc3BhdGNoKClgIHRvXG4gICAqIHJldHVybiBzb21ldGhpbmcgZWxzZSAoZm9yIGV4YW1wbGUsIGEgUHJvbWlzZSB5b3UgY2FuIGF3YWl0KS5cbiAgICovXG4gIGZ1bmN0aW9uIGRpc3BhdGNoKGFjdGlvbikge1xuICAgIGlmICghaXNQbGFpbk9iamVjdChhY3Rpb24pKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0FjdGlvbnMgbXVzdCBiZSBwbGFpbiBvYmplY3RzLiAnICsgJ1VzZSBjdXN0b20gbWlkZGxld2FyZSBmb3IgYXN5bmMgYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIGFjdGlvbi50eXBlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdBY3Rpb25zIG1heSBub3QgaGF2ZSBhbiB1bmRlZmluZWQgXCJ0eXBlXCIgcHJvcGVydHkuICcgKyAnSGF2ZSB5b3UgbWlzc3BlbGxlZCBhIGNvbnN0YW50PycpO1xuICAgIH1cblxuICAgIGlmIChpc0Rpc3BhdGNoaW5nKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlZHVjZXJzIG1heSBub3QgZGlzcGF0Y2ggYWN0aW9ucy4nKTtcbiAgICB9XG5cbiAgICB0cnkge1xuICAgICAgaXNEaXNwYXRjaGluZyA9IHRydWU7XG4gICAgICBjdXJyZW50U3RhdGUgPSBjdXJyZW50UmVkdWNlcihjdXJyZW50U3RhdGUsIGFjdGlvbik7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlzRGlzcGF0Y2hpbmcgPSBmYWxzZTtcbiAgICB9XG5cbiAgICB2YXIgbGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycyA9IG5leHRMaXN0ZW5lcnM7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBsaXN0ZW5lciA9IGxpc3RlbmVyc1tpXTtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIGFjdGlvbjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXBsYWNlcyB0aGUgcmVkdWNlciBjdXJyZW50bHkgdXNlZCBieSB0aGUgc3RvcmUgdG8gY2FsY3VsYXRlIHRoZSBzdGF0ZS5cbiAgICpcbiAgICogWW91IG1pZ2h0IG5lZWQgdGhpcyBpZiB5b3VyIGFwcCBpbXBsZW1lbnRzIGNvZGUgc3BsaXR0aW5nIGFuZCB5b3Ugd2FudCB0b1xuICAgKiBsb2FkIHNvbWUgb2YgdGhlIHJlZHVjZXJzIGR5bmFtaWNhbGx5LiBZb3UgbWlnaHQgYWxzbyBuZWVkIHRoaXMgaWYgeW91XG4gICAqIGltcGxlbWVudCBhIGhvdCByZWxvYWRpbmcgbWVjaGFuaXNtIGZvciBSZWR1eC5cbiAgICpcbiAgICogQHBhcmFtIHtGdW5jdGlvbn0gbmV4dFJlZHVjZXIgVGhlIHJlZHVjZXIgZm9yIHRoZSBzdG9yZSB0byB1c2UgaW5zdGVhZC5cbiAgICogQHJldHVybnMge3ZvaWR9XG4gICAqL1xuICBmdW5jdGlvbiByZXBsYWNlUmVkdWNlcihuZXh0UmVkdWNlcikge1xuICAgIGlmICh0eXBlb2YgbmV4dFJlZHVjZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdGhlIG5leHRSZWR1Y2VyIHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuXG4gICAgY3VycmVudFJlZHVjZXIgPSBuZXh0UmVkdWNlcjtcbiAgICBkaXNwYXRjaCh7IHR5cGU6IEFjdGlvblR5cGVzLlJFUExBQ0UgfSk7XG4gIH1cblxuICAvKipcbiAgICogSW50ZXJvcGVyYWJpbGl0eSBwb2ludCBmb3Igb2JzZXJ2YWJsZS9yZWFjdGl2ZSBsaWJyYXJpZXMuXG4gICAqIEByZXR1cm5zIHtvYnNlcnZhYmxlfSBBIG1pbmltYWwgb2JzZXJ2YWJsZSBvZiBzdGF0ZSBjaGFuZ2VzLlxuICAgKiBGb3IgbW9yZSBpbmZvcm1hdGlvbiwgc2VlIHRoZSBvYnNlcnZhYmxlIHByb3Bvc2FsOlxuICAgKiBodHRwczovL2dpdGh1Yi5jb20vdGMzOS9wcm9wb3NhbC1vYnNlcnZhYmxlXG4gICAqL1xuICBmdW5jdGlvbiBvYnNlcnZhYmxlKCkge1xuICAgIHZhciBfcmVmO1xuXG4gICAgdmFyIG91dGVyU3Vic2NyaWJlID0gc3Vic2NyaWJlO1xuICAgIHJldHVybiBfcmVmID0ge1xuICAgICAgLyoqXG4gICAgICAgKiBUaGUgbWluaW1hbCBvYnNlcnZhYmxlIHN1YnNjcmlwdGlvbiBtZXRob2QuXG4gICAgICAgKiBAcGFyYW0ge09iamVjdH0gb2JzZXJ2ZXIgQW55IG9iamVjdCB0aGF0IGNhbiBiZSB1c2VkIGFzIGFuIG9ic2VydmVyLlxuICAgICAgICogVGhlIG9ic2VydmVyIG9iamVjdCBzaG91bGQgaGF2ZSBhIGBuZXh0YCBtZXRob2QuXG4gICAgICAgKiBAcmV0dXJucyB7c3Vic2NyaXB0aW9ufSBBbiBvYmplY3Qgd2l0aCBhbiBgdW5zdWJzY3JpYmVgIG1ldGhvZCB0aGF0IGNhblxuICAgICAgICogYmUgdXNlZCB0byB1bnN1YnNjcmliZSB0aGUgb2JzZXJ2YWJsZSBmcm9tIHRoZSBzdG9yZSwgYW5kIHByZXZlbnQgZnVydGhlclxuICAgICAgICogZW1pc3Npb24gb2YgdmFsdWVzIGZyb20gdGhlIG9ic2VydmFibGUuXG4gICAgICAgKi9cbiAgICAgIHN1YnNjcmliZTogZnVuY3Rpb24gc3Vic2NyaWJlKG9ic2VydmVyKSB7XG4gICAgICAgIGlmICgodHlwZW9mIG9ic2VydmVyID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihvYnNlcnZlcikpICE9PSAnb2JqZWN0JyB8fCBvYnNlcnZlciA9PT0gbnVsbCkge1xuICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0V4cGVjdGVkIHRoZSBvYnNlcnZlciB0byBiZSBhbiBvYmplY3QuJyk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBvYnNlcnZlU3RhdGUoKSB7XG4gICAgICAgICAgaWYgKG9ic2VydmVyLm5leHQpIHtcbiAgICAgICAgICAgIG9ic2VydmVyLm5leHQoZ2V0U3RhdGUoKSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgb2JzZXJ2ZVN0YXRlKCk7XG4gICAgICAgIHZhciB1bnN1YnNjcmliZSA9IG91dGVyU3Vic2NyaWJlKG9ic2VydmVTdGF0ZSk7XG4gICAgICAgIHJldHVybiB7IHVuc3Vic2NyaWJlOiB1bnN1YnNjcmliZSB9O1xuICAgICAgfVxuICAgIH0sIF9yZWZbJCRvYnNlcnZhYmxlXSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiB0aGlzO1xuICAgIH0sIF9yZWY7XG4gIH1cblxuICAvLyBXaGVuIGEgc3RvcmUgaXMgY3JlYXRlZCwgYW4gXCJJTklUXCIgYWN0aW9uIGlzIGRpc3BhdGNoZWQgc28gdGhhdCBldmVyeVxuICAvLyByZWR1Y2VyIHJldHVybnMgdGhlaXIgaW5pdGlhbCBzdGF0ZS4gVGhpcyBlZmZlY3RpdmVseSBwb3B1bGF0ZXNcbiAgLy8gdGhlIGluaXRpYWwgc3RhdGUgdHJlZS5cbiAgZGlzcGF0Y2goeyB0eXBlOiBBY3Rpb25UeXBlcy5JTklUIH0pO1xuXG4gIHJldHVybiBfcmVmMiA9IHtcbiAgICBkaXNwYXRjaDogZGlzcGF0Y2gsXG4gICAgc3Vic2NyaWJlOiBzdWJzY3JpYmUsXG4gICAgZ2V0U3RhdGU6IGdldFN0YXRlLFxuICAgIHJlcGxhY2VSZWR1Y2VyOiByZXBsYWNlUmVkdWNlclxuICB9LCBfcmVmMlskJG9ic2VydmFibGVdID0gb2JzZXJ2YWJsZSwgX3JlZjI7XG59XG5cbi8qKlxuICogUHJpbnRzIGEgd2FybmluZyBpbiB0aGUgY29uc29sZSBpZiBpdCBleGlzdHMuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IG1lc3NhZ2UgVGhlIHdhcm5pbmcgbWVzc2FnZS5cbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiB3YXJuaW5nKG1lc3NhZ2UpIHtcbiAgLyogZXNsaW50LWRpc2FibGUgbm8tY29uc29sZSAqL1xuICBpZiAodHlwZW9mIGNvbnNvbGUgIT09ICd1bmRlZmluZWQnICYmIHR5cGVvZiBjb25zb2xlLmVycm9yID09PSAnZnVuY3Rpb24nKSB7XG4gICAgY29uc29sZS5lcnJvcihtZXNzYWdlKTtcbiAgfVxuICAvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbnNvbGUgKi9cbiAgdHJ5IHtcbiAgICAvLyBUaGlzIGVycm9yIHdhcyB0aHJvd24gYXMgYSBjb252ZW5pZW5jZSBzbyB0aGF0IGlmIHlvdSBlbmFibGVcbiAgICAvLyBcImJyZWFrIG9uIGFsbCBleGNlcHRpb25zXCIgaW4geW91ciBjb25zb2xlLFxuICAgIC8vIGl0IHdvdWxkIHBhdXNlIHRoZSBleGVjdXRpb24gYXQgdGhpcyBsaW5lLlxuICAgIHRocm93IG5ldyBFcnJvcihtZXNzYWdlKTtcbiAgfSBjYXRjaCAoZSkge30gLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1lbXB0eVxufVxuXG5mdW5jdGlvbiBnZXRVbmRlZmluZWRTdGF0ZUVycm9yTWVzc2FnZShrZXksIGFjdGlvbikge1xuICB2YXIgYWN0aW9uVHlwZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZTtcbiAgdmFyIGFjdGlvbkRlc2NyaXB0aW9uID0gYWN0aW9uVHlwZSAmJiAnYWN0aW9uIFwiJyArIFN0cmluZyhhY3Rpb25UeXBlKSArICdcIicgfHwgJ2FuIGFjdGlvbic7XG5cbiAgcmV0dXJuICdHaXZlbiAnICsgYWN0aW9uRGVzY3JpcHRpb24gKyAnLCByZWR1Y2VyIFwiJyArIGtleSArICdcIiByZXR1cm5lZCB1bmRlZmluZWQuICcgKyAnVG8gaWdub3JlIGFuIGFjdGlvbiwgeW91IG11c3QgZXhwbGljaXRseSByZXR1cm4gdGhlIHByZXZpb3VzIHN0YXRlLiAnICsgJ0lmIHlvdSB3YW50IHRoaXMgcmVkdWNlciB0byBob2xkIG5vIHZhbHVlLCB5b3UgY2FuIHJldHVybiBudWxsIGluc3RlYWQgb2YgdW5kZWZpbmVkLic7XG59XG5cbmZ1bmN0aW9uIGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2UoaW5wdXRTdGF0ZSwgcmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKSB7XG4gIHZhciByZWR1Y2VyS2V5cyA9IE9iamVjdC5rZXlzKHJlZHVjZXJzKTtcbiAgdmFyIGFyZ3VtZW50TmFtZSA9IGFjdGlvbiAmJiBhY3Rpb24udHlwZSA9PT0gQWN0aW9uVHlwZXMuSU5JVCA/ICdwcmVsb2FkZWRTdGF0ZSBhcmd1bWVudCBwYXNzZWQgdG8gY3JlYXRlU3RvcmUnIDogJ3ByZXZpb3VzIHN0YXRlIHJlY2VpdmVkIGJ5IHRoZSByZWR1Y2VyJztcblxuICBpZiAocmVkdWNlcktleXMubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuICdTdG9yZSBkb2VzIG5vdCBoYXZlIGEgdmFsaWQgcmVkdWNlci4gTWFrZSBzdXJlIHRoZSBhcmd1bWVudCBwYXNzZWQgJyArICd0byBjb21iaW5lUmVkdWNlcnMgaXMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgcmVkdWNlcnMuJztcbiAgfVxuXG4gIGlmICghaXNQbGFpbk9iamVjdChpbnB1dFN0YXRlKSkge1xuICAgIHJldHVybiAnVGhlICcgKyBhcmd1bWVudE5hbWUgKyAnIGhhcyB1bmV4cGVjdGVkIHR5cGUgb2YgXCInICsge30udG9TdHJpbmcuY2FsbChpbnB1dFN0YXRlKS5tYXRjaCgvXFxzKFthLXp8QS1aXSspLylbMV0gKyAnXCIuIEV4cGVjdGVkIGFyZ3VtZW50IHRvIGJlIGFuIG9iamVjdCB3aXRoIHRoZSBmb2xsb3dpbmcgJyArICgna2V5czogXCInICsgcmVkdWNlcktleXMuam9pbignXCIsIFwiJykgKyAnXCInKTtcbiAgfVxuXG4gIHZhciB1bmV4cGVjdGVkS2V5cyA9IE9iamVjdC5rZXlzKGlucHV0U3RhdGUpLmZpbHRlcihmdW5jdGlvbiAoa2V5KSB7XG4gICAgcmV0dXJuICFyZWR1Y2Vycy5oYXNPd25Qcm9wZXJ0eShrZXkpICYmICF1bmV4cGVjdGVkS2V5Q2FjaGVba2V5XTtcbiAgfSk7XG5cbiAgdW5leHBlY3RlZEtleXMuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgdW5leHBlY3RlZEtleUNhY2hlW2tleV0gPSB0cnVlO1xuICB9KTtcblxuICBpZiAoYWN0aW9uICYmIGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5SRVBMQUNFKSByZXR1cm47XG5cbiAgaWYgKHVuZXhwZWN0ZWRLZXlzLmxlbmd0aCA+IDApIHtcbiAgICByZXR1cm4gJ1VuZXhwZWN0ZWQgJyArICh1bmV4cGVjdGVkS2V5cy5sZW5ndGggPiAxID8gJ2tleXMnIDogJ2tleScpICsgJyAnICsgKCdcIicgKyB1bmV4cGVjdGVkS2V5cy5qb2luKCdcIiwgXCInKSArICdcIiBmb3VuZCBpbiAnICsgYXJndW1lbnROYW1lICsgJy4gJykgKyAnRXhwZWN0ZWQgdG8gZmluZCBvbmUgb2YgdGhlIGtub3duIHJlZHVjZXIga2V5cyBpbnN0ZWFkOiAnICsgKCdcIicgKyByZWR1Y2VyS2V5cy5qb2luKCdcIiwgXCInKSArICdcIi4gVW5leHBlY3RlZCBrZXlzIHdpbGwgYmUgaWdub3JlZC4nKTtcbiAgfVxufVxuXG5mdW5jdGlvbiBhc3NlcnRSZWR1Y2VyU2hhcGUocmVkdWNlcnMpIHtcbiAgT2JqZWN0LmtleXMocmVkdWNlcnMpLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xuICAgIHZhciByZWR1Y2VyID0gcmVkdWNlcnNba2V5XTtcbiAgICB2YXIgaW5pdGlhbFN0YXRlID0gcmVkdWNlcih1bmRlZmluZWQsIHsgdHlwZTogQWN0aW9uVHlwZXMuSU5JVCB9KTtcblxuICAgIGlmICh0eXBlb2YgaW5pdGlhbFN0YXRlID09PSAndW5kZWZpbmVkJykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdSZWR1Y2VyIFwiJyArIGtleSArICdcIiByZXR1cm5lZCB1bmRlZmluZWQgZHVyaW5nIGluaXRpYWxpemF0aW9uLiAnICsgJ0lmIHRoZSBzdGF0ZSBwYXNzZWQgdG8gdGhlIHJlZHVjZXIgaXMgdW5kZWZpbmVkLCB5b3UgbXVzdCAnICsgJ2V4cGxpY2l0bHkgcmV0dXJuIHRoZSBpbml0aWFsIHN0YXRlLiBUaGUgaW5pdGlhbCBzdGF0ZSBtYXkgJyArICdub3QgYmUgdW5kZWZpbmVkLiBJZiB5b3UgZG9uXFwndCB3YW50IHRvIHNldCBhIHZhbHVlIGZvciB0aGlzIHJlZHVjZXIsICcgKyAneW91IGNhbiB1c2UgbnVsbCBpbnN0ZWFkIG9mIHVuZGVmaW5lZC4nKTtcbiAgICB9XG5cbiAgICB2YXIgdHlwZSA9ICdAQHJlZHV4L1BST0JFX1VOS05PV05fQUNUSU9OXycgKyBNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDM2KS5zdWJzdHJpbmcoNykuc3BsaXQoJycpLmpvaW4oJy4nKTtcbiAgICBpZiAodHlwZW9mIHJlZHVjZXIodW5kZWZpbmVkLCB7IHR5cGU6IHR5cGUgfSkgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ1JlZHVjZXIgXCInICsga2V5ICsgJ1wiIHJldHVybmVkIHVuZGVmaW5lZCB3aGVuIHByb2JlZCB3aXRoIGEgcmFuZG9tIHR5cGUuICcgKyAoJ0RvblxcJ3QgdHJ5IHRvIGhhbmRsZSAnICsgQWN0aW9uVHlwZXMuSU5JVCArICcgb3Igb3RoZXIgYWN0aW9ucyBpbiBcInJlZHV4LypcIiAnKSArICduYW1lc3BhY2UuIFRoZXkgYXJlIGNvbnNpZGVyZWQgcHJpdmF0ZS4gSW5zdGVhZCwgeW91IG11c3QgcmV0dXJuIHRoZSAnICsgJ2N1cnJlbnQgc3RhdGUgZm9yIGFueSB1bmtub3duIGFjdGlvbnMsIHVubGVzcyBpdCBpcyB1bmRlZmluZWQsICcgKyAnaW4gd2hpY2ggY2FzZSB5b3UgbXVzdCByZXR1cm4gdGhlIGluaXRpYWwgc3RhdGUsIHJlZ2FyZGxlc3Mgb2YgdGhlICcgKyAnYWN0aW9uIHR5cGUuIFRoZSBpbml0aWFsIHN0YXRlIG1heSBub3QgYmUgdW5kZWZpbmVkLCBidXQgY2FuIGJlIG51bGwuJyk7XG4gICAgfVxuICB9KTtcbn1cblxuLyoqXG4gKiBUdXJucyBhbiBvYmplY3Qgd2hvc2UgdmFsdWVzIGFyZSBkaWZmZXJlbnQgcmVkdWNlciBmdW5jdGlvbnMsIGludG8gYSBzaW5nbGVcbiAqIHJlZHVjZXIgZnVuY3Rpb24uIEl0IHdpbGwgY2FsbCBldmVyeSBjaGlsZCByZWR1Y2VyLCBhbmQgZ2F0aGVyIHRoZWlyIHJlc3VsdHNcbiAqIGludG8gYSBzaW5nbGUgc3RhdGUgb2JqZWN0LCB3aG9zZSBrZXlzIGNvcnJlc3BvbmQgdG8gdGhlIGtleXMgb2YgdGhlIHBhc3NlZFxuICogcmVkdWNlciBmdW5jdGlvbnMuXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHJlZHVjZXJzIEFuIG9iamVjdCB3aG9zZSB2YWx1ZXMgY29ycmVzcG9uZCB0byBkaWZmZXJlbnRcbiAqIHJlZHVjZXIgZnVuY3Rpb25zIHRoYXQgbmVlZCB0byBiZSBjb21iaW5lZCBpbnRvIG9uZS4gT25lIGhhbmR5IHdheSB0byBvYnRhaW5cbiAqIGl0IGlzIHRvIHVzZSBFUzYgYGltcG9ydCAqIGFzIHJlZHVjZXJzYCBzeW50YXguIFRoZSByZWR1Y2VycyBtYXkgbmV2ZXIgcmV0dXJuXG4gKiB1bmRlZmluZWQgZm9yIGFueSBhY3Rpb24uIEluc3RlYWQsIHRoZXkgc2hvdWxkIHJldHVybiB0aGVpciBpbml0aWFsIHN0YXRlXG4gKiBpZiB0aGUgc3RhdGUgcGFzc2VkIHRvIHRoZW0gd2FzIHVuZGVmaW5lZCwgYW5kIHRoZSBjdXJyZW50IHN0YXRlIGZvciBhbnlcbiAqIHVucmVjb2duaXplZCBhY3Rpb24uXG4gKlxuICogQHJldHVybnMge0Z1bmN0aW9ufSBBIHJlZHVjZXIgZnVuY3Rpb24gdGhhdCBpbnZva2VzIGV2ZXJ5IHJlZHVjZXIgaW5zaWRlIHRoZVxuICogcGFzc2VkIG9iamVjdCwgYW5kIGJ1aWxkcyBhIHN0YXRlIG9iamVjdCB3aXRoIHRoZSBzYW1lIHNoYXBlLlxuICovXG5mdW5jdGlvbiBjb21iaW5lUmVkdWNlcnMocmVkdWNlcnMpIHtcbiAgdmFyIHJlZHVjZXJLZXlzID0gT2JqZWN0LmtleXMocmVkdWNlcnMpO1xuICB2YXIgZmluYWxSZWR1Y2VycyA9IHt9O1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlZHVjZXJLZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IHJlZHVjZXJLZXlzW2ldO1xuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgd2FybmluZygnTm8gcmVkdWNlciBwcm92aWRlZCBmb3Iga2V5IFwiJyArIGtleSArICdcIicpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmICh0eXBlb2YgcmVkdWNlcnNba2V5XSA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgZmluYWxSZWR1Y2Vyc1trZXldID0gcmVkdWNlcnNba2V5XTtcbiAgICB9XG4gIH1cbiAgdmFyIGZpbmFsUmVkdWNlcktleXMgPSBPYmplY3Qua2V5cyhmaW5hbFJlZHVjZXJzKTtcblxuICB2YXIgdW5leHBlY3RlZEtleUNhY2hlID0gdm9pZCAwO1xuICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykge1xuICAgIHVuZXhwZWN0ZWRLZXlDYWNoZSA9IHt9O1xuICB9XG5cbiAgdmFyIHNoYXBlQXNzZXJ0aW9uRXJyb3IgPSB2b2lkIDA7XG4gIHRyeSB7XG4gICAgYXNzZXJ0UmVkdWNlclNoYXBlKGZpbmFsUmVkdWNlcnMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgc2hhcGVBc3NlcnRpb25FcnJvciA9IGU7XG4gIH1cblxuICByZXR1cm4gZnVuY3Rpb24gY29tYmluYXRpb24oKSB7XG4gICAgdmFyIHN0YXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcbiAgICB2YXIgYWN0aW9uID0gYXJndW1lbnRzWzFdO1xuXG4gICAgaWYgKHNoYXBlQXNzZXJ0aW9uRXJyb3IpIHtcbiAgICAgIHRocm93IHNoYXBlQXNzZXJ0aW9uRXJyb3I7XG4gICAgfVxuXG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSAncHJvZHVjdGlvbicpIHtcbiAgICAgIHZhciB3YXJuaW5nTWVzc2FnZSA9IGdldFVuZXhwZWN0ZWRTdGF0ZVNoYXBlV2FybmluZ01lc3NhZ2Uoc3RhdGUsIGZpbmFsUmVkdWNlcnMsIGFjdGlvbiwgdW5leHBlY3RlZEtleUNhY2hlKTtcbiAgICAgIGlmICh3YXJuaW5nTWVzc2FnZSkge1xuICAgICAgICB3YXJuaW5nKHdhcm5pbmdNZXNzYWdlKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgaGFzQ2hhbmdlZCA9IGZhbHNlO1xuICAgIHZhciBuZXh0U3RhdGUgPSB7fTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgZmluYWxSZWR1Y2VyS2V5cy5sZW5ndGg7IF9pKyspIHtcbiAgICAgIHZhciBfa2V5ID0gZmluYWxSZWR1Y2VyS2V5c1tfaV07XG4gICAgICB2YXIgcmVkdWNlciA9IGZpbmFsUmVkdWNlcnNbX2tleV07XG4gICAgICB2YXIgcHJldmlvdXNTdGF0ZUZvcktleSA9IHN0YXRlW19rZXldO1xuICAgICAgdmFyIG5leHRTdGF0ZUZvcktleSA9IHJlZHVjZXIocHJldmlvdXNTdGF0ZUZvcktleSwgYWN0aW9uKTtcbiAgICAgIGlmICh0eXBlb2YgbmV4dFN0YXRlRm9yS2V5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICB2YXIgZXJyb3JNZXNzYWdlID0gZ2V0VW5kZWZpbmVkU3RhdGVFcnJvck1lc3NhZ2UoX2tleSwgYWN0aW9uKTtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGVycm9yTWVzc2FnZSk7XG4gICAgICB9XG4gICAgICBuZXh0U3RhdGVbX2tleV0gPSBuZXh0U3RhdGVGb3JLZXk7XG4gICAgICBoYXNDaGFuZ2VkID0gaGFzQ2hhbmdlZCB8fCBuZXh0U3RhdGVGb3JLZXkgIT09IHByZXZpb3VzU3RhdGVGb3JLZXk7XG4gICAgfVxuICAgIHJldHVybiBoYXNDaGFuZ2VkID8gbmV4dFN0YXRlIDogc3RhdGU7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGJpbmRBY3Rpb25DcmVhdG9yKGFjdGlvbkNyZWF0b3IsIGRpc3BhdGNoKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIGRpc3BhdGNoKGFjdGlvbkNyZWF0b3IuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH07XG59XG5cbi8qKlxuICogVHVybnMgYW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uIGNyZWF0b3JzLCBpbnRvIGFuIG9iamVjdCB3aXRoIHRoZVxuICogc2FtZSBrZXlzLCBidXQgd2l0aCBldmVyeSBmdW5jdGlvbiB3cmFwcGVkIGludG8gYSBgZGlzcGF0Y2hgIGNhbGwgc28gdGhleVxuICogbWF5IGJlIGludm9rZWQgZGlyZWN0bHkuIFRoaXMgaXMganVzdCBhIGNvbnZlbmllbmNlIG1ldGhvZCwgYXMgeW91IGNhbiBjYWxsXG4gKiBgc3RvcmUuZGlzcGF0Y2goTXlBY3Rpb25DcmVhdG9ycy5kb1NvbWV0aGluZygpKWAgeW91cnNlbGYganVzdCBmaW5lLlxuICpcbiAqIEZvciBjb252ZW5pZW5jZSwgeW91IGNhbiBhbHNvIHBhc3MgYSBzaW5nbGUgZnVuY3Rpb24gYXMgdGhlIGZpcnN0IGFyZ3VtZW50LFxuICogYW5kIGdldCBhIGZ1bmN0aW9uIGluIHJldHVybi5cbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufE9iamVjdH0gYWN0aW9uQ3JlYXRvcnMgQW4gb2JqZWN0IHdob3NlIHZhbHVlcyBhcmUgYWN0aW9uXG4gKiBjcmVhdG9yIGZ1bmN0aW9ucy4gT25lIGhhbmR5IHdheSB0byBvYnRhaW4gaXQgaXMgdG8gdXNlIEVTNiBgaW1wb3J0ICogYXNgXG4gKiBzeW50YXguIFlvdSBtYXkgYWxzbyBwYXNzIGEgc2luZ2xlIGZ1bmN0aW9uLlxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGRpc3BhdGNoIFRoZSBgZGlzcGF0Y2hgIGZ1bmN0aW9uIGF2YWlsYWJsZSBvbiB5b3VyIFJlZHV4XG4gKiBzdG9yZS5cbiAqXG4gKiBAcmV0dXJucyB7RnVuY3Rpb258T2JqZWN0fSBUaGUgb2JqZWN0IG1pbWlja2luZyB0aGUgb3JpZ2luYWwgb2JqZWN0LCBidXQgd2l0aFxuICogZXZlcnkgYWN0aW9uIGNyZWF0b3Igd3JhcHBlZCBpbnRvIHRoZSBgZGlzcGF0Y2hgIGNhbGwuIElmIHlvdSBwYXNzZWQgYVxuICogZnVuY3Rpb24gYXMgYGFjdGlvbkNyZWF0b3JzYCwgdGhlIHJldHVybiB2YWx1ZSB3aWxsIGFsc28gYmUgYSBzaW5nbGVcbiAqIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBiaW5kQWN0aW9uQ3JlYXRvcnMoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKSB7XG4gIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvcnMsIGRpc3BhdGNoKTtcbiAgfVxuXG4gIGlmICgodHlwZW9mIGFjdGlvbkNyZWF0b3JzID09PSAndW5kZWZpbmVkJyA/ICd1bmRlZmluZWQnIDogX3R5cGVvZihhY3Rpb25DcmVhdG9ycykpICE9PSAnb2JqZWN0JyB8fCBhY3Rpb25DcmVhdG9ycyA9PT0gbnVsbCkge1xuICAgIHRocm93IG5ldyBFcnJvcignYmluZEFjdGlvbkNyZWF0b3JzIGV4cGVjdGVkIGFuIG9iamVjdCBvciBhIGZ1bmN0aW9uLCBpbnN0ZWFkIHJlY2VpdmVkICcgKyAoYWN0aW9uQ3JlYXRvcnMgPT09IG51bGwgPyAnbnVsbCcgOiB0eXBlb2YgYWN0aW9uQ3JlYXRvcnMgPT09ICd1bmRlZmluZWQnID8gJ3VuZGVmaW5lZCcgOiBfdHlwZW9mKGFjdGlvbkNyZWF0b3JzKSkgKyAnLiAnICsgJ0RpZCB5b3Ugd3JpdGUgXCJpbXBvcnQgQWN0aW9uQ3JlYXRvcnMgZnJvbVwiIGluc3RlYWQgb2YgXCJpbXBvcnQgKiBhcyBBY3Rpb25DcmVhdG9ycyBmcm9tXCI/Jyk7XG4gIH1cblxuICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKGFjdGlvbkNyZWF0b3JzKTtcbiAgdmFyIGJvdW5kQWN0aW9uQ3JlYXRvcnMgPSB7fTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzLmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgdmFyIGFjdGlvbkNyZWF0b3IgPSBhY3Rpb25DcmVhdG9yc1trZXldO1xuICAgIGlmICh0eXBlb2YgYWN0aW9uQ3JlYXRvciA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgYm91bmRBY3Rpb25DcmVhdG9yc1trZXldID0gYmluZEFjdGlvbkNyZWF0b3IoYWN0aW9uQ3JlYXRvciwgZGlzcGF0Y2gpO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYm91bmRBY3Rpb25DcmVhdG9ycztcbn1cblxuLyoqXG4gKiBDb21wb3NlcyBzaW5nbGUtYXJndW1lbnQgZnVuY3Rpb25zIGZyb20gcmlnaHQgdG8gbGVmdC4gVGhlIHJpZ2h0bW9zdFxuICogZnVuY3Rpb24gY2FuIHRha2UgbXVsdGlwbGUgYXJndW1lbnRzIGFzIGl0IHByb3ZpZGVzIHRoZSBzaWduYXR1cmUgZm9yXG4gKiB0aGUgcmVzdWx0aW5nIGNvbXBvc2l0ZSBmdW5jdGlvbi5cbiAqXG4gKiBAcGFyYW0gey4uLkZ1bmN0aW9ufSBmdW5jcyBUaGUgZnVuY3Rpb25zIHRvIGNvbXBvc2UuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IEEgZnVuY3Rpb24gb2J0YWluZWQgYnkgY29tcG9zaW5nIHRoZSBhcmd1bWVudCBmdW5jdGlvbnNcbiAqIGZyb20gcmlnaHQgdG8gbGVmdC4gRm9yIGV4YW1wbGUsIGNvbXBvc2UoZiwgZywgaCkgaXMgaWRlbnRpY2FsIHRvIGRvaW5nXG4gKiAoLi4uYXJncykgPT4gZihnKGgoLi4uYXJncykpKS5cbiAqL1xuXG5mdW5jdGlvbiBjb21wb3NlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgZnVuY3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBmdW5jc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIGlmIChmdW5jcy5sZW5ndGggPT09IDApIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKGFyZykge1xuICAgICAgcmV0dXJuIGFyZztcbiAgICB9O1xuICB9XG5cbiAgaWYgKGZ1bmNzLmxlbmd0aCA9PT0gMSkge1xuICAgIHJldHVybiBmdW5jc1swXTtcbiAgfVxuXG4gIHJldHVybiBmdW5jcy5yZWR1Y2UoZnVuY3Rpb24gKGEsIGIpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgcmV0dXJuIGEoYi5hcHBseSh1bmRlZmluZWQsIGFyZ3VtZW50cykpO1xuICAgIH07XG4gIH0pO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgYSBzdG9yZSBlbmhhbmNlciB0aGF0IGFwcGxpZXMgbWlkZGxld2FyZSB0byB0aGUgZGlzcGF0Y2ggbWV0aG9kXG4gKiBvZiB0aGUgUmVkdXggc3RvcmUuIFRoaXMgaXMgaGFuZHkgZm9yIGEgdmFyaWV0eSBvZiB0YXNrcywgc3VjaCBhcyBleHByZXNzaW5nXG4gKiBhc3luY2hyb25vdXMgYWN0aW9ucyBpbiBhIGNvbmNpc2UgbWFubmVyLCBvciBsb2dnaW5nIGV2ZXJ5IGFjdGlvbiBwYXlsb2FkLlxuICpcbiAqIFNlZSBgcmVkdXgtdGh1bmtgIHBhY2thZ2UgYXMgYW4gZXhhbXBsZSBvZiB0aGUgUmVkdXggbWlkZGxld2FyZS5cbiAqXG4gKiBCZWNhdXNlIG1pZGRsZXdhcmUgaXMgcG90ZW50aWFsbHkgYXN5bmNocm9ub3VzLCB0aGlzIHNob3VsZCBiZSB0aGUgZmlyc3RcbiAqIHN0b3JlIGVuaGFuY2VyIGluIHRoZSBjb21wb3NpdGlvbiBjaGFpbi5cbiAqXG4gKiBOb3RlIHRoYXQgZWFjaCBtaWRkbGV3YXJlIHdpbGwgYmUgZ2l2ZW4gdGhlIGBkaXNwYXRjaGAgYW5kIGBnZXRTdGF0ZWAgZnVuY3Rpb25zXG4gKiBhcyBuYW1lZCBhcmd1bWVudHMuXG4gKlxuICogQHBhcmFtIHsuLi5GdW5jdGlvbn0gbWlkZGxld2FyZXMgVGhlIG1pZGRsZXdhcmUgY2hhaW4gdG8gYmUgYXBwbGllZC5cbiAqIEByZXR1cm5zIHtGdW5jdGlvbn0gQSBzdG9yZSBlbmhhbmNlciBhcHBseWluZyB0aGUgbWlkZGxld2FyZS5cbiAqL1xuZnVuY3Rpb24gYXBwbHlNaWRkbGV3YXJlKCkge1xuICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgbWlkZGxld2FyZXMgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICBtaWRkbGV3YXJlc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoY3JlYXRlU3RvcmUpIHtcbiAgICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgICAgZm9yICh2YXIgX2xlbjIgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbjIpLCBfa2V5MiA9IDA7IF9rZXkyIDwgX2xlbjI7IF9rZXkyKyspIHtcbiAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgfVxuXG4gICAgICB2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZS5hcHBseSh1bmRlZmluZWQsIGFyZ3MpO1xuICAgICAgdmFyIF9kaXNwYXRjaCA9IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0Rpc3BhdGNoaW5nIHdoaWxlIGNvbnN0cnVjdGluZyB5b3VyIG1pZGRsZXdhcmUgaXMgbm90IGFsbG93ZWQuICcgKyAnT3RoZXIgbWlkZGxld2FyZSB3b3VsZCBub3QgYmUgYXBwbGllZCB0byB0aGlzIGRpc3BhdGNoLicpO1xuICAgICAgfTtcblxuICAgICAgdmFyIG1pZGRsZXdhcmVBUEkgPSB7XG4gICAgICAgIGdldFN0YXRlOiBzdG9yZS5nZXRTdGF0ZSxcbiAgICAgICAgZGlzcGF0Y2g6IGZ1bmN0aW9uIGRpc3BhdGNoKCkge1xuICAgICAgICAgIHJldHVybiBfZGlzcGF0Y2guYXBwbHkodW5kZWZpbmVkLCBhcmd1bWVudHMpO1xuICAgICAgICB9XG4gICAgICB9O1xuICAgICAgdmFyIGNoYWluID0gbWlkZGxld2FyZXMubWFwKGZ1bmN0aW9uIChtaWRkbGV3YXJlKSB7XG4gICAgICAgIHJldHVybiBtaWRkbGV3YXJlKG1pZGRsZXdhcmVBUEkpO1xuICAgICAgfSk7XG4gICAgICBfZGlzcGF0Y2ggPSBjb21wb3NlLmFwcGx5KHVuZGVmaW5lZCwgY2hhaW4pKHN0b3JlLmRpc3BhdGNoKTtcblxuICAgICAgcmV0dXJuIF9leHRlbmRzKHt9LCBzdG9yZSwge1xuICAgICAgICBkaXNwYXRjaDogX2Rpc3BhdGNoXG4gICAgICB9KTtcbiAgICB9O1xuICB9O1xufVxuXG4vKlxuICogVGhpcyBpcyBhIGR1bW15IGZ1bmN0aW9uIHRvIGNoZWNrIGlmIHRoZSBmdW5jdGlvbiBuYW1lIGhhcyBiZWVuIGFsdGVyZWQgYnkgbWluaWZpY2F0aW9uLlxuICogSWYgdGhlIGZ1bmN0aW9uIGhhcyBiZWVuIG1pbmlmaWVkIGFuZCBOT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nLCB3YXJuIHRoZSB1c2VyLlxuICovXG5mdW5jdGlvbiBpc0NydXNoZWQoKSB7fVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJyAmJiB0eXBlb2YgaXNDcnVzaGVkLm5hbWUgPT09ICdzdHJpbmcnICYmIGlzQ3J1c2hlZC5uYW1lICE9PSAnaXNDcnVzaGVkJykge1xuICB3YXJuaW5nKFwiWW91IGFyZSBjdXJyZW50bHkgdXNpbmcgbWluaWZpZWQgY29kZSBvdXRzaWRlIG9mIE5PREVfRU5WID09PSAncHJvZHVjdGlvbicuIFwiICsgJ1RoaXMgbWVhbnMgdGhhdCB5b3UgYXJlIHJ1bm5pbmcgYSBzbG93ZXIgZGV2ZWxvcG1lbnQgYnVpbGQgb2YgUmVkdXguICcgKyAnWW91IGNhbiB1c2UgbG9vc2UtZW52aWZ5IChodHRwczovL2dpdGh1Yi5jb20vemVydG9zaC9sb29zZS1lbnZpZnkpIGZvciBicm93c2VyaWZ5ICcgKyAnb3IgRGVmaW5lUGx1Z2luIGZvciB3ZWJwYWNrIChodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzMwMDMwMDMxKSAnICsgJ3RvIGVuc3VyZSB5b3UgaGF2ZSB0aGUgY29ycmVjdCBjb2RlIGZvciB5b3VyIHByb2R1Y3Rpb24gYnVpbGQuJyk7XG59XG5cbmV4cG9ydCB7IGNyZWF0ZVN0b3JlLCBjb21iaW5lUmVkdWNlcnMsIGJpbmRBY3Rpb25DcmVhdG9ycywgYXBwbHlNaWRkbGV3YXJlLCBjb21wb3NlLCBBY3Rpb25UeXBlcyBhcyBfX0RPX05PVF9VU0VfX0FjdGlvblR5cGVzIH07XG4iLCJcbi8qKlxuICogV2hlbiBzb3VyY2UgbWFwcyBhcmUgZW5hYmxlZCwgYHN0eWxlLWxvYWRlcmAgdXNlcyBhIGxpbmsgZWxlbWVudCB3aXRoIGEgZGF0YS11cmkgdG9cbiAqIGVtYmVkIHRoZSBjc3Mgb24gdGhlIHBhZ2UuIFRoaXMgYnJlYWtzIGFsbCByZWxhdGl2ZSB1cmxzIGJlY2F1c2Ugbm93IHRoZXkgYXJlIHJlbGF0aXZlIHRvIGFcbiAqIGJ1bmRsZSBpbnN0ZWFkIG9mIHRoZSBjdXJyZW50IHBhZ2UuXG4gKlxuICogT25lIHNvbHV0aW9uIGlzIHRvIG9ubHkgdXNlIGZ1bGwgdXJscywgYnV0IHRoYXQgbWF5IGJlIGltcG9zc2libGUuXG4gKlxuICogSW5zdGVhZCwgdGhpcyBmdW5jdGlvbiBcImZpeGVzXCIgdGhlIHJlbGF0aXZlIHVybHMgdG8gYmUgYWJzb2x1dGUgYWNjb3JkaW5nIHRvIHRoZSBjdXJyZW50IHBhZ2UgbG9jYXRpb24uXG4gKlxuICogQSBydWRpbWVudGFyeSB0ZXN0IHN1aXRlIGlzIGxvY2F0ZWQgYXQgYHRlc3QvZml4VXJscy5qc2AgYW5kIGNhbiBiZSBydW4gdmlhIHRoZSBgbnBtIHRlc3RgIGNvbW1hbmQuXG4gKlxuICovXG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzcykge1xuICAvLyBnZXQgY3VycmVudCBsb2NhdGlvblxuICB2YXIgbG9jYXRpb24gPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiICYmIHdpbmRvdy5sb2NhdGlvbjtcblxuICBpZiAoIWxvY2F0aW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiZml4VXJscyByZXF1aXJlcyB3aW5kb3cubG9jYXRpb25cIik7XG4gIH1cblxuXHQvLyBibGFuayBvciBudWxsP1xuXHRpZiAoIWNzcyB8fCB0eXBlb2YgY3NzICE9PSBcInN0cmluZ1wiKSB7XG5cdCAgcmV0dXJuIGNzcztcbiAgfVxuXG4gIHZhciBiYXNlVXJsID0gbG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBsb2NhdGlvbi5ob3N0O1xuICB2YXIgY3VycmVudERpciA9IGJhc2VVcmwgKyBsb2NhdGlvbi5wYXRobmFtZS5yZXBsYWNlKC9cXC9bXlxcL10qJC8sIFwiL1wiKTtcblxuXHQvLyBjb252ZXJ0IGVhY2ggdXJsKC4uLilcblx0Lypcblx0VGhpcyByZWd1bGFyIGV4cHJlc3Npb24gaXMganVzdCBhIHdheSB0byByZWN1cnNpdmVseSBtYXRjaCBicmFja2V0cyB3aXRoaW5cblx0YSBzdHJpbmcuXG5cblx0IC91cmxcXHMqXFwoICA9IE1hdGNoIG9uIHRoZSB3b3JkIFwidXJsXCIgd2l0aCBhbnkgd2hpdGVzcGFjZSBhZnRlciBpdCBhbmQgdGhlbiBhIHBhcmVuc1xuXHQgICAoICA9IFN0YXJ0IGEgY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgKD86ICA9IFN0YXJ0IGEgbm9uLWNhcHR1cmluZyBncm91cFxuXHQgICAgICAgICBbXikoXSAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICBcXCggID0gTWF0Y2ggYSBzdGFydCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKD86ICA9IFN0YXJ0IGFub3RoZXIgbm9uLWNhcHR1cmluZyBncm91cHNcblx0ICAgICAgICAgICAgICAgICBbXikoXSsgID0gTWF0Y2ggYW55dGhpbmcgdGhhdCBpc24ndCBhIHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgfCAgPSBPUlxuXHQgICAgICAgICAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAgICAgICAgIFteKShdKiAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICBcXCkgID0gTWF0Y2ggYSBlbmQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICkgID0gRW5kIEdyb3VwXG4gICAgICAgICAgICAgICpcXCkgPSBNYXRjaCBhbnl0aGluZyBhbmQgdGhlbiBhIGNsb3NlIHBhcmVuc1xuICAgICAgICAgICkgID0gQ2xvc2Ugbm9uLWNhcHR1cmluZyBncm91cFxuICAgICAgICAgICogID0gTWF0Y2ggYW55dGhpbmdcbiAgICAgICApICA9IENsb3NlIGNhcHR1cmluZyBncm91cFxuXHQgXFwpICA9IE1hdGNoIGEgY2xvc2UgcGFyZW5zXG5cblx0IC9naSAgPSBHZXQgYWxsIG1hdGNoZXMsIG5vdCB0aGUgZmlyc3QuICBCZSBjYXNlIGluc2Vuc2l0aXZlLlxuXHQgKi9cblx0dmFyIGZpeGVkQ3NzID0gY3NzLnJlcGxhY2UoL3VybFxccypcXCgoKD86W14pKF18XFwoKD86W14pKF0rfFxcKFteKShdKlxcKSkqXFwpKSopXFwpL2dpLCBmdW5jdGlvbihmdWxsTWF0Y2gsIG9yaWdVcmwpIHtcblx0XHQvLyBzdHJpcCBxdW90ZXMgKGlmIHRoZXkgZXhpc3QpXG5cdFx0dmFyIHVucXVvdGVkT3JpZ1VybCA9IG9yaWdVcmxcblx0XHRcdC50cmltKClcblx0XHRcdC5yZXBsYWNlKC9eXCIoLiopXCIkLywgZnVuY3Rpb24obywgJDEpeyByZXR1cm4gJDE7IH0pXG5cdFx0XHQucmVwbGFjZSgvXicoLiopJyQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSk7XG5cblx0XHQvLyBhbHJlYWR5IGEgZnVsbCB1cmw/IG5vIGNoYW5nZVxuXHRcdGlmICgvXigjfGRhdGE6fGh0dHA6XFwvXFwvfGh0dHBzOlxcL1xcL3xmaWxlOlxcL1xcL1xcL3xcXHMqJCkvaS50ZXN0KHVucXVvdGVkT3JpZ1VybCkpIHtcblx0XHQgIHJldHVybiBmdWxsTWF0Y2g7XG5cdFx0fVxuXG5cdFx0Ly8gY29udmVydCB0aGUgdXJsIHRvIGEgZnVsbCB1cmxcblx0XHR2YXIgbmV3VXJsO1xuXG5cdFx0aWYgKHVucXVvdGVkT3JpZ1VybC5pbmRleE9mKFwiLy9cIikgPT09IDApIHtcblx0XHQgIFx0Ly9UT0RPOiBzaG91bGQgd2UgYWRkIHByb3RvY29sP1xuXHRcdFx0bmV3VXJsID0gdW5xdW90ZWRPcmlnVXJsO1xuXHRcdH0gZWxzZSBpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvXCIpID09PSAwKSB7XG5cdFx0XHQvLyBwYXRoIHNob3VsZCBiZSByZWxhdGl2ZSB0byB0aGUgYmFzZSB1cmxcblx0XHRcdG5ld1VybCA9IGJhc2VVcmwgKyB1bnF1b3RlZE9yaWdVcmw7IC8vIGFscmVhZHkgc3RhcnRzIHdpdGggJy8nXG5cdFx0fSBlbHNlIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIGN1cnJlbnQgZGlyZWN0b3J5XG5cdFx0XHRuZXdVcmwgPSBjdXJyZW50RGlyICsgdW5xdW90ZWRPcmlnVXJsLnJlcGxhY2UoL15cXC5cXC8vLCBcIlwiKTsgLy8gU3RyaXAgbGVhZGluZyAnLi8nXG5cdFx0fVxuXG5cdFx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCB1cmwoLi4uKVxuXHRcdHJldHVybiBcInVybChcIiArIEpTT04uc3RyaW5naWZ5KG5ld1VybCkgKyBcIilcIjtcblx0fSk7XG5cblx0Ly8gc2VuZCBiYWNrIHRoZSBmaXhlZCBjc3Ncblx0cmV0dXJuIGZpeGVkQ3NzO1xufTtcbiIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG59O1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24odGFyZ2V0KSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgcGFzc2luZyBmdW5jdGlvbiBpbiBvcHRpb25zLCB0aGVuIHVzZSBpdCBmb3IgcmVzb2x2ZSBcImhlYWRcIiBlbGVtZW50LlxuICAgICAgICAgICAgICAgIC8vIFVzZWZ1bCBmb3IgU2hhZG93IFJvb3Qgc3R5bGUgaS5lXG4gICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICAgICAgICAgIC8vICAgaW5zZXJ0SW50bzogZnVuY3Rpb24gKCkgeyByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb29cIikuc2hhZG93Um9vdCB9XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR2YXIgc3R5bGVUYXJnZXQgPSBnZXRUYXJnZXQuY2FsbCh0aGlzLCB0YXJnZXQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8gKyBcIiBcIiArIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKGZhbHNlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cXG5cXG4vKiBEb2N1bWVudFxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxcbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxcbiAqL1xcblxcbmh0bWwge1xcbiAgbGluZS1oZWlnaHQ6IDEuMTU7IC8qIDEgKi9cXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMiAqL1xcbn1cXG5cXG4vKiBTZWN0aW9uc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmJvZHkge1xcbiAgbWFyZ2luOiAwO1xcbn1cXG5cXG4vKipcXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cXG4gKi9cXG5cXG5oMSB7XFxuICBmb250LXNpemU6IDJlbTtcXG4gIG1hcmdpbjogMC42N2VtIDA7XFxufVxcblxcbi8qIEdyb3VwaW5nIGNvbnRlbnRcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXFxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXFxuICovXFxuXFxuaHIge1xcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7IC8qIDEgKi9cXG4gIGhlaWdodDogMDsgLyogMSAqL1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXFxuICovXFxuXFxucHJlIHtcXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cXG59XFxuXFxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5hIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xcbn1cXG5cXG4vKipcXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxcbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYWJiclt0aXRsZV0ge1xcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxcbiAqL1xcblxcbmIsXFxuc3Ryb25nIHtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxufVxcblxcbi8qKlxcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXFxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmNvZGUsXFxua2JkLFxcbnNhbXAge1xcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXFxuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cXG4gKi9cXG5cXG5zbWFsbCB7XFxuICBmb250LXNpemU6IDgwJTtcXG59XFxuXFxuLyoqXFxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXFxuICogYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnN1YixcXG5zdXAge1xcbiAgZm9udC1zaXplOiA3NSU7XFxuICBsaW5lLWhlaWdodDogMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuc3ViIHtcXG4gIGJvdHRvbTogLTAuMjVlbTtcXG59XFxuXFxuc3VwIHtcXG4gIHRvcDogLTAuNWVtO1xcbn1cXG5cXG4vKiBFbWJlZGRlZCBjb250ZW50XFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxcbiAqL1xcblxcbmltZyB7XFxuICBib3JkZXItc3R5bGU6IG5vbmU7XFxufVxcblxcbi8qIEZvcm1zXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYnV0dG9uLFxcbmlucHV0LFxcbm9wdGdyb3VwLFxcbnNlbGVjdCxcXG50ZXh0YXJlYSB7XFxuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xcbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXFxuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xcbiAgbWFyZ2luOiAwOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXFxuICovXFxuXFxuYnV0dG9uLFxcbmlucHV0IHsgLyogMSAqL1xcbiAgb3ZlcmZsb3c6IHZpc2libGU7XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxcbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cXG4gKi9cXG5cXG5idXR0b24sXFxuc2VsZWN0IHsgLyogMSAqL1xcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXFxuICovXFxuXFxuYnV0dG9uLFxcblt0eXBlPVxcXCJidXR0b25cXFwiXSxcXG5bdHlwZT1cXFwicmVzZXRcXFwiXSxcXG5bdHlwZT1cXFwic3VibWl0XFxcIl0ge1xcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XFxufVxcblxcbi8qKlxcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXFxuICovXFxuXFxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxcblt0eXBlPVxcXCJidXR0b25cXFwiXTo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwicmVzZXRcXFwiXTo6LW1vei1mb2N1cy1pbm5lcixcXG5bdHlwZT1cXFwic3VibWl0XFxcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xcbiAgcGFkZGluZzogMDtcXG59XFxuXFxuLyoqXFxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxcbiAqL1xcblxcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcXG5bdHlwZT1cXFwiYnV0dG9uXFxcIl06LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcInJlc2V0XFxcIl06LW1vei1mb2N1c3JpbmcsXFxuW3R5cGU9XFxcInN1Ym1pdFxcXCJdOi1tb3otZm9jdXNyaW5nIHtcXG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcXG59XFxuXFxuLyoqXFxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxcbiAqL1xcblxcbmZpZWxkc2V0IHtcXG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXFxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbmxlZ2VuZCB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXFxuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xcbiAgZGlzcGxheTogdGFibGU7IC8qIDEgKi9cXG4gIG1heC13aWR0aDogMTAwJTsgLyogMSAqL1xcbiAgcGFkZGluZzogMDsgLyogMyAqL1xcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xcbn1cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxcbiAqL1xcblxcbnByb2dyZXNzIHtcXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcXG59XFxuXFxuLyoqXFxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXFxuICovXFxuXFxudGV4dGFyZWEge1xcbiAgb3ZlcmZsb3c6IGF1dG87XFxufVxcblxcbi8qKlxcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxcbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cXG4gKi9cXG5cXG5bdHlwZT1cXFwiY2hlY2tib3hcXFwiXSxcXG5bdHlwZT1cXFwicmFkaW9cXFwiXSB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAvKiAxICovXFxuICBwYWRkaW5nOiAwOyAvKiAyICovXFxufVxcblxcbi8qKlxcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cXG4gKi9cXG5cXG5bdHlwZT1cXFwibnVtYmVyXFxcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXFxuW3R5cGU9XFxcIm51bWJlclxcXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcXG4gIGhlaWdodDogYXV0bztcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXFxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXFxuICovXFxuXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXFxuICBvdXRsaW5lLW9mZnNldDogLTJweDsgLyogMiAqL1xcbn1cXG5cXG4vKipcXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXFxuICovXFxuXFxuW3R5cGU9XFxcInNlYXJjaFxcXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG59XFxuXFxuLyoqXFxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXFxuICovXFxuXFxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XFxuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgLyogMSAqL1xcbiAgZm9udDogaW5oZXJpdDsgLyogMiAqL1xcbn1cXG5cXG4vKiBJbnRlcmFjdGl2ZVxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuXFxuLypcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxcbiAqL1xcblxcbmRldGFpbHMge1xcbiAgZGlzcGxheTogYmxvY2s7XFxufVxcblxcbi8qXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxcbiAqL1xcblxcbnN1bW1hcnkge1xcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xcbn1cXG5cXG4vKiBNaXNjXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5cXG4vKipcXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXFxuICovXFxuXFxudGVtcGxhdGUge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXFxuLyoqXFxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXFxuICovXFxuXFxuW2hpZGRlbl0ge1xcbiAgZGlzcGxheTogbm9uZTtcXG59XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9ub3JtYWxpemUuY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi9zdHlsZS1sb2FkZXIvbGliL2FkZFN0eWxlcy5qc1wiKShjb250ZW50LCBvcHRpb25zKTtcblxuaWYoY29udGVudC5sb2NhbHMpIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHM7XG5cbmlmKG1vZHVsZS5ob3QpIHtcblx0bW9kdWxlLmhvdC5hY2NlcHQoXCIhIS4uL2Nzcy1sb2FkZXIvaW5kZXguanMhLi9ub3JtYWxpemUuY3NzXCIsIGZ1bmN0aW9uKCkge1xuXHRcdHZhciBuZXdDb250ZW50ID0gcmVxdWlyZShcIiEhLi4vY3NzLWxvYWRlci9pbmRleC5qcyEuL25vcm1hbGl6ZS5jc3NcIik7XG5cblx0XHRpZih0eXBlb2YgbmV3Q29udGVudCA9PT0gJ3N0cmluZycpIG5ld0NvbnRlbnQgPSBbW21vZHVsZS5pZCwgbmV3Q29udGVudCwgJyddXTtcblxuXHRcdHZhciBsb2NhbHMgPSAoZnVuY3Rpb24oYSwgYikge1xuXHRcdFx0dmFyIGtleSwgaWR4ID0gMDtcblxuXHRcdFx0Zm9yKGtleSBpbiBhKSB7XG5cdFx0XHRcdGlmKCFiIHx8IGFba2V5XSAhPT0gYltrZXldKSByZXR1cm4gZmFsc2U7XG5cdFx0XHRcdGlkeCsrO1xuXHRcdFx0fVxuXG5cdFx0XHRmb3Ioa2V5IGluIGIpIGlkeC0tO1xuXG5cdFx0XHRyZXR1cm4gaWR4ID09PSAwO1xuXHRcdH0oY29udGVudC5sb2NhbHMsIG5ld0NvbnRlbnQubG9jYWxzKSk7XG5cblx0XHRpZighbG9jYWxzKSB0aHJvdyBuZXcgRXJyb3IoJ0Fib3J0aW5nIENTUyBITVIgZHVlIHRvIGNoYW5nZWQgY3NzLW1vZHVsZXMgbG9jYWxzLicpO1xuXG5cdFx0dXBkYXRlKG5ld0NvbnRlbnQpO1xuXHR9KTtcblxuXHRtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7IHVwZGF0ZSgpOyB9KTtcbn0iLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbid1c2Ugc3RyaWN0JztcblxudmFyIFJlYWN0UHJvcFR5cGVzU2VjcmV0ID0gJ1NFQ1JFVF9ET19OT1RfUEFTU19USElTX09SX1lPVV9XSUxMX0JFX0ZJUkVEJztcblxubW9kdWxlLmV4cG9ydHMgPSBSZWFjdFByb3BUeXBlc1NlY3JldDtcbiIsIi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgZW1wdHlGdW5jdGlvbiA9IHJlcXVpcmUoJ2ZianMvbGliL2VtcHR5RnVuY3Rpb24nKTtcbnZhciBpbnZhcmlhbnQgPSByZXF1aXJlKCdmYmpzL2xpYi9pbnZhcmlhbnQnKTtcbnZhciBSZWFjdFByb3BUeXBlc1NlY3JldCA9IHJlcXVpcmUoJy4vbGliL1JlYWN0UHJvcFR5cGVzU2VjcmV0Jyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XG4gIGZ1bmN0aW9uIHNoaW0ocHJvcHMsIHByb3BOYW1lLCBjb21wb25lbnROYW1lLCBsb2NhdGlvbiwgcHJvcEZ1bGxOYW1lLCBzZWNyZXQpIHtcbiAgICBpZiAoc2VjcmV0ID09PSBSZWFjdFByb3BUeXBlc1NlY3JldCkge1xuICAgICAgLy8gSXQgaXMgc3RpbGwgc2FmZSB3aGVuIGNhbGxlZCBmcm9tIFJlYWN0LlxuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBpbnZhcmlhbnQoXG4gICAgICBmYWxzZSxcbiAgICAgICdDYWxsaW5nIFByb3BUeXBlcyB2YWxpZGF0b3JzIGRpcmVjdGx5IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhlIGBwcm9wLXR5cGVzYCBwYWNrYWdlLiAnICtcbiAgICAgICdVc2UgUHJvcFR5cGVzLmNoZWNrUHJvcFR5cGVzKCkgdG8gY2FsbCB0aGVtLiAnICtcbiAgICAgICdSZWFkIG1vcmUgYXQgaHR0cDovL2ZiLm1lL3VzZS1jaGVjay1wcm9wLXR5cGVzJ1xuICAgICk7XG4gIH07XG4gIHNoaW0uaXNSZXF1aXJlZCA9IHNoaW07XG4gIGZ1bmN0aW9uIGdldFNoaW0oKSB7XG4gICAgcmV0dXJuIHNoaW07XG4gIH07XG4gIC8vIEltcG9ydGFudCFcbiAgLy8gS2VlcCB0aGlzIGxpc3QgaW4gc3luYyB3aXRoIHByb2R1Y3Rpb24gdmVyc2lvbiBpbiBgLi9mYWN0b3J5V2l0aFR5cGVDaGVja2Vycy5qc2AuXG4gIHZhciBSZWFjdFByb3BUeXBlcyA9IHtcbiAgICBhcnJheTogc2hpbSxcbiAgICBib29sOiBzaGltLFxuICAgIGZ1bmM6IHNoaW0sXG4gICAgbnVtYmVyOiBzaGltLFxuICAgIG9iamVjdDogc2hpbSxcbiAgICBzdHJpbmc6IHNoaW0sXG4gICAgc3ltYm9sOiBzaGltLFxuXG4gICAgYW55OiBzaGltLFxuICAgIGFycmF5T2Y6IGdldFNoaW0sXG4gICAgZWxlbWVudDogc2hpbSxcbiAgICBpbnN0YW5jZU9mOiBnZXRTaGltLFxuICAgIG5vZGU6IHNoaW0sXG4gICAgb2JqZWN0T2Y6IGdldFNoaW0sXG4gICAgb25lT2Y6IGdldFNoaW0sXG4gICAgb25lT2ZUeXBlOiBnZXRTaGltLFxuICAgIHNoYXBlOiBnZXRTaGltLFxuICAgIGV4YWN0OiBnZXRTaGltXG4gIH07XG5cbiAgUmVhY3RQcm9wVHlwZXMuY2hlY2tQcm9wVHlwZXMgPSBlbXB0eUZ1bmN0aW9uO1xuICBSZWFjdFByb3BUeXBlcy5Qcm9wVHlwZXMgPSBSZWFjdFByb3BUeXBlcztcblxuICByZXR1cm4gUmVhY3RQcm9wVHlwZXM7XG59O1xuIiwiaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4J1xuaW1wb3J0IFRvZG9BcHAgZnJvbSAnLi9Ub2RvQXBwJ1xuaW1wb3J0IHthZGRUb2RvfSBmcm9tICcuL3JlZHV4L2FjdGlvbnMnO1xuXG4vL+WwhnN0YXRlLmNvdW50ZXLnu5HlrprliLBwcm9wc+eahGNvdW50ZXJcbmNvbnN0IG1hcFN0YXRlVG9Qcm9wcyA9IHN0YXRlID0+IChcbiAgICB7XG4gICAgICAgIHRpdGxlOiBzdGF0ZS5jb3VudGVyLFxuICAgICAgICBkYXRlOiBzdGF0ZS5kYXRlXG4gICAgfVxuKVxuXG4vL+WwhmFjdGlvbueahOaJgOacieaWueazlee7keWumuWIsHByb3Bz5LiKXG5jb25zdCBtYXBEaXNwYXRjaFRvUHJvcHMgPSBkaXNwYXRjaCA9PiAoXG4gICAge1xuICAgICAgICBhZGRUb2RvOiAoLi4uYXJncykgPT4gZGlzcGF0Y2goYWN0aW9ucy5hZGRUb2RvKC4uLmFyZ3MpKVxuICAgIH1cbilcblxuXG5cbi8v6YCa6L+HcmVhY3QtcmVkdXjmj5DkvpvnmoRjb25uZWN05pa55rOV5bCG5oiR5Lus6ZyA6KaB55qEc3RhdGXkuK3nmoTmlbDmja7lkoxhY3Rpb25z5Lit55qE5pa55rOV57uR5a6a5YiwcHJvcHPkuIpcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLG1hcERpc3BhdGNoVG9Qcm9wcykoVG9kb0FwcCkiLCIvL2ltcG9ydCAnLi9Gb290ZXIuY3NzJ1xuXG5jb25zdCBBZGRGb3JtID0gKCkgPT4gXG4gICAgPGRpdiBjbGFzc05hbWU9XCJhZGQtZm9ybVwiPmZvcm1wYWdlPC9kaXY+XG5cbmV4cG9ydCBkZWZhdWx0IEFkZEZvcm0iLCIvL2ltcG9ydCAnLi9Gb290ZXIuY3NzJ1xuXG5jb25zdCBGb290ZXIgPSAoKSA9PiBcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImZvb3Rlci13cmFwZXJcIj5Gb290ZXIgdGlwPC9kaXY+XG5cbmV4cG9ydCBkZWZhdWx0IEZvb3RlciIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCdcbmltcG9ydCB7cmVuZGVyfSBmcm9tICdyZWFjdC1kb20nXG5cbi8vaW1wb3J0ICcuL0hlYWRlci5jc3MnXG5cblxuXG5jbGFzcyBUb2RvTGlzdCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcbiAgICBtZW51KCl7XG4gICAgICAgIGNvbnNvbGUubG9nKCdtZW51ZXZlbnQnKVxuICAgIH1cbiAgICBhZGQoKXtcbiAgICAgICAgY29uc29sZS5sb2coJ2FkZGV2ZW50JylcbiAgICB9XG4gICAgcmVuZGVyKCl7XG4gICAgICAgIHJldHVybihcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPSdib2R5LXdyYXBlcic+XG4gICAgICAgICAgICAgICAgPHVsPlxuICAgICAgICAgICAgICAgICAgICB7Lyptb2NrRGF0YS5tYXAoXG4gICAgICAgICAgICAgICAgICAgICAgICAodmFsdWUsaSkgPT4gPGxpIGtleT17aX0+PGRpdj57dmFsdWUudGl0bGV9PHNwYW4gY2xhc3NOYW1lPVwiZGF0ZVwiPnt2YWx1ZS5kYXRhfTwvc3Bhbj48L2Rpdj48YnV0dG9uIGNsYXNzTmFtZT1cImRlbFwiPlg8L2J1dHRvbj48L2xpPlxuICAgICAgICAgICAgICAgICAgICApKi99XG4gICAgICAgICAgICAgICAgPC91bD5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IFRvZG9MaXN0IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtyZW5kZXJ9IGZyb20gJ3JlYWN0LWRvbSdcbmltcG9ydCB7YWRkVG9kb30gZnJvbSAnLi4vcmVkdXgvYWN0aW9ucydcblxuLy9pbXBvcnQgJy4vSGVhZGVyLmNzcydcbmNsYXNzIEhlYWRlciBleHRlbmRzIFJlYWN0LkNvbXBvbmVudHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcylcbiAgICB9XG5cbiAgICBtZW51KCl7XG4gICAgICAgIGNvbnNvbGUubG9nKCdtZW51ZXZlbnQnKVxuICAgIH1cbiAgICBhZGQoKXtcbiAgICAgICAgY29uc29sZS5sb2codGhpcylcbiAgICAgICAgY29uc29sZS5sb2codGhpcy5jb250ZXh0KVxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLnByb3BzKVxuICAgIH1cbiAgICByZW5kZXIoKXtcbiAgICAgICAgcmV0dXJuKFxuICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9J2hlYWRlci13cmFwZXInPlxuICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3NOYW1lPSdtZW51JyBvbkNsaWNrPXsoKT0+dGhpcy5tZW51KCl9PuS4iTwvYnV0dG9uPlxuICAgICAgICAgICAgICAgIDxoMT50aXRsZTwvaDE+XG4gICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9J2FkZCcgb25DbGljaz17KCk9PnRoaXMuYWRkKCl9Pis8L2J1dHRvbj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApXG4gICAgfVxufVxuXG5cbmV4cG9ydCBkZWZhdWx0IEhlYWRlciIsImltcG9ydCBDIGZyb20gJy4vY29uc3RhbnRzJ1xuXG5leHBvcnQgY29uc3QgdG9kbyA9IChzdGF0ZSA9IHt9LCBhY3Rpb24pID0+IHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgQy5BRERfVE9ETzpcbiAgICAgICAgICAgIHJldHVybiBbXG4gICAgICAgICAgICAgICAgLi4uc3RhdGUse1xuICAgICAgICAgICAgICAgIHRpdGxlOiBhY3Rpb24udGl0bGUsXG4gICAgICAgICAgICAgICAgZGF0ZTogYWN0aW9uLmRhdGVcbiAgICAgICAgICAgIH1dXG4gICAgICAgIGNhc2UgQy5SRU1PVkVfVE9ETzpcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZS5maWx0ZXIoXG4gICAgICAgICAgICAgICAgYyA9PiBjLmlkICE9PSBhY3Rpb24uaWRcbiAgICAgICAgICAgIClcbiAgICAgICAgZGVmYXVsdCA6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGVcbiAgICB9XG59XG5cbmV4cG9ydCBjb25zdCBwb3B1cCA9IChzdGF0ZSA9IHt9LCBhY3Rpb24pID0+IHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgQy5PUEVOX1BPUFVQOlxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICB2aXNpYmxlOiB0cnVlLFxuICAgICAgICAgICAgfVxuICAgICAgICBjYXNlIEMuQ0xPU0VfUE9QVVA6XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHZpc2libGU6IGZhc2xlXG4gICAgICAgICAgICB9XG4gICAgICAgIGRlZmF1bHQgOlxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlXG4gICAgfVxufSIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24ob3JpZ2luYWxNb2R1bGUpIHtcclxuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xyXG5cdFx0dmFyIG1vZHVsZSA9IE9iamVjdC5jcmVhdGUob3JpZ2luYWxNb2R1bGUpO1xyXG5cdFx0Ly8gbW9kdWxlLnBhcmVudCA9IHVuZGVmaW5lZCBieSBkZWZhdWx0XHJcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImxvYWRlZFwiLCB7XHJcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXHJcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuIG1vZHVsZS5sO1xyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShtb2R1bGUsIFwiaWRcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxyXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiBtb2R1bGUuaTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImV4cG9ydHNcIiwge1xyXG5cdFx0XHRlbnVtZXJhYmxlOiB0cnVlXHJcblx0XHR9KTtcclxuXHRcdG1vZHVsZS53ZWJwYWNrUG9seWZpbGwgPSAxO1xyXG5cdH1cclxuXHRyZXR1cm4gbW9kdWxlO1xyXG59O1xyXG4iLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG4vKipcbiAqIEBwYXJhbSB7Kn0gb2JqZWN0IFRoZSBvYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJuIHtib29sZWFufSBXaGV0aGVyIG9yIG5vdCB0aGUgb2JqZWN0IGlzIGEgRE9NIG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzTm9kZShvYmplY3QpIHtcbiAgdmFyIGRvYyA9IG9iamVjdCA/IG9iamVjdC5vd25lckRvY3VtZW50IHx8IG9iamVjdCA6IGRvY3VtZW50O1xuICB2YXIgZGVmYXVsdFZpZXcgPSBkb2MuZGVmYXVsdFZpZXcgfHwgd2luZG93O1xuICByZXR1cm4gISEob2JqZWN0ICYmICh0eXBlb2YgZGVmYXVsdFZpZXcuTm9kZSA9PT0gJ2Z1bmN0aW9uJyA/IG9iamVjdCBpbnN0YW5jZW9mIGRlZmF1bHRWaWV3Lk5vZGUgOiB0eXBlb2Ygb2JqZWN0ID09PSAnb2JqZWN0JyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVUeXBlID09PSAnbnVtYmVyJyAmJiB0eXBlb2Ygb2JqZWN0Lm5vZGVOYW1lID09PSAnc3RyaW5nJykpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGlzTm9kZTsiLCIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQHR5cGVjaGVja3NcbiAqL1xuXG52YXIgaXNOb2RlID0gcmVxdWlyZSgnLi9pc05vZGUnKTtcblxuLyoqXG4gKiBAcGFyYW0geyp9IG9iamVjdCBUaGUgb2JqZWN0IHRvIGNoZWNrLlxuICogQHJldHVybiB7Ym9vbGVhbn0gV2hldGhlciBvciBub3QgdGhlIG9iamVjdCBpcyBhIERPTSB0ZXh0IG5vZGUuXG4gKi9cbmZ1bmN0aW9uIGlzVGV4dE5vZGUob2JqZWN0KSB7XG4gIHJldHVybiBpc05vZGUob2JqZWN0KSAmJiBvYmplY3Qubm9kZVR5cGUgPT0gMztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc1RleHROb2RlOyIsIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBcbiAqL1xuXG52YXIgaXNUZXh0Tm9kZSA9IHJlcXVpcmUoJy4vaXNUZXh0Tm9kZScpO1xuXG4vKmVzbGludC1kaXNhYmxlIG5vLWJpdHdpc2UgKi9cblxuLyoqXG4gKiBDaGVja3MgaWYgYSBnaXZlbiBET00gbm9kZSBjb250YWlucyBvciBpcyBhbm90aGVyIERPTSBub2RlLlxuICovXG5mdW5jdGlvbiBjb250YWluc05vZGUob3V0ZXJOb2RlLCBpbm5lck5vZGUpIHtcbiAgaWYgKCFvdXRlck5vZGUgfHwgIWlubmVyTm9kZSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChvdXRlck5vZGUgPT09IGlubmVyTm9kZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzVGV4dE5vZGUob3V0ZXJOb2RlKSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfSBlbHNlIGlmIChpc1RleHROb2RlKGlubmVyTm9kZSkpIHtcbiAgICByZXR1cm4gY29udGFpbnNOb2RlKG91dGVyTm9kZSwgaW5uZXJOb2RlLnBhcmVudE5vZGUpO1xuICB9IGVsc2UgaWYgKCdjb250YWlucycgaW4gb3V0ZXJOb2RlKSB7XG4gICAgcmV0dXJuIG91dGVyTm9kZS5jb250YWlucyhpbm5lck5vZGUpO1xuICB9IGVsc2UgaWYgKG91dGVyTm9kZS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbikge1xuICAgIHJldHVybiAhIShvdXRlck5vZGUuY29tcGFyZURvY3VtZW50UG9zaXRpb24oaW5uZXJOb2RlKSAmIDE2KTtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjb250YWluc05vZGU7IiwiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTMtcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAdHlwZWNoZWNrc1xuICogXG4gKi9cblxuLyplc2xpbnQtZGlzYWJsZSBuby1zZWxmLWNvbXBhcmUgKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG52YXIgaGFzT3duUHJvcGVydHkgPSBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O1xuXG4vKipcbiAqIGlubGluZWQgT2JqZWN0LmlzIHBvbHlmaWxsIHRvIGF2b2lkIHJlcXVpcmluZyBjb25zdW1lcnMgc2hpcCB0aGVpciBvd25cbiAqIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0phdmFTY3JpcHQvUmVmZXJlbmNlL0dsb2JhbF9PYmplY3RzL09iamVjdC9pc1xuICovXG5mdW5jdGlvbiBpcyh4LCB5KSB7XG4gIC8vIFNhbWVWYWx1ZSBhbGdvcml0aG1cbiAgaWYgKHggPT09IHkpIHtcbiAgICAvLyBTdGVwcyAxLTUsIDctMTBcbiAgICAvLyBTdGVwcyA2LmItNi5lOiArMCAhPSAtMFxuICAgIC8vIEFkZGVkIHRoZSBub256ZXJvIHkgY2hlY2sgdG8gbWFrZSBGbG93IGhhcHB5LCBidXQgaXQgaXMgcmVkdW5kYW50XG4gICAgcmV0dXJuIHggIT09IDAgfHwgeSAhPT0gMCB8fCAxIC8geCA9PT0gMSAvIHk7XG4gIH0gZWxzZSB7XG4gICAgLy8gU3RlcCA2LmE6IE5hTiA9PSBOYU5cbiAgICByZXR1cm4geCAhPT0geCAmJiB5ICE9PSB5O1xuICB9XG59XG5cbi8qKlxuICogUGVyZm9ybXMgZXF1YWxpdHkgYnkgaXRlcmF0aW5nIHRocm91Z2gga2V5cyBvbiBhbiBvYmplY3QgYW5kIHJldHVybmluZyBmYWxzZVxuICogd2hlbiBhbnkga2V5IGhhcyB2YWx1ZXMgd2hpY2ggYXJlIG5vdCBzdHJpY3RseSBlcXVhbCBiZXR3ZWVuIHRoZSBhcmd1bWVudHMuXG4gKiBSZXR1cm5zIHRydWUgd2hlbiB0aGUgdmFsdWVzIG9mIGFsbCBrZXlzIGFyZSBzdHJpY3RseSBlcXVhbC5cbiAqL1xuZnVuY3Rpb24gc2hhbGxvd0VxdWFsKG9iakEsIG9iakIpIHtcbiAgaWYgKGlzKG9iakEsIG9iakIpKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICBpZiAodHlwZW9mIG9iakEgIT09ICdvYmplY3QnIHx8IG9iakEgPT09IG51bGwgfHwgdHlwZW9mIG9iakIgIT09ICdvYmplY3QnIHx8IG9iakIgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICB2YXIga2V5c0EgPSBPYmplY3Qua2V5cyhvYmpBKTtcbiAgdmFyIGtleXNCID0gT2JqZWN0LmtleXMob2JqQik7XG5cbiAgaWYgKGtleXNBLmxlbmd0aCAhPT0ga2V5c0IubGVuZ3RoKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgLy8gVGVzdCBmb3IgQSdzIGtleXMgZGlmZmVyZW50IGZyb20gQi5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBrZXlzQS5sZW5ndGg7IGkrKykge1xuICAgIGlmICghaGFzT3duUHJvcGVydHkuY2FsbChvYmpCLCBrZXlzQVtpXSkgfHwgIWlzKG9iakFba2V5c0FbaV1dLCBvYmpCW2tleXNBW2ldXSkpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdHJ1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzaGFsbG93RXF1YWw7IiwiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEB0eXBlY2hlY2tzXG4gKi9cblxuLyogZXNsaW50LWRpc2FibGUgZmItd3d3L3R5cGVvZi11bmRlZmluZWQgKi9cblxuLyoqXG4gKiBTYW1lIGFzIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgYnV0IHdyYXBzIGluIGEgdHJ5LWNhdGNoIGJsb2NrLiBJbiBJRSBpdCBpc1xuICogbm90IHNhZmUgdG8gY2FsbCBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGlmIHRoZXJlIGlzIG5vdGhpbmcgZm9jdXNlZC5cbiAqXG4gKiBUaGUgYWN0aXZlRWxlbWVudCB3aWxsIGJlIG51bGwgb25seSBpZiB0aGUgZG9jdW1lbnQgb3IgZG9jdW1lbnQgYm9keSBpcyBub3RcbiAqIHlldCBkZWZpbmVkLlxuICpcbiAqIEBwYXJhbSB7P0RPTURvY3VtZW50fSBkb2MgRGVmYXVsdHMgdG8gY3VycmVudCBkb2N1bWVudC5cbiAqIEByZXR1cm4gez9ET01FbGVtZW50fVxuICovXG5mdW5jdGlvbiBnZXRBY3RpdmVFbGVtZW50KGRvYykgLyo/RE9NRWxlbWVudCove1xuICBkb2MgPSBkb2MgfHwgKHR5cGVvZiBkb2N1bWVudCAhPT0gJ3VuZGVmaW5lZCcgPyBkb2N1bWVudCA6IHVuZGVmaW5lZCk7XG4gIGlmICh0eXBlb2YgZG9jID09PSAndW5kZWZpbmVkJykge1xuICAgIHJldHVybiBudWxsO1xuICB9XG4gIHRyeSB7XG4gICAgcmV0dXJuIGRvYy5hY3RpdmVFbGVtZW50IHx8IGRvYy5ib2R5O1xuICB9IGNhdGNoIChlKSB7XG4gICAgcmV0dXJuIGRvYy5ib2R5O1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gZ2V0QWN0aXZlRWxlbWVudDsiLCIvKipcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbnZhciBjYW5Vc2VET00gPSAhISh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyAmJiB3aW5kb3cuZG9jdW1lbnQgJiYgd2luZG93LmRvY3VtZW50LmNyZWF0ZUVsZW1lbnQpO1xuXG4vKipcbiAqIFNpbXBsZSwgbGlnaHR3ZWlnaHQgbW9kdWxlIGFzc2lzdGluZyB3aXRoIHRoZSBkZXRlY3Rpb24gYW5kIGNvbnRleHQgb2ZcbiAqIFdvcmtlci4gSGVscHMgYXZvaWQgY2lyY3VsYXIgZGVwZW5kZW5jaWVzIGFuZCBhbGxvd3MgY29kZSB0byByZWFzb24gYWJvdXRcbiAqIHdoZXRoZXIgb3Igbm90IHRoZXkgYXJlIGluIGEgV29ya2VyLCBldmVuIGlmIHRoZXkgbmV2ZXIgaW5jbHVkZSB0aGUgbWFpblxuICogYFJlYWN0V29ya2VyYCBkZXBlbmRlbmN5LlxuICovXG52YXIgRXhlY3V0aW9uRW52aXJvbm1lbnQgPSB7XG5cbiAgY2FuVXNlRE9NOiBjYW5Vc2VET00sXG5cbiAgY2FuVXNlV29ya2VyczogdHlwZW9mIFdvcmtlciAhPT0gJ3VuZGVmaW5lZCcsXG5cbiAgY2FuVXNlRXZlbnRMaXN0ZW5lcnM6IGNhblVzZURPTSAmJiAhISh3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciB8fCB3aW5kb3cuYXR0YWNoRXZlbnQpLFxuXG4gIGNhblVzZVZpZXdwb3J0OiBjYW5Vc2VET00gJiYgISF3aW5kb3cuc2NyZWVuLFxuXG4gIGlzSW5Xb3JrZXI6ICFjYW5Vc2VET00gLy8gRm9yIG5vdywgdGhpcyBpcyB0cnVlIC0gbWlnaHQgY2hhbmdlIGluIHRoZSBmdXR1cmUuXG5cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gRXhlY3V0aW9uRW52aXJvbm1lbnQ7IiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi40LjBcbiAqIHJlYWN0LWRvbS5wcm9kdWN0aW9uLm1pbi5qc1xuICpcbiAqIENvcHlyaWdodCAoYykgMjAxMy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICovXG5cbi8qXG4gTW9kZXJuaXpyIDMuMC4wcHJlIChDdXN0b20gQnVpbGQpIHwgTUlUXG4qL1xuJ3VzZSBzdHJpY3QnO3ZhciBhYT1yZXF1aXJlKFwiZmJqcy9saWIvaW52YXJpYW50XCIpLGNhPXJlcXVpcmUoXCJyZWFjdFwiKSxtPXJlcXVpcmUoXCJmYmpzL2xpYi9FeGVjdXRpb25FbnZpcm9ubWVudFwiKSxwPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLHY9cmVxdWlyZShcImZianMvbGliL2VtcHR5RnVuY3Rpb25cIiksZGE9cmVxdWlyZShcImZianMvbGliL2dldEFjdGl2ZUVsZW1lbnRcIiksZWE9cmVxdWlyZShcImZianMvbGliL3NoYWxsb3dFcXVhbFwiKSxmYT1yZXF1aXJlKFwiZmJqcy9saWIvY29udGFpbnNOb2RlXCIpLGhhPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eU9iamVjdFwiKTtcbmZ1bmN0aW9uIEEoYSl7Zm9yKHZhciBiPWFyZ3VtZW50cy5sZW5ndGgtMSxjPVwiaHR0cHM6Ly9yZWFjdGpzLm9yZy9kb2NzL2Vycm9yLWRlY29kZXIuaHRtbD9pbnZhcmlhbnQ9XCIrYSxkPTA7ZDxiO2QrKyljKz1cIiZhcmdzW109XCIrZW5jb2RlVVJJQ29tcG9uZW50KGFyZ3VtZW50c1tkKzFdKTthYSghMSxcIk1pbmlmaWVkIFJlYWN0IGVycm9yICNcIithK1wiOyB2aXNpdCAlcyBmb3IgdGhlIGZ1bGwgbWVzc2FnZSBvciB1c2UgdGhlIG5vbi1taW5pZmllZCBkZXYgZW52aXJvbm1lbnQgZm9yIGZ1bGwgZXJyb3JzIGFuZCBhZGRpdGlvbmFsIGhlbHBmdWwgd2FybmluZ3MuIFwiLGMpfWNhP3ZvaWQgMDpBKFwiMjI3XCIpO1xuZnVuY3Rpb24gaWEoYSxiLGMsZCxlLGYsZyxoLGspe3RoaXMuX2hhc0NhdWdodEVycm9yPSExO3RoaXMuX2NhdWdodEVycm9yPW51bGw7dmFyIG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDMpO3RyeXtiLmFwcGx5KGMsbil9Y2F0Y2gocil7dGhpcy5fY2F1Z2h0RXJyb3I9cix0aGlzLl9oYXNDYXVnaHRFcnJvcj0hMH19XG52YXIgQj17X2NhdWdodEVycm9yOm51bGwsX2hhc0NhdWdodEVycm9yOiExLF9yZXRocm93RXJyb3I6bnVsbCxfaGFzUmV0aHJvd0Vycm9yOiExLGludm9rZUd1YXJkZWRDYWxsYmFjazpmdW5jdGlvbihhLGIsYyxkLGUsZixnLGgsayl7aWEuYXBwbHkoQixhcmd1bWVudHMpfSxpbnZva2VHdWFyZGVkQ2FsbGJhY2tBbmRDYXRjaEZpcnN0RXJyb3I6ZnVuY3Rpb24oYSxiLGMsZCxlLGYsZyxoLGspe0IuaW52b2tlR3VhcmRlZENhbGxiYWNrLmFwcGx5KHRoaXMsYXJndW1lbnRzKTtpZihCLmhhc0NhdWdodEVycm9yKCkpe3ZhciBuPUIuY2xlYXJDYXVnaHRFcnJvcigpO0IuX2hhc1JldGhyb3dFcnJvcnx8KEIuX2hhc1JldGhyb3dFcnJvcj0hMCxCLl9yZXRocm93RXJyb3I9bil9fSxyZXRocm93Q2F1Z2h0RXJyb3I6ZnVuY3Rpb24oKXtyZXR1cm4ga2EuYXBwbHkoQixhcmd1bWVudHMpfSxoYXNDYXVnaHRFcnJvcjpmdW5jdGlvbigpe3JldHVybiBCLl9oYXNDYXVnaHRFcnJvcn0sY2xlYXJDYXVnaHRFcnJvcjpmdW5jdGlvbigpe2lmKEIuX2hhc0NhdWdodEVycm9yKXt2YXIgYT1cbkIuX2NhdWdodEVycm9yO0IuX2NhdWdodEVycm9yPW51bGw7Qi5faGFzQ2F1Z2h0RXJyb3I9ITE7cmV0dXJuIGF9QShcIjE5OFwiKX19O2Z1bmN0aW9uIGthKCl7aWYoQi5faGFzUmV0aHJvd0Vycm9yKXt2YXIgYT1CLl9yZXRocm93RXJyb3I7Qi5fcmV0aHJvd0Vycm9yPW51bGw7Qi5faGFzUmV0aHJvd0Vycm9yPSExO3Rocm93IGE7fX12YXIgbGE9bnVsbCxtYT17fTtcbmZ1bmN0aW9uIG5hKCl7aWYobGEpZm9yKHZhciBhIGluIG1hKXt2YXIgYj1tYVthXSxjPWxhLmluZGV4T2YoYSk7LTE8Yz92b2lkIDA6QShcIjk2XCIsYSk7aWYoIW9hW2NdKXtiLmV4dHJhY3RFdmVudHM/dm9pZCAwOkEoXCI5N1wiLGEpO29hW2NdPWI7Yz1iLmV2ZW50VHlwZXM7Zm9yKHZhciBkIGluIGMpe3ZhciBlPXZvaWQgMDt2YXIgZj1jW2RdLGc9YixoPWQ7cGEuaGFzT3duUHJvcGVydHkoaCk/QShcIjk5XCIsaCk6dm9pZCAwO3BhW2hdPWY7dmFyIGs9Zi5waGFzZWRSZWdpc3RyYXRpb25OYW1lcztpZihrKXtmb3IoZSBpbiBrKWsuaGFzT3duUHJvcGVydHkoZSkmJnFhKGtbZV0sZyxoKTtlPSEwfWVsc2UgZi5yZWdpc3RyYXRpb25OYW1lPyhxYShmLnJlZ2lzdHJhdGlvbk5hbWUsZyxoKSxlPSEwKTplPSExO2U/dm9pZCAwOkEoXCI5OFwiLGQsYSl9fX19XG5mdW5jdGlvbiBxYShhLGIsYyl7cmFbYV0/QShcIjEwMFwiLGEpOnZvaWQgMDtyYVthXT1iO3NhW2FdPWIuZXZlbnRUeXBlc1tjXS5kZXBlbmRlbmNpZXN9dmFyIG9hPVtdLHBhPXt9LHJhPXt9LHNhPXt9O2Z1bmN0aW9uIHRhKGEpe2xhP0EoXCIxMDFcIik6dm9pZCAwO2xhPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGEpO25hKCl9ZnVuY3Rpb24gdWEoYSl7dmFyIGI9ITEsYztmb3IoYyBpbiBhKWlmKGEuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPWFbY107bWEuaGFzT3duUHJvcGVydHkoYykmJm1hW2NdPT09ZHx8KG1hW2NdP0EoXCIxMDJcIixjKTp2b2lkIDAsbWFbY109ZCxiPSEwKX1iJiZuYSgpfVxudmFyIHZhPXtwbHVnaW5zOm9hLGV2ZW50TmFtZURpc3BhdGNoQ29uZmlnczpwYSxyZWdpc3RyYXRpb25OYW1lTW9kdWxlczpyYSxyZWdpc3RyYXRpb25OYW1lRGVwZW5kZW5jaWVzOnNhLHBvc3NpYmxlUmVnaXN0cmF0aW9uTmFtZXM6bnVsbCxpbmplY3RFdmVudFBsdWdpbk9yZGVyOnRhLGluamVjdEV2ZW50UGx1Z2luc0J5TmFtZTp1YX0sd2E9bnVsbCx4YT1udWxsLHlhPW51bGw7ZnVuY3Rpb24gemEoYSxiLGMsZCl7Yj1hLnR5cGV8fFwidW5rbm93bi1ldmVudFwiO2EuY3VycmVudFRhcmdldD15YShkKTtCLmludm9rZUd1YXJkZWRDYWxsYmFja0FuZENhdGNoRmlyc3RFcnJvcihiLGMsdm9pZCAwLGEpO2EuY3VycmVudFRhcmdldD1udWxsfVxuZnVuY3Rpb24gQWEoYSxiKXtudWxsPT1iP0EoXCIzMFwiKTp2b2lkIDA7aWYobnVsbD09YSlyZXR1cm4gYjtpZihBcnJheS5pc0FycmF5KGEpKXtpZihBcnJheS5pc0FycmF5KGIpKXJldHVybiBhLnB1c2guYXBwbHkoYSxiKSxhO2EucHVzaChiKTtyZXR1cm4gYX1yZXR1cm4gQXJyYXkuaXNBcnJheShiKT9bYV0uY29uY2F0KGIpOlthLGJdfWZ1bmN0aW9uIEJhKGEsYixjKXtBcnJheS5pc0FycmF5KGEpP2EuZm9yRWFjaChiLGMpOmEmJmIuY2FsbChjLGEpfXZhciBDYT1udWxsO1xuZnVuY3Rpb24gRGEoYSxiKXtpZihhKXt2YXIgYz1hLl9kaXNwYXRjaExpc3RlbmVycyxkPWEuX2Rpc3BhdGNoSW5zdGFuY2VzO2lmKEFycmF5LmlzQXJyYXkoYykpZm9yKHZhciBlPTA7ZTxjLmxlbmd0aCYmIWEuaXNQcm9wYWdhdGlvblN0b3BwZWQoKTtlKyspemEoYSxiLGNbZV0sZFtlXSk7ZWxzZSBjJiZ6YShhLGIsYyxkKTthLl9kaXNwYXRjaExpc3RlbmVycz1udWxsO2EuX2Rpc3BhdGNoSW5zdGFuY2VzPW51bGw7YS5pc1BlcnNpc3RlbnQoKXx8YS5jb25zdHJ1Y3Rvci5yZWxlYXNlKGEpfX1mdW5jdGlvbiBFYShhKXtyZXR1cm4gRGEoYSwhMCl9ZnVuY3Rpb24gRmEoYSl7cmV0dXJuIERhKGEsITEpfXZhciBHYT17aW5qZWN0RXZlbnRQbHVnaW5PcmRlcjp0YSxpbmplY3RFdmVudFBsdWdpbnNCeU5hbWU6dWF9O1xuZnVuY3Rpb24gSGEoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZTtpZighYylyZXR1cm4gbnVsbDt2YXIgZD13YShjKTtpZighZClyZXR1cm4gbnVsbDtjPWRbYl07YTpzd2l0Y2goYil7Y2FzZSBcIm9uQ2xpY2tcIjpjYXNlIFwib25DbGlja0NhcHR1cmVcIjpjYXNlIFwib25Eb3VibGVDbGlja1wiOmNhc2UgXCJvbkRvdWJsZUNsaWNrQ2FwdHVyZVwiOmNhc2UgXCJvbk1vdXNlRG93blwiOmNhc2UgXCJvbk1vdXNlRG93bkNhcHR1cmVcIjpjYXNlIFwib25Nb3VzZU1vdmVcIjpjYXNlIFwib25Nb3VzZU1vdmVDYXB0dXJlXCI6Y2FzZSBcIm9uTW91c2VVcFwiOmNhc2UgXCJvbk1vdXNlVXBDYXB0dXJlXCI6KGQ9IWQuZGlzYWJsZWQpfHwoYT1hLnR5cGUsZD0hKFwiYnV0dG9uXCI9PT1hfHxcImlucHV0XCI9PT1hfHxcInNlbGVjdFwiPT09YXx8XCJ0ZXh0YXJlYVwiPT09YSkpO2E9IWQ7YnJlYWsgYTtkZWZhdWx0OmE9ITF9aWYoYSlyZXR1cm4gbnVsbDtjJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgYz9BKFwiMjMxXCIsYix0eXBlb2YgYyk6dm9pZCAwO1xucmV0dXJuIGN9ZnVuY3Rpb24gSWEoYSxiKXtudWxsIT09YSYmKENhPUFhKENhLGEpKTthPUNhO0NhPW51bGw7YSYmKGI/QmEoYSxFYSk6QmEoYSxGYSksQ2E/QShcIjk1XCIpOnZvaWQgMCxCLnJldGhyb3dDYXVnaHRFcnJvcigpKX1mdW5jdGlvbiBKYShhLGIsYyxkKXtmb3IodmFyIGU9bnVsbCxmPTA7ZjxvYS5sZW5ndGg7ZisrKXt2YXIgZz1vYVtmXTtnJiYoZz1nLmV4dHJhY3RFdmVudHMoYSxiLGMsZCkpJiYoZT1BYShlLGcpKX1JYShlLCExKX12YXIgS2E9e2luamVjdGlvbjpHYSxnZXRMaXN0ZW5lcjpIYSxydW5FdmVudHNJbkJhdGNoOklhLHJ1bkV4dHJhY3RlZEV2ZW50c0luQmF0Y2g6SmF9LExhPU1hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpLEM9XCJfX3JlYWN0SW50ZXJuYWxJbnN0YW5jZSRcIitMYSxNYT1cIl9fcmVhY3RFdmVudEhhbmRsZXJzJFwiK0xhO1xuZnVuY3Rpb24gTmEoYSl7aWYoYVtDXSlyZXR1cm4gYVtDXTtmb3IoOyFhW0NdOylpZihhLnBhcmVudE5vZGUpYT1hLnBhcmVudE5vZGU7ZWxzZSByZXR1cm4gbnVsbDthPWFbQ107cmV0dXJuIDU9PT1hLnRhZ3x8Nj09PWEudGFnP2E6bnVsbH1mdW5jdGlvbiBPYShhKXtpZig1PT09YS50YWd8fDY9PT1hLnRhZylyZXR1cm4gYS5zdGF0ZU5vZGU7QShcIjMzXCIpfWZ1bmN0aW9uIFBhKGEpe3JldHVybiBhW01hXXx8bnVsbH12YXIgUWE9e3ByZWNhY2hlRmliZXJOb2RlOmZ1bmN0aW9uKGEsYil7YltDXT1hfSxnZXRDbG9zZXN0SW5zdGFuY2VGcm9tTm9kZTpOYSxnZXRJbnN0YW5jZUZyb21Ob2RlOmZ1bmN0aW9uKGEpe2E9YVtDXTtyZXR1cm4hYXx8NSE9PWEudGFnJiY2IT09YS50YWc/bnVsbDphfSxnZXROb2RlRnJvbUluc3RhbmNlOk9hLGdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU6UGEsdXBkYXRlRmliZXJQcm9wczpmdW5jdGlvbihhLGIpe2FbTWFdPWJ9fTtcbmZ1bmN0aW9uIEYoYSl7ZG8gYT1hLnJldHVybjt3aGlsZShhJiY1IT09YS50YWcpO3JldHVybiBhP2E6bnVsbH1mdW5jdGlvbiBSYShhLGIsYyl7Zm9yKHZhciBkPVtdO2E7KWQucHVzaChhKSxhPUYoYSk7Zm9yKGE9ZC5sZW5ndGg7MDxhLS07KWIoZFthXSxcImNhcHR1cmVkXCIsYyk7Zm9yKGE9MDthPGQubGVuZ3RoO2ErKyliKGRbYV0sXCJidWJibGVkXCIsYyl9ZnVuY3Rpb24gU2EoYSxiLGMpe2lmKGI9SGEoYSxjLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzW2JdKSljLl9kaXNwYXRjaExpc3RlbmVycz1BYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1BYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKX1mdW5jdGlvbiBUYShhKXthJiZhLmRpc3BhdGNoQ29uZmlnLnBoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzJiZSYShhLl90YXJnZXRJbnN0LFNhLGEpfVxuZnVuY3Rpb24gVWEoYSl7aWYoYSYmYS5kaXNwYXRjaENvbmZpZy5waGFzZWRSZWdpc3RyYXRpb25OYW1lcyl7dmFyIGI9YS5fdGFyZ2V0SW5zdDtiPWI/RihiKTpudWxsO1JhKGIsU2EsYSl9fWZ1bmN0aW9uIFZhKGEsYixjKXthJiZjJiZjLmRpc3BhdGNoQ29uZmlnLnJlZ2lzdHJhdGlvbk5hbWUmJihiPUhhKGEsYy5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lKSkmJihjLl9kaXNwYXRjaExpc3RlbmVycz1BYShjLl9kaXNwYXRjaExpc3RlbmVycyxiKSxjLl9kaXNwYXRjaEluc3RhbmNlcz1BYShjLl9kaXNwYXRjaEluc3RhbmNlcyxhKSl9ZnVuY3Rpb24gWGEoYSl7YSYmYS5kaXNwYXRjaENvbmZpZy5yZWdpc3RyYXRpb25OYW1lJiZWYShhLl90YXJnZXRJbnN0LG51bGwsYSl9ZnVuY3Rpb24gWWEoYSl7QmEoYSxUYSl9XG5mdW5jdGlvbiBaYShhLGIsYyxkKXtpZihjJiZkKWE6e3ZhciBlPWM7Zm9yKHZhciBmPWQsZz0wLGg9ZTtoO2g9RihoKSlnKys7aD0wO2Zvcih2YXIgaz1mO2s7az1GKGspKWgrKztmb3IoOzA8Zy1oOyllPUYoZSksZy0tO2Zvcig7MDxoLWc7KWY9RihmKSxoLS07Zm9yKDtnLS07KXtpZihlPT09Znx8ZT09PWYuYWx0ZXJuYXRlKWJyZWFrIGE7ZT1GKGUpO2Y9RihmKX1lPW51bGx9ZWxzZSBlPW51bGw7Zj1lO2ZvcihlPVtdO2MmJmMhPT1mOyl7Zz1jLmFsdGVybmF0ZTtpZihudWxsIT09ZyYmZz09PWYpYnJlYWs7ZS5wdXNoKGMpO2M9RihjKX1mb3IoYz1bXTtkJiZkIT09Zjspe2c9ZC5hbHRlcm5hdGU7aWYobnVsbCE9PWcmJmc9PT1mKWJyZWFrO2MucHVzaChkKTtkPUYoZCl9Zm9yKGQ9MDtkPGUubGVuZ3RoO2QrKylWYShlW2RdLFwiYnViYmxlZFwiLGEpO2ZvcihhPWMubGVuZ3RoOzA8YS0tOylWYShjW2FdLFwiY2FwdHVyZWRcIixiKX1cbnZhciAkYT17YWNjdW11bGF0ZVR3b1BoYXNlRGlzcGF0Y2hlczpZYSxhY2N1bXVsYXRlVHdvUGhhc2VEaXNwYXRjaGVzU2tpcFRhcmdldDpmdW5jdGlvbihhKXtCYShhLFVhKX0sYWNjdW11bGF0ZUVudGVyTGVhdmVEaXNwYXRjaGVzOlphLGFjY3VtdWxhdGVEaXJlY3REaXNwYXRjaGVzOmZ1bmN0aW9uKGEpe0JhKGEsWGEpfX07ZnVuY3Rpb24gYWIoYSxiKXt2YXIgYz17fTtjW2EudG9Mb3dlckNhc2UoKV09Yi50b0xvd2VyQ2FzZSgpO2NbXCJXZWJraXRcIithXT1cIndlYmtpdFwiK2I7Y1tcIk1velwiK2FdPVwibW96XCIrYjtjW1wibXNcIithXT1cIk1TXCIrYjtjW1wiT1wiK2FdPVwib1wiK2IudG9Mb3dlckNhc2UoKTtyZXR1cm4gY31cbnZhciBiYj17YW5pbWF0aW9uZW5kOmFiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25FbmRcIiksYW5pbWF0aW9uaXRlcmF0aW9uOmFiKFwiQW5pbWF0aW9uXCIsXCJBbmltYXRpb25JdGVyYXRpb25cIiksYW5pbWF0aW9uc3RhcnQ6YWIoXCJBbmltYXRpb25cIixcIkFuaW1hdGlvblN0YXJ0XCIpLHRyYW5zaXRpb25lbmQ6YWIoXCJUcmFuc2l0aW9uXCIsXCJUcmFuc2l0aW9uRW5kXCIpfSxjYj17fSxkYj17fTttLmNhblVzZURPTSYmKGRiPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIikuc3R5bGUsXCJBbmltYXRpb25FdmVudFwiaW4gd2luZG93fHwoZGVsZXRlIGJiLmFuaW1hdGlvbmVuZC5hbmltYXRpb24sZGVsZXRlIGJiLmFuaW1hdGlvbml0ZXJhdGlvbi5hbmltYXRpb24sZGVsZXRlIGJiLmFuaW1hdGlvbnN0YXJ0LmFuaW1hdGlvbiksXCJUcmFuc2l0aW9uRXZlbnRcImluIHdpbmRvd3x8ZGVsZXRlIGJiLnRyYW5zaXRpb25lbmQudHJhbnNpdGlvbik7XG5mdW5jdGlvbiBlYihhKXtpZihjYlthXSlyZXR1cm4gY2JbYV07aWYoIWJiW2FdKXJldHVybiBhO3ZhciBiPWJiW2FdLGM7Zm9yKGMgaW4gYilpZihiLmhhc093blByb3BlcnR5KGMpJiZjIGluIGRiKXJldHVybiBjYlthXT1iW2NdO3JldHVybiBhfXZhciBmYj1lYihcImFuaW1hdGlvbmVuZFwiKSxnYj1lYihcImFuaW1hdGlvbml0ZXJhdGlvblwiKSxoYj1lYihcImFuaW1hdGlvbnN0YXJ0XCIpLGliPWViKFwidHJhbnNpdGlvbmVuZFwiKSxqYj1cImFib3J0IGNhbnBsYXkgY2FucGxheXRocm91Z2ggZHVyYXRpb25jaGFuZ2UgZW1wdGllZCBlbmNyeXB0ZWQgZW5kZWQgZXJyb3IgbG9hZGVkZGF0YSBsb2FkZWRtZXRhZGF0YSBsb2Fkc3RhcnQgcGF1c2UgcGxheSBwbGF5aW5nIHByb2dyZXNzIHJhdGVjaGFuZ2Ugc2Vla2VkIHNlZWtpbmcgc3RhbGxlZCBzdXNwZW5kIHRpbWV1cGRhdGUgdm9sdW1lY2hhbmdlIHdhaXRpbmdcIi5zcGxpdChcIiBcIiksa2I9bnVsbDtcbmZ1bmN0aW9uIGxiKCl7IWtiJiZtLmNhblVzZURPTSYmKGtiPVwidGV4dENvbnRlbnRcImluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudD9cInRleHRDb250ZW50XCI6XCJpbm5lclRleHRcIik7cmV0dXJuIGtifXZhciBHPXtfcm9vdDpudWxsLF9zdGFydFRleHQ6bnVsbCxfZmFsbGJhY2tUZXh0Om51bGx9O2Z1bmN0aW9uIG1iKCl7aWYoRy5fZmFsbGJhY2tUZXh0KXJldHVybiBHLl9mYWxsYmFja1RleHQ7dmFyIGEsYj1HLl9zdGFydFRleHQsYz1iLmxlbmd0aCxkLGU9bmIoKSxmPWUubGVuZ3RoO2ZvcihhPTA7YTxjJiZiW2FdPT09ZVthXTthKyspO3ZhciBnPWMtYTtmb3IoZD0xO2Q8PWcmJmJbYy1kXT09PWVbZi1kXTtkKyspO0cuX2ZhbGxiYWNrVGV4dD1lLnNsaWNlKGEsMTxkPzEtZDp2b2lkIDApO3JldHVybiBHLl9mYWxsYmFja1RleHR9ZnVuY3Rpb24gbmIoKXtyZXR1cm5cInZhbHVlXCJpbiBHLl9yb290P0cuX3Jvb3QudmFsdWU6Ry5fcm9vdFtsYigpXX1cbnZhciBvYj1cImRpc3BhdGNoQ29uZmlnIF90YXJnZXRJbnN0IG5hdGl2ZUV2ZW50IGlzRGVmYXVsdFByZXZlbnRlZCBpc1Byb3BhZ2F0aW9uU3RvcHBlZCBfZGlzcGF0Y2hMaXN0ZW5lcnMgX2Rpc3BhdGNoSW5zdGFuY2VzXCIuc3BsaXQoXCIgXCIpLHBiPXt0eXBlOm51bGwsdGFyZ2V0Om51bGwsY3VycmVudFRhcmdldDp2LnRoYXRSZXR1cm5zTnVsbCxldmVudFBoYXNlOm51bGwsYnViYmxlczpudWxsLGNhbmNlbGFibGU6bnVsbCx0aW1lU3RhbXA6ZnVuY3Rpb24oYSl7cmV0dXJuIGEudGltZVN0YW1wfHxEYXRlLm5vdygpfSxkZWZhdWx0UHJldmVudGVkOm51bGwsaXNUcnVzdGVkOm51bGx9O1xuZnVuY3Rpb24gSChhLGIsYyxkKXt0aGlzLmRpc3BhdGNoQ29uZmlnPWE7dGhpcy5fdGFyZ2V0SW5zdD1iO3RoaXMubmF0aXZlRXZlbnQ9YzthPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlO2Zvcih2YXIgZSBpbiBhKWEuaGFzT3duUHJvcGVydHkoZSkmJigoYj1hW2VdKT90aGlzW2VdPWIoYyk6XCJ0YXJnZXRcIj09PWU/dGhpcy50YXJnZXQ9ZDp0aGlzW2VdPWNbZV0pO3RoaXMuaXNEZWZhdWx0UHJldmVudGVkPShudWxsIT1jLmRlZmF1bHRQcmV2ZW50ZWQ/Yy5kZWZhdWx0UHJldmVudGVkOiExPT09Yy5yZXR1cm5WYWx1ZSk/di50aGF0UmV0dXJuc1RydWU6di50aGF0UmV0dXJuc0ZhbHNlO3RoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQ9di50aGF0UmV0dXJuc0ZhbHNlO3JldHVybiB0aGlzfVxucChILnByb3RvdHlwZSx7cHJldmVudERlZmF1bHQ6ZnVuY3Rpb24oKXt0aGlzLmRlZmF1bHRQcmV2ZW50ZWQ9ITA7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5wcmV2ZW50RGVmYXVsdD9hLnByZXZlbnREZWZhdWx0KCk6XCJ1bmtub3duXCIhPT10eXBlb2YgYS5yZXR1cm5WYWx1ZSYmKGEucmV0dXJuVmFsdWU9ITEpLHRoaXMuaXNEZWZhdWx0UHJldmVudGVkPXYudGhhdFJldHVybnNUcnVlKX0sc3RvcFByb3BhZ2F0aW9uOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5uYXRpdmVFdmVudDthJiYoYS5zdG9wUHJvcGFnYXRpb24/YS5zdG9wUHJvcGFnYXRpb24oKTpcInVua25vd25cIiE9PXR5cGVvZiBhLmNhbmNlbEJ1YmJsZSYmKGEuY2FuY2VsQnViYmxlPSEwKSx0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkPXYudGhhdFJldHVybnNUcnVlKX0scGVyc2lzdDpmdW5jdGlvbigpe3RoaXMuaXNQZXJzaXN0ZW50PXYudGhhdFJldHVybnNUcnVlfSxpc1BlcnNpc3RlbnQ6di50aGF0UmV0dXJuc0ZhbHNlLFxuZGVzdHJ1Y3RvcjpmdW5jdGlvbigpe3ZhciBhPXRoaXMuY29uc3RydWN0b3IuSW50ZXJmYWNlLGI7Zm9yKGIgaW4gYSl0aGlzW2JdPW51bGw7Zm9yKGE9MDthPG9iLmxlbmd0aDthKyspdGhpc1tvYlthXV09bnVsbH19KTtILkludGVyZmFjZT1wYjtILmV4dGVuZD1mdW5jdGlvbihhKXtmdW5jdGlvbiBiKCl7fWZ1bmN0aW9uIGMoKXtyZXR1cm4gZC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9dmFyIGQ9dGhpcztiLnByb3RvdHlwZT1kLnByb3RvdHlwZTt2YXIgZT1uZXcgYjtwKGUsYy5wcm90b3R5cGUpO2MucHJvdG90eXBlPWU7Yy5wcm90b3R5cGUuY29uc3RydWN0b3I9YztjLkludGVyZmFjZT1wKHt9LGQuSW50ZXJmYWNlLGEpO2MuZXh0ZW5kPWQuZXh0ZW5kO3FiKGMpO3JldHVybiBjfTtxYihIKTtcbmZ1bmN0aW9uIHJiKGEsYixjLGQpe2lmKHRoaXMuZXZlbnRQb29sLmxlbmd0aCl7dmFyIGU9dGhpcy5ldmVudFBvb2wucG9wKCk7dGhpcy5jYWxsKGUsYSxiLGMsZCk7cmV0dXJuIGV9cmV0dXJuIG5ldyB0aGlzKGEsYixjLGQpfWZ1bmN0aW9uIHNiKGEpe2EgaW5zdGFuY2VvZiB0aGlzP3ZvaWQgMDpBKFwiMjIzXCIpO2EuZGVzdHJ1Y3RvcigpOzEwPnRoaXMuZXZlbnRQb29sLmxlbmd0aCYmdGhpcy5ldmVudFBvb2wucHVzaChhKX1mdW5jdGlvbiBxYihhKXthLmV2ZW50UG9vbD1bXTthLmdldFBvb2xlZD1yYjthLnJlbGVhc2U9c2J9dmFyIHRiPUguZXh0ZW5kKHtkYXRhOm51bGx9KSx1Yj1ILmV4dGVuZCh7ZGF0YTpudWxsfSksdmI9WzksMTMsMjcsMzJdLHdiPW0uY2FuVXNlRE9NJiZcIkNvbXBvc2l0aW9uRXZlbnRcImluIHdpbmRvdyx4Yj1udWxsO20uY2FuVXNlRE9NJiZcImRvY3VtZW50TW9kZVwiaW4gZG9jdW1lbnQmJih4Yj1kb2N1bWVudC5kb2N1bWVudE1vZGUpO1xudmFyIHliPW0uY2FuVXNlRE9NJiZcIlRleHRFdmVudFwiaW4gd2luZG93JiYheGIsemI9bS5jYW5Vc2VET00mJighd2J8fHhiJiY4PHhiJiYxMT49eGIpLEFiPVN0cmluZy5mcm9tQ2hhckNvZGUoMzIpLEJiPXtiZWZvcmVJbnB1dDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkJlZm9yZUlucHV0XCIsY2FwdHVyZWQ6XCJvbkJlZm9yZUlucHV0Q2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6W1wiY29tcG9zaXRpb25lbmRcIixcImtleXByZXNzXCIsXCJ0ZXh0SW5wdXRcIixcInBhc3RlXCJdfSxjb21wb3NpdGlvbkVuZDp7cGhhc2VkUmVnaXN0cmF0aW9uTmFtZXM6e2J1YmJsZWQ6XCJvbkNvbXBvc2l0aW9uRW5kXCIsY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uRW5kQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNvbXBvc2l0aW9uZW5kIGtleWRvd24ga2V5cHJlc3Mga2V5dXAgbW91c2Vkb3duXCIuc3BsaXQoXCIgXCIpfSxjb21wb3NpdGlvblN0YXJ0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uQ29tcG9zaXRpb25TdGFydFwiLFxuY2FwdHVyZWQ6XCJvbkNvbXBvc2l0aW9uU3RhcnRDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpcImJsdXIgY29tcG9zaXRpb25zdGFydCBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX0sY29tcG9zaXRpb25VcGRhdGU6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25Db21wb3NpdGlvblVwZGF0ZVwiLGNhcHR1cmVkOlwib25Db21wb3NpdGlvblVwZGF0ZUNhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb21wb3NpdGlvbnVwZGF0ZSBrZXlkb3duIGtleXByZXNzIGtleXVwIG1vdXNlZG93blwiLnNwbGl0KFwiIFwiKX19LENiPSExO1xuZnVuY3Rpb24gRGIoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImtleXVwXCI6cmV0dXJuLTEhPT12Yi5pbmRleE9mKGIua2V5Q29kZSk7Y2FzZSBcImtleWRvd25cIjpyZXR1cm4gMjI5IT09Yi5rZXlDb2RlO2Nhc2UgXCJrZXlwcmVzc1wiOmNhc2UgXCJtb3VzZWRvd25cIjpjYXNlIFwiYmx1clwiOnJldHVybiEwO2RlZmF1bHQ6cmV0dXJuITF9fWZ1bmN0aW9uIEViKGEpe2E9YS5kZXRhaWw7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZcImRhdGFcImluIGE/YS5kYXRhOm51bGx9dmFyIEZiPSExO2Z1bmN0aW9uIEdiKGEsYil7c3dpdGNoKGEpe2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOnJldHVybiBFYihiKTtjYXNlIFwia2V5cHJlc3NcIjppZigzMiE9PWIud2hpY2gpcmV0dXJuIG51bGw7Q2I9ITA7cmV0dXJuIEFiO2Nhc2UgXCJ0ZXh0SW5wdXRcIjpyZXR1cm4gYT1iLmRhdGEsYT09PUFiJiZDYj9udWxsOmE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG5mdW5jdGlvbiBIYihhLGIpe2lmKEZiKXJldHVyblwiY29tcG9zaXRpb25lbmRcIj09PWF8fCF3YiYmRGIoYSxiKT8oYT1tYigpLEcuX3Jvb3Q9bnVsbCxHLl9zdGFydFRleHQ9bnVsbCxHLl9mYWxsYmFja1RleHQ9bnVsbCxGYj0hMSxhKTpudWxsO3N3aXRjaChhKXtjYXNlIFwicGFzdGVcIjpyZXR1cm4gbnVsbDtjYXNlIFwia2V5cHJlc3NcIjppZighKGIuY3RybEtleXx8Yi5hbHRLZXl8fGIubWV0YUtleSl8fGIuY3RybEtleSYmYi5hbHRLZXkpe2lmKGIuY2hhciYmMTxiLmNoYXIubGVuZ3RoKXJldHVybiBiLmNoYXI7aWYoYi53aGljaClyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZShiLndoaWNoKX1yZXR1cm4gbnVsbDtjYXNlIFwiY29tcG9zaXRpb25lbmRcIjpyZXR1cm4gemI/bnVsbDpiLmRhdGE7ZGVmYXVsdDpyZXR1cm4gbnVsbH19XG52YXIgSWI9e2V2ZW50VHlwZXM6QmIsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT12b2lkIDA7dmFyIGY9dm9pZCAwO2lmKHdiKWI6e3N3aXRjaChhKXtjYXNlIFwiY29tcG9zaXRpb25zdGFydFwiOmU9QmIuY29tcG9zaXRpb25TdGFydDticmVhayBiO2Nhc2UgXCJjb21wb3NpdGlvbmVuZFwiOmU9QmIuY29tcG9zaXRpb25FbmQ7YnJlYWsgYjtjYXNlIFwiY29tcG9zaXRpb251cGRhdGVcIjplPUJiLmNvbXBvc2l0aW9uVXBkYXRlO2JyZWFrIGJ9ZT12b2lkIDB9ZWxzZSBGYj9EYihhLGMpJiYoZT1CYi5jb21wb3NpdGlvbkVuZCk6XCJrZXlkb3duXCI9PT1hJiYyMjk9PT1jLmtleUNvZGUmJihlPUJiLmNvbXBvc2l0aW9uU3RhcnQpO2U/KHpiJiYoRmJ8fGUhPT1CYi5jb21wb3NpdGlvblN0YXJ0P2U9PT1CYi5jb21wb3NpdGlvbkVuZCYmRmImJihmPW1iKCkpOihHLl9yb290PWQsRy5fc3RhcnRUZXh0PW5iKCksRmI9ITApKSxlPXRiLmdldFBvb2xlZChlLGIsYyxkKSxmP2UuZGF0YT1cbmY6KGY9RWIoYyksbnVsbCE9PWYmJihlLmRhdGE9ZikpLFlhKGUpLGY9ZSk6Zj1udWxsOyhhPXliP0diKGEsYyk6SGIoYSxjKSk/KGI9dWIuZ2V0UG9vbGVkKEJiLmJlZm9yZUlucHV0LGIsYyxkKSxiLmRhdGE9YSxZYShiKSk6Yj1udWxsO3JldHVybiBudWxsPT09Zj9iOm51bGw9PT1iP2Y6W2YsYl19fSxKYj1udWxsLEtiPXtpbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50OmZ1bmN0aW9uKGEpe0piPWF9fSxMYj1udWxsLE1iPW51bGw7ZnVuY3Rpb24gTmIoYSl7aWYoYT14YShhKSl7SmImJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBKYi5yZXN0b3JlQ29udHJvbGxlZFN0YXRlP3ZvaWQgMDpBKFwiMTk0XCIpO3ZhciBiPXdhKGEuc3RhdGVOb2RlKTtKYi5yZXN0b3JlQ29udHJvbGxlZFN0YXRlKGEuc3RhdGVOb2RlLGEudHlwZSxiKX19ZnVuY3Rpb24gT2IoYSl7TGI/TWI/TWIucHVzaChhKTpNYj1bYV06TGI9YX1cbmZ1bmN0aW9uIFBiKCl7cmV0dXJuIG51bGwhPT1MYnx8bnVsbCE9PU1ifWZ1bmN0aW9uIFFiKCl7aWYoTGIpe3ZhciBhPUxiLGI9TWI7TWI9TGI9bnVsbDtOYihhKTtpZihiKWZvcihhPTA7YTxiLmxlbmd0aDthKyspTmIoYlthXSl9fXZhciBSYj17aW5qZWN0aW9uOktiLGVucXVldWVTdGF0ZVJlc3RvcmU6T2IsbmVlZHNTdGF0ZVJlc3RvcmU6UGIscmVzdG9yZVN0YXRlSWZOZWVkZWQ6UWJ9O2Z1bmN0aW9uIFNiKGEsYil7cmV0dXJuIGEoYil9ZnVuY3Rpb24gVGIoYSxiLGMpe3JldHVybiBhKGIsYyl9ZnVuY3Rpb24gVWIoKXt9dmFyIFZiPSExO2Z1bmN0aW9uIFdiKGEsYil7aWYoVmIpcmV0dXJuIGEoYik7VmI9ITA7dHJ5e3JldHVybiBTYihhLGIpfWZpbmFsbHl7VmI9ITEsUGIoKSYmKFViKCksUWIoKSl9fVxudmFyIFhiPXtjb2xvcjohMCxkYXRlOiEwLGRhdGV0aW1lOiEwLFwiZGF0ZXRpbWUtbG9jYWxcIjohMCxlbWFpbDohMCxtb250aDohMCxudW1iZXI6ITAscGFzc3dvcmQ6ITAscmFuZ2U6ITAsc2VhcmNoOiEwLHRlbDohMCx0ZXh0OiEwLHRpbWU6ITAsdXJsOiEwLHdlZWs6ITB9O2Z1bmN0aW9uIFliKGEpe3ZhciBiPWEmJmEubm9kZU5hbWUmJmEubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtyZXR1cm5cImlucHV0XCI9PT1iPyEhWGJbYS50eXBlXTpcInRleHRhcmVhXCI9PT1iPyEwOiExfWZ1bmN0aW9uIFpiKGEpe2E9YS50YXJnZXR8fHdpbmRvdzthLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50JiYoYT1hLmNvcnJlc3BvbmRpbmdVc2VFbGVtZW50KTtyZXR1cm4gMz09PWEubm9kZVR5cGU/YS5wYXJlbnROb2RlOmF9XG5mdW5jdGlvbiAkYihhLGIpe2lmKCFtLmNhblVzZURPTXx8YiYmIShcImFkZEV2ZW50TGlzdGVuZXJcImluIGRvY3VtZW50KSlyZXR1cm4hMTthPVwib25cIithO2I9YSBpbiBkb2N1bWVudDtifHwoYj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGIuc2V0QXR0cmlidXRlKGEsXCJyZXR1cm47XCIpLGI9XCJmdW5jdGlvblwiPT09dHlwZW9mIGJbYV0pO3JldHVybiBifWZ1bmN0aW9uIGFjKGEpe3ZhciBiPWEudHlwZTtyZXR1cm4oYT1hLm5vZGVOYW1lKSYmXCJpbnB1dFwiPT09YS50b0xvd2VyQ2FzZSgpJiYoXCJjaGVja2JveFwiPT09Ynx8XCJyYWRpb1wiPT09Yil9XG5mdW5jdGlvbiBiYyhhKXt2YXIgYj1hYyhhKT9cImNoZWNrZWRcIjpcInZhbHVlXCIsYz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGEuY29uc3RydWN0b3IucHJvdG90eXBlLGIpLGQ9XCJcIithW2JdO2lmKCFhLmhhc093blByb3BlcnR5KGIpJiZcInVuZGVmaW5lZFwiIT09dHlwZW9mIGMmJlwiZnVuY3Rpb25cIj09PXR5cGVvZiBjLmdldCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGMuc2V0KXt2YXIgZT1jLmdldCxmPWMuc2V0O09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLGIse2NvbmZpZ3VyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gZS5jYWxsKHRoaXMpfSxzZXQ6ZnVuY3Rpb24oYSl7ZD1cIlwiK2E7Zi5jYWxsKHRoaXMsYSl9fSk7T2JqZWN0LmRlZmluZVByb3BlcnR5KGEsYix7ZW51bWVyYWJsZTpjLmVudW1lcmFibGV9KTtyZXR1cm57Z2V0VmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gZH0sc2V0VmFsdWU6ZnVuY3Rpb24oYSl7ZD1cIlwiK2F9LHN0b3BUcmFja2luZzpmdW5jdGlvbigpe2EuX3ZhbHVlVHJhY2tlcj1cbm51bGw7ZGVsZXRlIGFbYl19fX19ZnVuY3Rpb24gY2MoYSl7YS5fdmFsdWVUcmFja2VyfHwoYS5fdmFsdWVUcmFja2VyPWJjKGEpKX1mdW5jdGlvbiBkYyhhKXtpZighYSlyZXR1cm4hMTt2YXIgYj1hLl92YWx1ZVRyYWNrZXI7aWYoIWIpcmV0dXJuITA7dmFyIGM9Yi5nZXRWYWx1ZSgpO3ZhciBkPVwiXCI7YSYmKGQ9YWMoYSk/YS5jaGVja2VkP1widHJ1ZVwiOlwiZmFsc2VcIjphLnZhbHVlKTthPWQ7cmV0dXJuIGEhPT1jPyhiLnNldFZhbHVlKGEpLCEwKTohMX1cbnZhciBlYz1jYS5fX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRC5SZWFjdEN1cnJlbnRPd25lcixJPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBTeW1ib2wmJlN5bWJvbC5mb3IsZmM9ST9TeW1ib2wuZm9yKFwicmVhY3QuZWxlbWVudFwiKTo2MDEwMyxnYz1JP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsaGM9ST9TeW1ib2wuZm9yKFwicmVhY3QuZnJhZ21lbnRcIik6NjAxMDcsaWM9ST9TeW1ib2wuZm9yKFwicmVhY3Quc3RyaWN0X21vZGVcIik6NjAxMDgsamM9ST9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQsbWM9ST9TeW1ib2wuZm9yKFwicmVhY3QucHJvdmlkZXJcIik6NjAxMDksbmM9ST9TeW1ib2wuZm9yKFwicmVhY3QuY29udGV4dFwiKTo2MDExMCxvYz1JP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLHBjPUk/U3ltYm9sLmZvcihcInJlYWN0LmZvcndhcmRfcmVmXCIpOjYwMTEyLHFjPUk/U3ltYm9sLmZvcihcInJlYWN0LnRpbWVvdXRcIik6XG42MDExMyxyYz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gc2MoYSl7aWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYSlyZXR1cm4gbnVsbDthPXJjJiZhW3JjXXx8YVtcIkBAaXRlcmF0b3JcIl07cmV0dXJuXCJmdW5jdGlvblwiPT09dHlwZW9mIGE/YTpudWxsfVxuZnVuY3Rpb24gdGMoYSl7dmFyIGI9YS50eXBlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiKXJldHVybiBiLmRpc3BsYXlOYW1lfHxiLm5hbWU7aWYoXCJzdHJpbmdcIj09PXR5cGVvZiBiKXJldHVybiBiO3N3aXRjaChiKXtjYXNlIG9jOnJldHVyblwiQXN5bmNNb2RlXCI7Y2FzZSBuYzpyZXR1cm5cIkNvbnRleHQuQ29uc3VtZXJcIjtjYXNlIGhjOnJldHVyblwiUmVhY3RGcmFnbWVudFwiO2Nhc2UgZ2M6cmV0dXJuXCJSZWFjdFBvcnRhbFwiO2Nhc2UgamM6cmV0dXJuXCJQcm9maWxlcihcIithLnBlbmRpbmdQcm9wcy5pZCtcIilcIjtjYXNlIG1jOnJldHVyblwiQ29udGV4dC5Qcm92aWRlclwiO2Nhc2UgaWM6cmV0dXJuXCJTdHJpY3RNb2RlXCI7Y2FzZSBxYzpyZXR1cm5cIlRpbWVvdXRcIn1pZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXN3aXRjaChiLiQkdHlwZW9mKXtjYXNlIHBjOnJldHVybiBhPWIucmVuZGVyLmRpc3BsYXlOYW1lfHxiLnJlbmRlci5uYW1lfHxcIlwiLFwiXCIhPT1hP1wiRm9yd2FyZFJlZihcIitcbmErXCIpXCI6XCJGb3J3YXJkUmVmXCJ9cmV0dXJuIG51bGx9ZnVuY3Rpb24gdmMoYSl7dmFyIGI9XCJcIjtkb3thOnN3aXRjaChhLnRhZyl7Y2FzZSAwOmNhc2UgMTpjYXNlIDI6Y2FzZSA1OnZhciBjPWEuX2RlYnVnT3duZXIsZD1hLl9kZWJ1Z1NvdXJjZTt2YXIgZT10YyhhKTt2YXIgZj1udWxsO2MmJihmPXRjKGMpKTtjPWQ7ZT1cIlxcbiAgICBpbiBcIisoZXx8XCJVbmtub3duXCIpKyhjP1wiIChhdCBcIitjLmZpbGVOYW1lLnJlcGxhY2UoL14uKltcXFxcXFwvXS8sXCJcIikrXCI6XCIrYy5saW5lTnVtYmVyK1wiKVwiOmY/XCIgKGNyZWF0ZWQgYnkgXCIrZitcIilcIjpcIlwiKTticmVhayBhO2RlZmF1bHQ6ZT1cIlwifWIrPWU7YT1hLnJldHVybn13aGlsZShhKTtyZXR1cm4gYn1cbnZhciB3Yz0vXls6QS1aX2EtelxcdTAwQzAtXFx1MDBENlxcdTAwRDgtXFx1MDBGNlxcdTAwRjgtXFx1MDJGRlxcdTAzNzAtXFx1MDM3RFxcdTAzN0YtXFx1MUZGRlxcdTIwMEMtXFx1MjAwRFxcdTIwNzAtXFx1MjE4RlxcdTJDMDAtXFx1MkZFRlxcdTMwMDEtXFx1RDdGRlxcdUY5MDAtXFx1RkRDRlxcdUZERjAtXFx1RkZGRF1bOkEtWl9hLXpcXHUwMEMwLVxcdTAwRDZcXHUwMEQ4LVxcdTAwRjZcXHUwMEY4LVxcdTAyRkZcXHUwMzcwLVxcdTAzN0RcXHUwMzdGLVxcdTFGRkZcXHUyMDBDLVxcdTIwMERcXHUyMDcwLVxcdTIxOEZcXHUyQzAwLVxcdTJGRUZcXHUzMDAxLVxcdUQ3RkZcXHVGOTAwLVxcdUZEQ0ZcXHVGREYwLVxcdUZGRkRcXC0uMC05XFx1MDBCN1xcdTAzMDAtXFx1MDM2RlxcdTIwM0YtXFx1MjA0MF0qJC8seGM9e30seWM9e307ZnVuY3Rpb24gemMoYSl7aWYoeWMuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITA7aWYoeGMuaGFzT3duUHJvcGVydHkoYSkpcmV0dXJuITE7aWYod2MudGVzdChhKSlyZXR1cm4geWNbYV09ITA7eGNbYV09ITA7cmV0dXJuITF9XG5mdW5jdGlvbiBBYyhhLGIsYyxkKXtpZihudWxsIT09YyYmMD09PWMudHlwZSlyZXR1cm4hMTtzd2l0Y2godHlwZW9mIGIpe2Nhc2UgXCJmdW5jdGlvblwiOmNhc2UgXCJzeW1ib2xcIjpyZXR1cm4hMDtjYXNlIFwiYm9vbGVhblwiOmlmKGQpcmV0dXJuITE7aWYobnVsbCE9PWMpcmV0dXJuIWMuYWNjZXB0c0Jvb2xlYW5zO2E9YS50b0xvd2VyQ2FzZSgpLnNsaWNlKDAsNSk7cmV0dXJuXCJkYXRhLVwiIT09YSYmXCJhcmlhLVwiIT09YTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBCYyhhLGIsYyxkKXtpZihudWxsPT09Ynx8XCJ1bmRlZmluZWRcIj09PXR5cGVvZiBifHxBYyhhLGIsYyxkKSlyZXR1cm4hMDtpZihkKXJldHVybiExO2lmKG51bGwhPT1jKXN3aXRjaChjLnR5cGUpe2Nhc2UgMzpyZXR1cm4hYjtjYXNlIDQ6cmV0dXJuITE9PT1iO2Nhc2UgNTpyZXR1cm4gaXNOYU4oYik7Y2FzZSA2OnJldHVybiBpc05hTihiKXx8MT5ifXJldHVybiExfVxuZnVuY3Rpb24gSihhLGIsYyxkLGUpe3RoaXMuYWNjZXB0c0Jvb2xlYW5zPTI9PT1ifHwzPT09Ynx8ND09PWI7dGhpcy5hdHRyaWJ1dGVOYW1lPWQ7dGhpcy5hdHRyaWJ1dGVOYW1lc3BhY2U9ZTt0aGlzLm11c3RVc2VQcm9wZXJ0eT1jO3RoaXMucHJvcGVydHlOYW1lPWE7dGhpcy50eXBlPWJ9dmFyIEs9e307XCJjaGlsZHJlbiBkYW5nZXJvdXNseVNldElubmVySFRNTCBkZWZhdWx0VmFsdWUgZGVmYXVsdENoZWNrZWQgaW5uZXJIVE1MIHN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZyBzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmcgc3R5bGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtLW2FdPW5ldyBKKGEsMCwhMSxhLG51bGwpfSk7XG5bW1wiYWNjZXB0Q2hhcnNldFwiLFwiYWNjZXB0LWNoYXJzZXRcIl0sW1wiY2xhc3NOYW1lXCIsXCJjbGFzc1wiXSxbXCJodG1sRm9yXCIsXCJmb3JcIl0sW1wiaHR0cEVxdWl2XCIsXCJodHRwLWVxdWl2XCJdXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe3ZhciBiPWFbMF07S1tiXT1uZXcgSihiLDEsITEsYVsxXSxudWxsKX0pO1tcImNvbnRlbnRFZGl0YWJsZVwiLFwiZHJhZ2dhYmxlXCIsXCJzcGVsbENoZWNrXCIsXCJ2YWx1ZVwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0tbYV09bmV3IEooYSwyLCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO1tcImF1dG9SZXZlcnNlXCIsXCJleHRlcm5hbFJlc291cmNlc1JlcXVpcmVkXCIsXCJwcmVzZXJ2ZUFscGhhXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7S1thXT1uZXcgSihhLDIsITEsYSxudWxsKX0pO1xuXCJhbGxvd0Z1bGxTY3JlZW4gYXN5bmMgYXV0b0ZvY3VzIGF1dG9QbGF5IGNvbnRyb2xzIGRlZmF1bHQgZGVmZXIgZGlzYWJsZWQgZm9ybU5vVmFsaWRhdGUgaGlkZGVuIGxvb3Agbm9Nb2R1bGUgbm9WYWxpZGF0ZSBvcGVuIHBsYXlzSW5saW5lIHJlYWRPbmx5IHJlcXVpcmVkIHJldmVyc2VkIHNjb3BlZCBzZWFtbGVzcyBpdGVtU2NvcGVcIi5zcGxpdChcIiBcIikuZm9yRWFjaChmdW5jdGlvbihhKXtLW2FdPW5ldyBKKGEsMywhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJjaGVja2VkXCIsXCJtdWx0aXBsZVwiLFwibXV0ZWRcIixcInNlbGVjdGVkXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7S1thXT1uZXcgSihhLDMsITAsYS50b0xvd2VyQ2FzZSgpLG51bGwpfSk7W1wiY2FwdHVyZVwiLFwiZG93bmxvYWRcIl0uZm9yRWFjaChmdW5jdGlvbihhKXtLW2FdPW5ldyBKKGEsNCwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtcbltcImNvbHNcIixcInJvd3NcIixcInNpemVcIixcInNwYW5cIl0uZm9yRWFjaChmdW5jdGlvbihhKXtLW2FdPW5ldyBKKGEsNiwhMSxhLnRvTG93ZXJDYXNlKCksbnVsbCl9KTtbXCJyb3dTcGFuXCIsXCJzdGFydFwiXS5mb3JFYWNoKGZ1bmN0aW9uKGEpe0tbYV09bmV3IEooYSw1LCExLGEudG9Mb3dlckNhc2UoKSxudWxsKX0pO3ZhciBDYz0vW1xcLTpdKFthLXpdKS9nO2Z1bmN0aW9uIERjKGEpe3JldHVybiBhWzFdLnRvVXBwZXJDYXNlKCl9XG5cImFjY2VudC1oZWlnaHQgYWxpZ25tZW50LWJhc2VsaW5lIGFyYWJpYy1mb3JtIGJhc2VsaW5lLXNoaWZ0IGNhcC1oZWlnaHQgY2xpcC1wYXRoIGNsaXAtcnVsZSBjb2xvci1pbnRlcnBvbGF0aW9uIGNvbG9yLWludGVycG9sYXRpb24tZmlsdGVycyBjb2xvci1wcm9maWxlIGNvbG9yLXJlbmRlcmluZyBkb21pbmFudC1iYXNlbGluZSBlbmFibGUtYmFja2dyb3VuZCBmaWxsLW9wYWNpdHkgZmlsbC1ydWxlIGZsb29kLWNvbG9yIGZsb29kLW9wYWNpdHkgZm9udC1mYW1pbHkgZm9udC1zaXplIGZvbnQtc2l6ZS1hZGp1c3QgZm9udC1zdHJldGNoIGZvbnQtc3R5bGUgZm9udC12YXJpYW50IGZvbnQtd2VpZ2h0IGdseXBoLW5hbWUgZ2x5cGgtb3JpZW50YXRpb24taG9yaXpvbnRhbCBnbHlwaC1vcmllbnRhdGlvbi12ZXJ0aWNhbCBob3Jpei1hZHYteCBob3Jpei1vcmlnaW4teCBpbWFnZS1yZW5kZXJpbmcgbGV0dGVyLXNwYWNpbmcgbGlnaHRpbmctY29sb3IgbWFya2VyLWVuZCBtYXJrZXItbWlkIG1hcmtlci1zdGFydCBvdmVybGluZS1wb3NpdGlvbiBvdmVybGluZS10aGlja25lc3MgcGFpbnQtb3JkZXIgcGFub3NlLTEgcG9pbnRlci1ldmVudHMgcmVuZGVyaW5nLWludGVudCBzaGFwZS1yZW5kZXJpbmcgc3RvcC1jb2xvciBzdG9wLW9wYWNpdHkgc3RyaWtldGhyb3VnaC1wb3NpdGlvbiBzdHJpa2V0aHJvdWdoLXRoaWNrbmVzcyBzdHJva2UtZGFzaGFycmF5IHN0cm9rZS1kYXNob2Zmc2V0IHN0cm9rZS1saW5lY2FwIHN0cm9rZS1saW5lam9pbiBzdHJva2UtbWl0ZXJsaW1pdCBzdHJva2Utb3BhY2l0eSBzdHJva2Utd2lkdGggdGV4dC1hbmNob3IgdGV4dC1kZWNvcmF0aW9uIHRleHQtcmVuZGVyaW5nIHVuZGVybGluZS1wb3NpdGlvbiB1bmRlcmxpbmUtdGhpY2tuZXNzIHVuaWNvZGUtYmlkaSB1bmljb2RlLXJhbmdlIHVuaXRzLXBlci1lbSB2LWFscGhhYmV0aWMgdi1oYW5naW5nIHYtaWRlb2dyYXBoaWMgdi1tYXRoZW1hdGljYWwgdmVjdG9yLWVmZmVjdCB2ZXJ0LWFkdi15IHZlcnQtb3JpZ2luLXggdmVydC1vcmlnaW4teSB3b3JkLXNwYWNpbmcgd3JpdGluZy1tb2RlIHhtbG5zOnhsaW5rIHgtaGVpZ2h0XCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKENjLFxuRGMpO0tbYl09bmV3IEooYiwxLCExLGEsbnVsbCl9KTtcInhsaW5rOmFjdHVhdGUgeGxpbms6YXJjcm9sZSB4bGluazpocmVmIHhsaW5rOnJvbGUgeGxpbms6c2hvdyB4bGluazp0aXRsZSB4bGluazp0eXBlXCIuc3BsaXQoXCIgXCIpLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKENjLERjKTtLW2JdPW5ldyBKKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGlua1wiKX0pO1tcInhtbDpiYXNlXCIsXCJ4bWw6bGFuZ1wiLFwieG1sOnNwYWNlXCJdLmZvckVhY2goZnVuY3Rpb24oYSl7dmFyIGI9YS5yZXBsYWNlKENjLERjKTtLW2JdPW5ldyBKKGIsMSwhMSxhLFwiaHR0cDovL3d3dy53My5vcmcvWE1MLzE5OTgvbmFtZXNwYWNlXCIpfSk7Sy50YWJJbmRleD1uZXcgSihcInRhYkluZGV4XCIsMSwhMSxcInRhYmluZGV4XCIsbnVsbCk7XG5mdW5jdGlvbiBFYyhhLGIsYyxkKXt2YXIgZT1LLmhhc093blByb3BlcnR5KGIpP0tbYl06bnVsbDt2YXIgZj1udWxsIT09ZT8wPT09ZS50eXBlOmQ/ITE6ISgyPGIubGVuZ3RoKXx8XCJvXCIhPT1iWzBdJiZcIk9cIiE9PWJbMF18fFwiblwiIT09YlsxXSYmXCJOXCIhPT1iWzFdPyExOiEwO2Z8fChCYyhiLGMsZSxkKSYmKGM9bnVsbCksZHx8bnVsbD09PWU/emMoYikmJihudWxsPT09Yz9hLnJlbW92ZUF0dHJpYnV0ZShiKTphLnNldEF0dHJpYnV0ZShiLFwiXCIrYykpOmUubXVzdFVzZVByb3BlcnR5P2FbZS5wcm9wZXJ0eU5hbWVdPW51bGw9PT1jPzM9PT1lLnR5cGU/ITE6XCJcIjpjOihiPWUuYXR0cmlidXRlTmFtZSxkPWUuYXR0cmlidXRlTmFtZXNwYWNlLG51bGw9PT1jP2EucmVtb3ZlQXR0cmlidXRlKGIpOihlPWUudHlwZSxjPTM9PT1lfHw0PT09ZSYmITA9PT1jP1wiXCI6XCJcIitjLGQ/YS5zZXRBdHRyaWJ1dGVOUyhkLGIsYyk6YS5zZXRBdHRyaWJ1dGUoYixjKSkpKX1cbmZ1bmN0aW9uIEZjKGEsYil7dmFyIGM9Yi5jaGVja2VkO3JldHVybiBwKHt9LGIse2RlZmF1bHRDaGVja2VkOnZvaWQgMCxkZWZhdWx0VmFsdWU6dm9pZCAwLHZhbHVlOnZvaWQgMCxjaGVja2VkOm51bGwhPWM/YzphLl93cmFwcGVyU3RhdGUuaW5pdGlhbENoZWNrZWR9KX1mdW5jdGlvbiBHYyhhLGIpe3ZhciBjPW51bGw9PWIuZGVmYXVsdFZhbHVlP1wiXCI6Yi5kZWZhdWx0VmFsdWUsZD1udWxsIT1iLmNoZWNrZWQ/Yi5jaGVja2VkOmIuZGVmYXVsdENoZWNrZWQ7Yz1IYyhudWxsIT1iLnZhbHVlP2IudmFsdWU6Yyk7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsQ2hlY2tlZDpkLGluaXRpYWxWYWx1ZTpjLGNvbnRyb2xsZWQ6XCJjaGVja2JveFwiPT09Yi50eXBlfHxcInJhZGlvXCI9PT1iLnR5cGU/bnVsbCE9Yi5jaGVja2VkOm51bGwhPWIudmFsdWV9fWZ1bmN0aW9uIEljKGEsYil7Yj1iLmNoZWNrZWQ7bnVsbCE9YiYmRWMoYSxcImNoZWNrZWRcIixiLCExKX1cbmZ1bmN0aW9uIEpjKGEsYil7SWMoYSxiKTt2YXIgYz1IYyhiLnZhbHVlKTtpZihudWxsIT1jKWlmKFwibnVtYmVyXCI9PT1iLnR5cGUpe2lmKDA9PT1jJiZcIlwiPT09YS52YWx1ZXx8YS52YWx1ZSE9YylhLnZhbHVlPVwiXCIrY31lbHNlIGEudmFsdWUhPT1cIlwiK2MmJihhLnZhbHVlPVwiXCIrYyk7Yi5oYXNPd25Qcm9wZXJ0eShcInZhbHVlXCIpP0tjKGEsYi50eXBlLGMpOmIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikmJktjKGEsYi50eXBlLEhjKGIuZGVmYXVsdFZhbHVlKSk7bnVsbD09Yi5jaGVja2VkJiZudWxsIT1iLmRlZmF1bHRDaGVja2VkJiYoYS5kZWZhdWx0Q2hlY2tlZD0hIWIuZGVmYXVsdENoZWNrZWQpfVxuZnVuY3Rpb24gTGMoYSxiKXtpZihiLmhhc093blByb3BlcnR5KFwidmFsdWVcIil8fGIuaGFzT3duUHJvcGVydHkoXCJkZWZhdWx0VmFsdWVcIikpXCJcIj09PWEudmFsdWUmJihhLnZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSksYS5kZWZhdWx0VmFsdWU9XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlO2I9YS5uYW1lO1wiXCIhPT1iJiYoYS5uYW1lPVwiXCIpO2EuZGVmYXVsdENoZWNrZWQ9IWEuZGVmYXVsdENoZWNrZWQ7YS5kZWZhdWx0Q2hlY2tlZD0hYS5kZWZhdWx0Q2hlY2tlZDtcIlwiIT09YiYmKGEubmFtZT1iKX1mdW5jdGlvbiBLYyhhLGIsYyl7aWYoXCJudW1iZXJcIiE9PWJ8fGEub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50IT09YSludWxsPT1jP2EuZGVmYXVsdFZhbHVlPVwiXCIrYS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZTphLmRlZmF1bHRWYWx1ZSE9PVwiXCIrYyYmKGEuZGVmYXVsdFZhbHVlPVwiXCIrYyl9XG5mdW5jdGlvbiBIYyhhKXtzd2l0Y2godHlwZW9mIGEpe2Nhc2UgXCJib29sZWFuXCI6Y2FzZSBcIm51bWJlclwiOmNhc2UgXCJvYmplY3RcIjpjYXNlIFwic3RyaW5nXCI6Y2FzZSBcInVuZGVmaW5lZFwiOnJldHVybiBhO2RlZmF1bHQ6cmV0dXJuXCJcIn19dmFyIE1jPXtjaGFuZ2U6e3BoYXNlZFJlZ2lzdHJhdGlvbk5hbWVzOntidWJibGVkOlwib25DaGFuZ2VcIixjYXB0dXJlZDpcIm9uQ2hhbmdlQ2FwdHVyZVwifSxkZXBlbmRlbmNpZXM6XCJibHVyIGNoYW5nZSBjbGljayBmb2N1cyBpbnB1dCBrZXlkb3duIGtleXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19O2Z1bmN0aW9uIE5jKGEsYixjKXthPUguZ2V0UG9vbGVkKE1jLmNoYW5nZSxhLGIsYyk7YS50eXBlPVwiY2hhbmdlXCI7T2IoYyk7WWEoYSk7cmV0dXJuIGF9dmFyIE9jPW51bGwsUGM9bnVsbDtmdW5jdGlvbiBRYyhhKXtJYShhLCExKX1mdW5jdGlvbiBSYyhhKXt2YXIgYj1PYShhKTtpZihkYyhiKSlyZXR1cm4gYX1cbmZ1bmN0aW9uIFNjKGEsYil7aWYoXCJjaGFuZ2VcIj09PWEpcmV0dXJuIGJ9dmFyIFRjPSExO20uY2FuVXNlRE9NJiYoVGM9JGIoXCJpbnB1dFwiKSYmKCFkb2N1bWVudC5kb2N1bWVudE1vZGV8fDk8ZG9jdW1lbnQuZG9jdW1lbnRNb2RlKSk7ZnVuY3Rpb24gVWMoKXtPYyYmKE9jLmRldGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFZjKSxQYz1PYz1udWxsKX1mdW5jdGlvbiBWYyhhKXtcInZhbHVlXCI9PT1hLnByb3BlcnR5TmFtZSYmUmMoUGMpJiYoYT1OYyhQYyxhLFpiKGEpKSxXYihRYyxhKSl9ZnVuY3Rpb24gV2MoYSxiLGMpe1wiZm9jdXNcIj09PWE/KFVjKCksT2M9YixQYz1jLE9jLmF0dGFjaEV2ZW50KFwib25wcm9wZXJ0eWNoYW5nZVwiLFZjKSk6XCJibHVyXCI9PT1hJiZVYygpfWZ1bmN0aW9uIFhjKGEpe2lmKFwic2VsZWN0aW9uY2hhbmdlXCI9PT1hfHxcImtleXVwXCI9PT1hfHxcImtleWRvd25cIj09PWEpcmV0dXJuIFJjKFBjKX1cbmZ1bmN0aW9uIFljKGEsYil7aWYoXCJjbGlja1wiPT09YSlyZXR1cm4gUmMoYil9ZnVuY3Rpb24gWmMoYSxiKXtpZihcImlucHV0XCI9PT1hfHxcImNoYW5nZVwiPT09YSlyZXR1cm4gUmMoYil9XG52YXIgJGM9e2V2ZW50VHlwZXM6TWMsX2lzSW5wdXRFdmVudFN1cHBvcnRlZDpUYyxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWI/T2EoYik6d2luZG93LGY9dm9pZCAwLGc9dm9pZCAwLGg9ZS5ub2RlTmFtZSYmZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1wic2VsZWN0XCI9PT1ofHxcImlucHV0XCI9PT1oJiZcImZpbGVcIj09PWUudHlwZT9mPVNjOlliKGUpP1RjP2Y9WmM6KGY9WGMsZz1XYyk6KGg9ZS5ub2RlTmFtZSkmJlwiaW5wdXRcIj09PWgudG9Mb3dlckNhc2UoKSYmKFwiY2hlY2tib3hcIj09PWUudHlwZXx8XCJyYWRpb1wiPT09ZS50eXBlKSYmKGY9WWMpO2lmKGYmJihmPWYoYSxiKSkpcmV0dXJuIE5jKGYsYyxkKTtnJiZnKGEsZSxiKTtcImJsdXJcIj09PWEmJm51bGwhPWImJihhPWIuX3dyYXBwZXJTdGF0ZXx8ZS5fd3JhcHBlclN0YXRlKSYmYS5jb250cm9sbGVkJiZcIm51bWJlclwiPT09ZS50eXBlJiZLYyhlLFwibnVtYmVyXCIsZS52YWx1ZSl9fSxhZD1ILmV4dGVuZCh7dmlldzpudWxsLFxuZGV0YWlsOm51bGx9KSxiZD17QWx0OlwiYWx0S2V5XCIsQ29udHJvbDpcImN0cmxLZXlcIixNZXRhOlwibWV0YUtleVwiLFNoaWZ0Olwic2hpZnRLZXlcIn07ZnVuY3Rpb24gY2QoYSl7dmFyIGI9dGhpcy5uYXRpdmVFdmVudDtyZXR1cm4gYi5nZXRNb2RpZmllclN0YXRlP2IuZ2V0TW9kaWZpZXJTdGF0ZShhKTooYT1iZFthXSk/ISFiW2FdOiExfWZ1bmN0aW9uIGRkKCl7cmV0dXJuIGNkfVxudmFyIGVkPWFkLmV4dGVuZCh7c2NyZWVuWDpudWxsLHNjcmVlblk6bnVsbCxjbGllbnRYOm51bGwsY2xpZW50WTpudWxsLHBhZ2VYOm51bGwscGFnZVk6bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpkZCxidXR0b246bnVsbCxidXR0b25zOm51bGwscmVsYXRlZFRhcmdldDpmdW5jdGlvbihhKXtyZXR1cm4gYS5yZWxhdGVkVGFyZ2V0fHwoYS5mcm9tRWxlbWVudD09PWEuc3JjRWxlbWVudD9hLnRvRWxlbWVudDphLmZyb21FbGVtZW50KX19KSxmZD1lZC5leHRlbmQoe3BvaW50ZXJJZDpudWxsLHdpZHRoOm51bGwsaGVpZ2h0Om51bGwscHJlc3N1cmU6bnVsbCx0aWx0WDpudWxsLHRpbHRZOm51bGwscG9pbnRlclR5cGU6bnVsbCxpc1ByaW1hcnk6bnVsbH0pLGdkPXttb3VzZUVudGVyOntyZWdpc3RyYXRpb25OYW1lOlwib25Nb3VzZUVudGVyXCIsZGVwZW5kZW5jaWVzOltcIm1vdXNlb3V0XCIsXCJtb3VzZW92ZXJcIl19LFxubW91c2VMZWF2ZTp7cmVnaXN0cmF0aW9uTmFtZTpcIm9uTW91c2VMZWF2ZVwiLGRlcGVuZGVuY2llczpbXCJtb3VzZW91dFwiLFwibW91c2VvdmVyXCJdfSxwb2ludGVyRW50ZXI6e3JlZ2lzdHJhdGlvbk5hbWU6XCJvblBvaW50ZXJFbnRlclwiLGRlcGVuZGVuY2llczpbXCJwb2ludGVyb3V0XCIsXCJwb2ludGVyb3ZlclwiXX0scG9pbnRlckxlYXZlOntyZWdpc3RyYXRpb25OYW1lOlwib25Qb2ludGVyTGVhdmVcIixkZXBlbmRlbmNpZXM6W1wicG9pbnRlcm91dFwiLFwicG9pbnRlcm92ZXJcIl19fSxoZD17ZXZlbnRUeXBlczpnZCxleHRyYWN0RXZlbnRzOmZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVwibW91c2VvdmVyXCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hLGY9XCJtb3VzZW91dFwiPT09YXx8XCJwb2ludGVyb3V0XCI9PT1hO2lmKGUmJihjLnJlbGF0ZWRUYXJnZXR8fGMuZnJvbUVsZW1lbnQpfHwhZiYmIWUpcmV0dXJuIG51bGw7ZT1kLndpbmRvdz09PWQ/ZDooZT1kLm93bmVyRG9jdW1lbnQpP2UuZGVmYXVsdFZpZXd8fFxuZS5wYXJlbnRXaW5kb3c6d2luZG93O2Y/KGY9YixiPShiPWMucmVsYXRlZFRhcmdldHx8Yy50b0VsZW1lbnQpP05hKGIpOm51bGwpOmY9bnVsbDtpZihmPT09YilyZXR1cm4gbnVsbDt2YXIgZz12b2lkIDAsaD12b2lkIDAsaz12b2lkIDAsbj12b2lkIDA7aWYoXCJtb3VzZW91dFwiPT09YXx8XCJtb3VzZW92ZXJcIj09PWEpZz1lZCxoPWdkLm1vdXNlTGVhdmUsaz1nZC5tb3VzZUVudGVyLG49XCJtb3VzZVwiO2Vsc2UgaWYoXCJwb2ludGVyb3V0XCI9PT1hfHxcInBvaW50ZXJvdmVyXCI9PT1hKWc9ZmQsaD1nZC5wb2ludGVyTGVhdmUsaz1nZC5wb2ludGVyRW50ZXIsbj1cInBvaW50ZXJcIjthPW51bGw9PWY/ZTpPYShmKTtlPW51bGw9PWI/ZTpPYShiKTtoPWcuZ2V0UG9vbGVkKGgsZixjLGQpO2gudHlwZT1uK1wibGVhdmVcIjtoLnRhcmdldD1hO2gucmVsYXRlZFRhcmdldD1lO2M9Zy5nZXRQb29sZWQoayxiLGMsZCk7Yy50eXBlPW4rXCJlbnRlclwiO2MudGFyZ2V0PWU7Yy5yZWxhdGVkVGFyZ2V0PWE7WmEoaCxcbmMsZixiKTtyZXR1cm5baCxjXX19O2Z1bmN0aW9uIGlkKGEpe3ZhciBiPWE7aWYoYS5hbHRlcm5hdGUpZm9yKDtiLnJldHVybjspYj1iLnJldHVybjtlbHNle2lmKDAhPT0oYi5lZmZlY3RUYWcmMikpcmV0dXJuIDE7Zm9yKDtiLnJldHVybjspaWYoYj1iLnJldHVybiwwIT09KGIuZWZmZWN0VGFnJjIpKXJldHVybiAxfXJldHVybiAzPT09Yi50YWc/MjozfWZ1bmN0aW9uIGpkKGEpezIhPT1pZChhKT9BKFwiMTg4XCIpOnZvaWQgMH1cbmZ1bmN0aW9uIGtkKGEpe3ZhciBiPWEuYWx0ZXJuYXRlO2lmKCFiKXJldHVybiBiPWlkKGEpLDM9PT1iP0EoXCIxODhcIik6dm9pZCAwLDE9PT1iP251bGw6YTtmb3IodmFyIGM9YSxkPWI7Oyl7dmFyIGU9Yy5yZXR1cm4sZj1lP2UuYWx0ZXJuYXRlOm51bGw7aWYoIWV8fCFmKWJyZWFrO2lmKGUuY2hpbGQ9PT1mLmNoaWxkKXtmb3IodmFyIGc9ZS5jaGlsZDtnOyl7aWYoZz09PWMpcmV0dXJuIGpkKGUpLGE7aWYoZz09PWQpcmV0dXJuIGpkKGUpLGI7Zz1nLnNpYmxpbmd9QShcIjE4OFwiKX1pZihjLnJldHVybiE9PWQucmV0dXJuKWM9ZSxkPWY7ZWxzZXtnPSExO2Zvcih2YXIgaD1lLmNoaWxkO2g7KXtpZihoPT09Yyl7Zz0hMDtjPWU7ZD1mO2JyZWFrfWlmKGg9PT1kKXtnPSEwO2Q9ZTtjPWY7YnJlYWt9aD1oLnNpYmxpbmd9aWYoIWcpe2ZvcihoPWYuY2hpbGQ7aDspe2lmKGg9PT1jKXtnPSEwO2M9ZjtkPWU7YnJlYWt9aWYoaD09PWQpe2c9ITA7ZD1mO2M9ZTticmVha31oPWguc2libGluZ31nP1xudm9pZCAwOkEoXCIxODlcIil9fWMuYWx0ZXJuYXRlIT09ZD9BKFwiMTkwXCIpOnZvaWQgMH0zIT09Yy50YWc/QShcIjE4OFwiKTp2b2lkIDA7cmV0dXJuIGMuc3RhdGVOb2RlLmN1cnJlbnQ9PT1jP2E6Yn1mdW5jdGlvbiBsZChhKXthPWtkKGEpO2lmKCFhKXJldHVybiBudWxsO2Zvcih2YXIgYj1hOzspe2lmKDU9PT1iLnRhZ3x8Nj09PWIudGFnKXJldHVybiBiO2lmKGIuY2hpbGQpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gbWQoYSl7YT1rZChhKTtpZighYSlyZXR1cm4gbnVsbDtmb3IodmFyIGI9YTs7KXtpZig1PT09Yi50YWd8fDY9PT1iLnRhZylyZXR1cm4gYjtpZihiLmNoaWxkJiY0IT09Yi50YWcpYi5jaGlsZC5yZXR1cm49YixiPWIuY2hpbGQ7ZWxzZXtpZihiPT09YSlicmVhaztmb3IoOyFiLnNpYmxpbmc7KXtpZighYi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm4gbnVsbDtiPWIucmV0dXJufWIuc2libGluZy5yZXR1cm49Yi5yZXR1cm47Yj1iLnNpYmxpbmd9fXJldHVybiBudWxsfXZhciBuZD1ILmV4dGVuZCh7YW5pbWF0aW9uTmFtZTpudWxsLGVsYXBzZWRUaW1lOm51bGwscHNldWRvRWxlbWVudDpudWxsfSksb2Q9SC5leHRlbmQoe2NsaXBib2FyZERhdGE6ZnVuY3Rpb24oYSl7cmV0dXJuXCJjbGlwYm9hcmREYXRhXCJpbiBhP2EuY2xpcGJvYXJkRGF0YTp3aW5kb3cuY2xpcGJvYXJkRGF0YX19KSxwZD1hZC5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6bnVsbH0pO1xuZnVuY3Rpb24gcWQoYSl7dmFyIGI9YS5rZXlDb2RlO1wiY2hhckNvZGVcImluIGE/KGE9YS5jaGFyQ29kZSwwPT09YSYmMTM9PT1iJiYoYT0xMykpOmE9YjsxMD09PWEmJihhPTEzKTtyZXR1cm4gMzI8PWF8fDEzPT09YT9hOjB9XG52YXIgcmQ9e0VzYzpcIkVzY2FwZVwiLFNwYWNlYmFyOlwiIFwiLExlZnQ6XCJBcnJvd0xlZnRcIixVcDpcIkFycm93VXBcIixSaWdodDpcIkFycm93UmlnaHRcIixEb3duOlwiQXJyb3dEb3duXCIsRGVsOlwiRGVsZXRlXCIsV2luOlwiT1NcIixNZW51OlwiQ29udGV4dE1lbnVcIixBcHBzOlwiQ29udGV4dE1lbnVcIixTY3JvbGw6XCJTY3JvbGxMb2NrXCIsTW96UHJpbnRhYmxlS2V5OlwiVW5pZGVudGlmaWVkXCJ9LHNkPXs4OlwiQmFja3NwYWNlXCIsOTpcIlRhYlwiLDEyOlwiQ2xlYXJcIiwxMzpcIkVudGVyXCIsMTY6XCJTaGlmdFwiLDE3OlwiQ29udHJvbFwiLDE4OlwiQWx0XCIsMTk6XCJQYXVzZVwiLDIwOlwiQ2Fwc0xvY2tcIiwyNzpcIkVzY2FwZVwiLDMyOlwiIFwiLDMzOlwiUGFnZVVwXCIsMzQ6XCJQYWdlRG93blwiLDM1OlwiRW5kXCIsMzY6XCJIb21lXCIsMzc6XCJBcnJvd0xlZnRcIiwzODpcIkFycm93VXBcIiwzOTpcIkFycm93UmlnaHRcIiw0MDpcIkFycm93RG93blwiLDQ1OlwiSW5zZXJ0XCIsNDY6XCJEZWxldGVcIiwxMTI6XCJGMVwiLDExMzpcIkYyXCIsMTE0OlwiRjNcIiwxMTU6XCJGNFwiLFxuMTE2OlwiRjVcIiwxMTc6XCJGNlwiLDExODpcIkY3XCIsMTE5OlwiRjhcIiwxMjA6XCJGOVwiLDEyMTpcIkYxMFwiLDEyMjpcIkYxMVwiLDEyMzpcIkYxMlwiLDE0NDpcIk51bUxvY2tcIiwxNDU6XCJTY3JvbGxMb2NrXCIsMjI0OlwiTWV0YVwifSx0ZD1hZC5leHRlbmQoe2tleTpmdW5jdGlvbihhKXtpZihhLmtleSl7dmFyIGI9cmRbYS5rZXldfHxhLmtleTtpZihcIlVuaWRlbnRpZmllZFwiIT09YilyZXR1cm4gYn1yZXR1cm5cImtleXByZXNzXCI9PT1hLnR5cGU/KGE9cWQoYSksMTM9PT1hP1wiRW50ZXJcIjpTdHJpbmcuZnJvbUNoYXJDb2RlKGEpKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP3NkW2Eua2V5Q29kZV18fFwiVW5pZGVudGlmaWVkXCI6XCJcIn0sbG9jYXRpb246bnVsbCxjdHJsS2V5Om51bGwsc2hpZnRLZXk6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwscmVwZWF0Om51bGwsbG9jYWxlOm51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpkZCxjaGFyQ29kZTpmdW5jdGlvbihhKXtyZXR1cm5cImtleXByZXNzXCI9PT1cbmEudHlwZT9xZChhKTowfSxrZXlDb2RlOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5ZG93blwiPT09YS50eXBlfHxcImtleXVwXCI9PT1hLnR5cGU/YS5rZXlDb2RlOjB9LHdoaWNoOmZ1bmN0aW9uKGEpe3JldHVyblwia2V5cHJlc3NcIj09PWEudHlwZT9xZChhKTpcImtleWRvd25cIj09PWEudHlwZXx8XCJrZXl1cFwiPT09YS50eXBlP2Eua2V5Q29kZTowfX0pLHVkPWVkLmV4dGVuZCh7ZGF0YVRyYW5zZmVyOm51bGx9KSx2ZD1hZC5leHRlbmQoe3RvdWNoZXM6bnVsbCx0YXJnZXRUb3VjaGVzOm51bGwsY2hhbmdlZFRvdWNoZXM6bnVsbCxhbHRLZXk6bnVsbCxtZXRhS2V5Om51bGwsY3RybEtleTpudWxsLHNoaWZ0S2V5Om51bGwsZ2V0TW9kaWZpZXJTdGF0ZTpkZH0pLHdkPUguZXh0ZW5kKHtwcm9wZXJ0eU5hbWU6bnVsbCxlbGFwc2VkVGltZTpudWxsLHBzZXVkb0VsZW1lbnQ6bnVsbH0pLHhkPWVkLmV4dGVuZCh7ZGVsdGFYOmZ1bmN0aW9uKGEpe3JldHVyblwiZGVsdGFYXCJpbiBhP2EuZGVsdGFYOlwid2hlZWxEZWx0YVhcImluXG5hPy1hLndoZWVsRGVsdGFYOjB9LGRlbHRhWTpmdW5jdGlvbihhKXtyZXR1cm5cImRlbHRhWVwiaW4gYT9hLmRlbHRhWTpcIndoZWVsRGVsdGFZXCJpbiBhPy1hLndoZWVsRGVsdGFZOlwid2hlZWxEZWx0YVwiaW4gYT8tYS53aGVlbERlbHRhOjB9LGRlbHRhWjpudWxsLGRlbHRhTW9kZTpudWxsfSkseWQ9W1tcImFib3J0XCIsXCJhYm9ydFwiXSxbZmIsXCJhbmltYXRpb25FbmRcIl0sW2diLFwiYW5pbWF0aW9uSXRlcmF0aW9uXCJdLFtoYixcImFuaW1hdGlvblN0YXJ0XCJdLFtcImNhbnBsYXlcIixcImNhblBsYXlcIl0sW1wiY2FucGxheXRocm91Z2hcIixcImNhblBsYXlUaHJvdWdoXCJdLFtcImRyYWdcIixcImRyYWdcIl0sW1wiZHJhZ2VudGVyXCIsXCJkcmFnRW50ZXJcIl0sW1wiZHJhZ2V4aXRcIixcImRyYWdFeGl0XCJdLFtcImRyYWdsZWF2ZVwiLFwiZHJhZ0xlYXZlXCJdLFtcImRyYWdvdmVyXCIsXCJkcmFnT3ZlclwiXSxbXCJkdXJhdGlvbmNoYW5nZVwiLFwiZHVyYXRpb25DaGFuZ2VcIl0sW1wiZW1wdGllZFwiLFwiZW1wdGllZFwiXSxbXCJlbmNyeXB0ZWRcIixcImVuY3J5cHRlZFwiXSxcbltcImVuZGVkXCIsXCJlbmRlZFwiXSxbXCJlcnJvclwiLFwiZXJyb3JcIl0sW1wiZ290cG9pbnRlcmNhcHR1cmVcIixcImdvdFBvaW50ZXJDYXB0dXJlXCJdLFtcImxvYWRcIixcImxvYWRcIl0sW1wibG9hZGVkZGF0YVwiLFwibG9hZGVkRGF0YVwiXSxbXCJsb2FkZWRtZXRhZGF0YVwiLFwibG9hZGVkTWV0YWRhdGFcIl0sW1wibG9hZHN0YXJ0XCIsXCJsb2FkU3RhcnRcIl0sW1wibG9zdHBvaW50ZXJjYXB0dXJlXCIsXCJsb3N0UG9pbnRlckNhcHR1cmVcIl0sW1wibW91c2Vtb3ZlXCIsXCJtb3VzZU1vdmVcIl0sW1wibW91c2VvdXRcIixcIm1vdXNlT3V0XCJdLFtcIm1vdXNlb3ZlclwiLFwibW91c2VPdmVyXCJdLFtcInBsYXlpbmdcIixcInBsYXlpbmdcIl0sW1wicG9pbnRlcm1vdmVcIixcInBvaW50ZXJNb3ZlXCJdLFtcInBvaW50ZXJvdXRcIixcInBvaW50ZXJPdXRcIl0sW1wicG9pbnRlcm92ZXJcIixcInBvaW50ZXJPdmVyXCJdLFtcInByb2dyZXNzXCIsXCJwcm9ncmVzc1wiXSxbXCJzY3JvbGxcIixcInNjcm9sbFwiXSxbXCJzZWVraW5nXCIsXCJzZWVraW5nXCJdLFtcInN0YWxsZWRcIixcInN0YWxsZWRcIl0sXG5bXCJzdXNwZW5kXCIsXCJzdXNwZW5kXCJdLFtcInRpbWV1cGRhdGVcIixcInRpbWVVcGRhdGVcIl0sW1widG9nZ2xlXCIsXCJ0b2dnbGVcIl0sW1widG91Y2htb3ZlXCIsXCJ0b3VjaE1vdmVcIl0sW2liLFwidHJhbnNpdGlvbkVuZFwiXSxbXCJ3YWl0aW5nXCIsXCJ3YWl0aW5nXCJdLFtcIndoZWVsXCIsXCJ3aGVlbFwiXV0semQ9e30sQWQ9e307ZnVuY3Rpb24gQmQoYSxiKXt2YXIgYz1hWzBdO2E9YVsxXTt2YXIgZD1cIm9uXCIrKGFbMF0udG9VcHBlckNhc2UoKSthLnNsaWNlKDEpKTtiPXtwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpkLGNhcHR1cmVkOmQrXCJDYXB0dXJlXCJ9LGRlcGVuZGVuY2llczpbY10saXNJbnRlcmFjdGl2ZTpifTt6ZFthXT1iO0FkW2NdPWJ9XG5bW1wiYmx1clwiLFwiYmx1clwiXSxbXCJjYW5jZWxcIixcImNhbmNlbFwiXSxbXCJjbGlja1wiLFwiY2xpY2tcIl0sW1wiY2xvc2VcIixcImNsb3NlXCJdLFtcImNvbnRleHRtZW51XCIsXCJjb250ZXh0TWVudVwiXSxbXCJjb3B5XCIsXCJjb3B5XCJdLFtcImN1dFwiLFwiY3V0XCJdLFtcImRibGNsaWNrXCIsXCJkb3VibGVDbGlja1wiXSxbXCJkcmFnZW5kXCIsXCJkcmFnRW5kXCJdLFtcImRyYWdzdGFydFwiLFwiZHJhZ1N0YXJ0XCJdLFtcImRyb3BcIixcImRyb3BcIl0sW1wiZm9jdXNcIixcImZvY3VzXCJdLFtcImlucHV0XCIsXCJpbnB1dFwiXSxbXCJpbnZhbGlkXCIsXCJpbnZhbGlkXCJdLFtcImtleWRvd25cIixcImtleURvd25cIl0sW1wia2V5cHJlc3NcIixcImtleVByZXNzXCJdLFtcImtleXVwXCIsXCJrZXlVcFwiXSxbXCJtb3VzZWRvd25cIixcIm1vdXNlRG93blwiXSxbXCJtb3VzZXVwXCIsXCJtb3VzZVVwXCJdLFtcInBhc3RlXCIsXCJwYXN0ZVwiXSxbXCJwYXVzZVwiLFwicGF1c2VcIl0sW1wicGxheVwiLFwicGxheVwiXSxbXCJwb2ludGVyY2FuY2VsXCIsXCJwb2ludGVyQ2FuY2VsXCJdLFtcInBvaW50ZXJkb3duXCIsXCJwb2ludGVyRG93blwiXSxcbltcInBvaW50ZXJ1cFwiLFwicG9pbnRlclVwXCJdLFtcInJhdGVjaGFuZ2VcIixcInJhdGVDaGFuZ2VcIl0sW1wicmVzZXRcIixcInJlc2V0XCJdLFtcInNlZWtlZFwiLFwic2Vla2VkXCJdLFtcInN1Ym1pdFwiLFwic3VibWl0XCJdLFtcInRvdWNoY2FuY2VsXCIsXCJ0b3VjaENhbmNlbFwiXSxbXCJ0b3VjaGVuZFwiLFwidG91Y2hFbmRcIl0sW1widG91Y2hzdGFydFwiLFwidG91Y2hTdGFydFwiXSxbXCJ2b2x1bWVjaGFuZ2VcIixcInZvbHVtZUNoYW5nZVwiXV0uZm9yRWFjaChmdW5jdGlvbihhKXtCZChhLCEwKX0pO3lkLmZvckVhY2goZnVuY3Rpb24oYSl7QmQoYSwhMSl9KTtcbnZhciBDZD17ZXZlbnRUeXBlczp6ZCxpc0ludGVyYWN0aXZlVG9wTGV2ZWxFdmVudFR5cGU6ZnVuY3Rpb24oYSl7YT1BZFthXTtyZXR1cm4gdm9pZCAwIT09YSYmITA9PT1hLmlzSW50ZXJhY3RpdmV9LGV4dHJhY3RFdmVudHM6ZnVuY3Rpb24oYSxiLGMsZCl7dmFyIGU9QWRbYV07aWYoIWUpcmV0dXJuIG51bGw7c3dpdGNoKGEpe2Nhc2UgXCJrZXlwcmVzc1wiOmlmKDA9PT1xZChjKSlyZXR1cm4gbnVsbDtjYXNlIFwia2V5ZG93blwiOmNhc2UgXCJrZXl1cFwiOmE9dGQ7YnJlYWs7Y2FzZSBcImJsdXJcIjpjYXNlIFwiZm9jdXNcIjphPXBkO2JyZWFrO2Nhc2UgXCJjbGlja1wiOmlmKDI9PT1jLmJ1dHRvbilyZXR1cm4gbnVsbDtjYXNlIFwiZGJsY2xpY2tcIjpjYXNlIFwibW91c2Vkb3duXCI6Y2FzZSBcIm1vdXNlbW92ZVwiOmNhc2UgXCJtb3VzZXVwXCI6Y2FzZSBcIm1vdXNlb3V0XCI6Y2FzZSBcIm1vdXNlb3ZlclwiOmNhc2UgXCJjb250ZXh0bWVudVwiOmE9ZWQ7YnJlYWs7Y2FzZSBcImRyYWdcIjpjYXNlIFwiZHJhZ2VuZFwiOmNhc2UgXCJkcmFnZW50ZXJcIjpjYXNlIFwiZHJhZ2V4aXRcIjpjYXNlIFwiZHJhZ2xlYXZlXCI6Y2FzZSBcImRyYWdvdmVyXCI6Y2FzZSBcImRyYWdzdGFydFwiOmNhc2UgXCJkcm9wXCI6YT1cbnVkO2JyZWFrO2Nhc2UgXCJ0b3VjaGNhbmNlbFwiOmNhc2UgXCJ0b3VjaGVuZFwiOmNhc2UgXCJ0b3VjaG1vdmVcIjpjYXNlIFwidG91Y2hzdGFydFwiOmE9dmQ7YnJlYWs7Y2FzZSBmYjpjYXNlIGdiOmNhc2UgaGI6YT1uZDticmVhaztjYXNlIGliOmE9d2Q7YnJlYWs7Y2FzZSBcInNjcm9sbFwiOmE9YWQ7YnJlYWs7Y2FzZSBcIndoZWVsXCI6YT14ZDticmVhaztjYXNlIFwiY29weVwiOmNhc2UgXCJjdXRcIjpjYXNlIFwicGFzdGVcIjphPW9kO2JyZWFrO2Nhc2UgXCJnb3Rwb2ludGVyY2FwdHVyZVwiOmNhc2UgXCJsb3N0cG9pbnRlcmNhcHR1cmVcIjpjYXNlIFwicG9pbnRlcmNhbmNlbFwiOmNhc2UgXCJwb2ludGVyZG93blwiOmNhc2UgXCJwb2ludGVybW92ZVwiOmNhc2UgXCJwb2ludGVyb3V0XCI6Y2FzZSBcInBvaW50ZXJvdmVyXCI6Y2FzZSBcInBvaW50ZXJ1cFwiOmE9ZmQ7YnJlYWs7ZGVmYXVsdDphPUh9Yj1hLmdldFBvb2xlZChlLGIsYyxkKTtZYShiKTtyZXR1cm4gYn19LERkPUNkLmlzSW50ZXJhY3RpdmVUb3BMZXZlbEV2ZW50VHlwZSxcbkVkPVtdO2Z1bmN0aW9uIEZkKGEpe3ZhciBiPWEudGFyZ2V0SW5zdDtkb3tpZighYil7YS5hbmNlc3RvcnMucHVzaChiKTticmVha312YXIgYztmb3IoYz1iO2MucmV0dXJuOyljPWMucmV0dXJuO2M9MyE9PWMudGFnP251bGw6Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztpZighYylicmVhazthLmFuY2VzdG9ycy5wdXNoKGIpO2I9TmEoYyl9d2hpbGUoYik7Zm9yKGM9MDtjPGEuYW5jZXN0b3JzLmxlbmd0aDtjKyspYj1hLmFuY2VzdG9yc1tjXSxKYShhLnRvcExldmVsVHlwZSxiLGEubmF0aXZlRXZlbnQsWmIoYS5uYXRpdmVFdmVudCkpfXZhciBHZD0hMDtmdW5jdGlvbiBJZChhKXtHZD0hIWF9ZnVuY3Rpb24gTChhLGIpe2lmKCFiKXJldHVybiBudWxsO3ZhciBjPShEZChhKT9KZDpLZCkuYmluZChudWxsLGEpO2IuYWRkRXZlbnRMaXN0ZW5lcihhLGMsITEpfVxuZnVuY3Rpb24gTGQoYSxiKXtpZighYilyZXR1cm4gbnVsbDt2YXIgYz0oRGQoYSk/SmQ6S2QpLmJpbmQobnVsbCxhKTtiLmFkZEV2ZW50TGlzdGVuZXIoYSxjLCEwKX1mdW5jdGlvbiBKZChhLGIpe1RiKEtkLGEsYil9ZnVuY3Rpb24gS2QoYSxiKXtpZihHZCl7dmFyIGM9WmIoYik7Yz1OYShjKTtudWxsPT09Y3x8XCJudW1iZXJcIiE9PXR5cGVvZiBjLnRhZ3x8Mj09PWlkKGMpfHwoYz1udWxsKTtpZihFZC5sZW5ndGgpe3ZhciBkPUVkLnBvcCgpO2QudG9wTGV2ZWxUeXBlPWE7ZC5uYXRpdmVFdmVudD1iO2QudGFyZ2V0SW5zdD1jO2E9ZH1lbHNlIGE9e3RvcExldmVsVHlwZTphLG5hdGl2ZUV2ZW50OmIsdGFyZ2V0SW5zdDpjLGFuY2VzdG9yczpbXX07dHJ5e1diKEZkLGEpfWZpbmFsbHl7YS50b3BMZXZlbFR5cGU9bnVsbCxhLm5hdGl2ZUV2ZW50PW51bGwsYS50YXJnZXRJbnN0PW51bGwsYS5hbmNlc3RvcnMubGVuZ3RoPTAsMTA+RWQubGVuZ3RoJiZFZC5wdXNoKGEpfX19XG52YXIgTWQ9e2dldCBfZW5hYmxlZCgpe3JldHVybiBHZH0sc2V0RW5hYmxlZDpJZCxpc0VuYWJsZWQ6ZnVuY3Rpb24oKXtyZXR1cm4gR2R9LHRyYXBCdWJibGVkRXZlbnQ6TCx0cmFwQ2FwdHVyZWRFdmVudDpMZCxkaXNwYXRjaEV2ZW50OktkfSxOZD17fSxPZD0wLFBkPVwiX3JlYWN0TGlzdGVuZXJzSURcIisoXCJcIitNYXRoLnJhbmRvbSgpKS5zbGljZSgyKTtmdW5jdGlvbiBRZChhKXtPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYSxQZCl8fChhW1BkXT1PZCsrLE5kW2FbUGRdXT17fSk7cmV0dXJuIE5kW2FbUGRdXX1mdW5jdGlvbiBSZChhKXtmb3IoO2EmJmEuZmlyc3RDaGlsZDspYT1hLmZpcnN0Q2hpbGQ7cmV0dXJuIGF9XG5mdW5jdGlvbiBTZChhLGIpe3ZhciBjPVJkKGEpO2E9MDtmb3IodmFyIGQ7Yzspe2lmKDM9PT1jLm5vZGVUeXBlKXtkPWErYy50ZXh0Q29udGVudC5sZW5ndGg7aWYoYTw9YiYmZD49YilyZXR1cm57bm9kZTpjLG9mZnNldDpiLWF9O2E9ZH1hOntmb3IoO2M7KXtpZihjLm5leHRTaWJsaW5nKXtjPWMubmV4dFNpYmxpbmc7YnJlYWsgYX1jPWMucGFyZW50Tm9kZX1jPXZvaWQgMH1jPVJkKGMpfX1mdW5jdGlvbiBUZChhKXt2YXIgYj1hJiZhLm5vZGVOYW1lJiZhLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7cmV0dXJuIGImJihcImlucHV0XCI9PT1iJiZcInRleHRcIj09PWEudHlwZXx8XCJ0ZXh0YXJlYVwiPT09Ynx8XCJ0cnVlXCI9PT1hLmNvbnRlbnRFZGl0YWJsZSl9XG52YXIgVWQ9bS5jYW5Vc2VET00mJlwiZG9jdW1lbnRNb2RlXCJpbiBkb2N1bWVudCYmMTE+PWRvY3VtZW50LmRvY3VtZW50TW9kZSxWZD17c2VsZWN0OntwaGFzZWRSZWdpc3RyYXRpb25OYW1lczp7YnViYmxlZDpcIm9uU2VsZWN0XCIsY2FwdHVyZWQ6XCJvblNlbGVjdENhcHR1cmVcIn0sZGVwZW5kZW5jaWVzOlwiYmx1ciBjb250ZXh0bWVudSBmb2N1cyBrZXlkb3duIGtleXVwIG1vdXNlZG93biBtb3VzZXVwIHNlbGVjdGlvbmNoYW5nZVwiLnNwbGl0KFwiIFwiKX19LFdkPW51bGwsWGQ9bnVsbCxZZD1udWxsLFpkPSExO1xuZnVuY3Rpb24gJGQoYSxiKXtpZihaZHx8bnVsbD09V2R8fFdkIT09ZGEoKSlyZXR1cm4gbnVsbDt2YXIgYz1XZDtcInNlbGVjdGlvblN0YXJ0XCJpbiBjJiZUZChjKT9jPXtzdGFydDpjLnNlbGVjdGlvblN0YXJ0LGVuZDpjLnNlbGVjdGlvbkVuZH06d2luZG93LmdldFNlbGVjdGlvbj8oYz13aW5kb3cuZ2V0U2VsZWN0aW9uKCksYz17YW5jaG9yTm9kZTpjLmFuY2hvck5vZGUsYW5jaG9yT2Zmc2V0OmMuYW5jaG9yT2Zmc2V0LGZvY3VzTm9kZTpjLmZvY3VzTm9kZSxmb2N1c09mZnNldDpjLmZvY3VzT2Zmc2V0fSk6Yz12b2lkIDA7cmV0dXJuIFlkJiZlYShZZCxjKT9udWxsOihZZD1jLGE9SC5nZXRQb29sZWQoVmQuc2VsZWN0LFhkLGEsYiksYS50eXBlPVwic2VsZWN0XCIsYS50YXJnZXQ9V2QsWWEoYSksYSl9XG52YXIgYWU9e2V2ZW50VHlwZXM6VmQsZXh0cmFjdEV2ZW50czpmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1kLndpbmRvdz09PWQ/ZC5kb2N1bWVudDo5PT09ZC5ub2RlVHlwZT9kOmQub3duZXJEb2N1bWVudCxmO2lmKCEoZj0hZSkpe2E6e2U9UWQoZSk7Zj1zYS5vblNlbGVjdDtmb3IodmFyIGc9MDtnPGYubGVuZ3RoO2crKyl7dmFyIGg9ZltnXTtpZighZS5oYXNPd25Qcm9wZXJ0eShoKXx8IWVbaF0pe2U9ITE7YnJlYWsgYX19ZT0hMH1mPSFlfWlmKGYpcmV0dXJuIG51bGw7ZT1iP09hKGIpOndpbmRvdztzd2l0Y2goYSl7Y2FzZSBcImZvY3VzXCI6aWYoWWIoZSl8fFwidHJ1ZVwiPT09ZS5jb250ZW50RWRpdGFibGUpV2Q9ZSxYZD1iLFlkPW51bGw7YnJlYWs7Y2FzZSBcImJsdXJcIjpZZD1YZD1XZD1udWxsO2JyZWFrO2Nhc2UgXCJtb3VzZWRvd25cIjpaZD0hMDticmVhaztjYXNlIFwiY29udGV4dG1lbnVcIjpjYXNlIFwibW91c2V1cFwiOnJldHVybiBaZD0hMSwkZChjLGQpO2Nhc2UgXCJzZWxlY3Rpb25jaGFuZ2VcIjppZihVZClicmVhaztcbmNhc2UgXCJrZXlkb3duXCI6Y2FzZSBcImtleXVwXCI6cmV0dXJuICRkKGMsZCl9cmV0dXJuIG51bGx9fTtHYS5pbmplY3RFdmVudFBsdWdpbk9yZGVyKFwiUmVzcG9uZGVyRXZlbnRQbHVnaW4gU2ltcGxlRXZlbnRQbHVnaW4gVGFwRXZlbnRQbHVnaW4gRW50ZXJMZWF2ZUV2ZW50UGx1Z2luIENoYW5nZUV2ZW50UGx1Z2luIFNlbGVjdEV2ZW50UGx1Z2luIEJlZm9yZUlucHV0RXZlbnRQbHVnaW5cIi5zcGxpdChcIiBcIikpO3dhPVFhLmdldEZpYmVyQ3VycmVudFByb3BzRnJvbU5vZGU7eGE9UWEuZ2V0SW5zdGFuY2VGcm9tTm9kZTt5YT1RYS5nZXROb2RlRnJvbUluc3RhbmNlO0dhLmluamVjdEV2ZW50UGx1Z2luc0J5TmFtZSh7U2ltcGxlRXZlbnRQbHVnaW46Q2QsRW50ZXJMZWF2ZUV2ZW50UGx1Z2luOmhkLENoYW5nZUV2ZW50UGx1Z2luOiRjLFNlbGVjdEV2ZW50UGx1Z2luOmFlLEJlZm9yZUlucHV0RXZlbnRQbHVnaW46SWJ9KTt2YXIgYmU9dm9pZCAwO1xuYmU9XCJvYmplY3RcIj09PXR5cGVvZiBwZXJmb3JtYW5jZSYmXCJmdW5jdGlvblwiPT09dHlwZW9mIHBlcmZvcm1hbmNlLm5vdz9mdW5jdGlvbigpe3JldHVybiBwZXJmb3JtYW5jZS5ub3coKX06ZnVuY3Rpb24oKXtyZXR1cm4gRGF0ZS5ub3coKX07dmFyIGNlPXZvaWQgMCxkZT12b2lkIDA7XG5pZihtLmNhblVzZURPTSl7dmFyIGVlPVtdLGZlPTAsZ2U9e30saGU9LTEsaWU9ITEsamU9ITEsa2U9MCxsZT0zMyxtZT0zMyxuZT17ZGlkVGltZW91dDohMSx0aW1lUmVtYWluaW5nOmZ1bmN0aW9uKCl7dmFyIGE9a2UtYmUoKTtyZXR1cm4gMDxhP2E6MH19LG9lPWZ1bmN0aW9uKGEsYil7aWYoZ2VbYl0pdHJ5e2EobmUpfWZpbmFsbHl7ZGVsZXRlIGdlW2JdfX0scGU9XCJfX3JlYWN0SWRsZUNhbGxiYWNrJFwiK01hdGgucmFuZG9tKCkudG9TdHJpbmcoMzYpLnNsaWNlKDIpO3dpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGZ1bmN0aW9uKGEpe2lmKGEuc291cmNlPT09d2luZG93JiZhLmRhdGE9PT1wZSYmKGllPSExLDAhPT1lZS5sZW5ndGgpKXtpZigwIT09ZWUubGVuZ3RoJiYoYT1iZSgpLCEoLTE9PT1oZXx8aGU+YSkpKXtoZT0tMTtuZS5kaWRUaW1lb3V0PSEwO2Zvcih2YXIgYj0wLGM9ZWUubGVuZ3RoO2I8YztiKyspe3ZhciBkPWVlW2JdLGU9ZC50aW1lb3V0VGltZTstMSE9PVxuZSYmZTw9YT9vZShkLnNjaGVkdWxlZENhbGxiYWNrLGQuY2FsbGJhY2tJZCk6LTEhPT1lJiYoLTE9PT1oZXx8ZTxoZSkmJihoZT1lKX19Zm9yKGE9YmUoKTswPGtlLWEmJjA8ZWUubGVuZ3RoOylhPWVlLnNoaWZ0KCksbmUuZGlkVGltZW91dD0hMSxvZShhLnNjaGVkdWxlZENhbGxiYWNrLGEuY2FsbGJhY2tJZCksYT1iZSgpOzA8ZWUubGVuZ3RoJiYhamUmJihqZT0hMCxyZXF1ZXN0QW5pbWF0aW9uRnJhbWUocWUpKX19LCExKTt2YXIgcWU9ZnVuY3Rpb24oYSl7amU9ITE7dmFyIGI9YS1rZSttZTtiPG1lJiZsZTxtZT8oOD5iJiYoYj04KSxtZT1iPGxlP2xlOmIpOmxlPWI7a2U9YSttZTtpZXx8KGllPSEwLHdpbmRvdy5wb3N0TWVzc2FnZShwZSxcIipcIikpfTtjZT1mdW5jdGlvbihhLGIpe3ZhciBjPS0xO251bGwhPWImJlwibnVtYmVyXCI9PT10eXBlb2YgYi50aW1lb3V0JiYoYz1iZSgpK2IudGltZW91dCk7aWYoLTE9PT1oZXx8LTEhPT1jJiZjPGhlKWhlPWM7ZmUrKztiPWZlO2VlLnB1c2goe3NjaGVkdWxlZENhbGxiYWNrOmEsXG5jYWxsYmFja0lkOmIsdGltZW91dFRpbWU6Y30pO2dlW2JdPSEwO2plfHwoamU9ITAscmVxdWVzdEFuaW1hdGlvbkZyYW1lKHFlKSk7cmV0dXJuIGJ9O2RlPWZ1bmN0aW9uKGEpe2RlbGV0ZSBnZVthXX19ZWxzZXt2YXIgcmU9MCxzZT17fTtjZT1mdW5jdGlvbihhKXt2YXIgYj1yZSsrLGM9c2V0VGltZW91dChmdW5jdGlvbigpe2Eoe3RpbWVSZW1haW5pbmc6ZnVuY3Rpb24oKXtyZXR1cm4gSW5maW5pdHl9LGRpZFRpbWVvdXQ6ITF9KX0pO3NlW2JdPWM7cmV0dXJuIGJ9O2RlPWZ1bmN0aW9uKGEpe3ZhciBiPXNlW2FdO2RlbGV0ZSBzZVthXTtjbGVhclRpbWVvdXQoYil9fWZ1bmN0aW9uIHRlKGEpe3ZhciBiPVwiXCI7Y2EuQ2hpbGRyZW4uZm9yRWFjaChhLGZ1bmN0aW9uKGEpe251bGw9PWF8fFwic3RyaW5nXCIhPT10eXBlb2YgYSYmXCJudW1iZXJcIiE9PXR5cGVvZiBhfHwoYis9YSl9KTtyZXR1cm4gYn1cbmZ1bmN0aW9uIHVlKGEsYil7YT1wKHtjaGlsZHJlbjp2b2lkIDB9LGIpO2lmKGI9dGUoYi5jaGlsZHJlbikpYS5jaGlsZHJlbj1iO3JldHVybiBhfWZ1bmN0aW9uIHZlKGEsYixjLGQpe2E9YS5vcHRpb25zO2lmKGIpe2I9e307Zm9yKHZhciBlPTA7ZTxjLmxlbmd0aDtlKyspYltcIiRcIitjW2VdXT0hMDtmb3IoYz0wO2M8YS5sZW5ndGg7YysrKWU9Yi5oYXNPd25Qcm9wZXJ0eShcIiRcIithW2NdLnZhbHVlKSxhW2NdLnNlbGVjdGVkIT09ZSYmKGFbY10uc2VsZWN0ZWQ9ZSksZSYmZCYmKGFbY10uZGVmYXVsdFNlbGVjdGVkPSEwKX1lbHNle2M9XCJcIitjO2I9bnVsbDtmb3IoZT0wO2U8YS5sZW5ndGg7ZSsrKXtpZihhW2VdLnZhbHVlPT09Yyl7YVtlXS5zZWxlY3RlZD0hMDtkJiYoYVtlXS5kZWZhdWx0U2VsZWN0ZWQ9ITApO3JldHVybn1udWxsIT09Ynx8YVtlXS5kaXNhYmxlZHx8KGI9YVtlXSl9bnVsbCE9PWImJihiLnNlbGVjdGVkPSEwKX19XG5mdW5jdGlvbiB3ZShhLGIpe3ZhciBjPWIudmFsdWU7YS5fd3JhcHBlclN0YXRlPXtpbml0aWFsVmFsdWU6bnVsbCE9Yz9jOmIuZGVmYXVsdFZhbHVlLHdhc011bHRpcGxlOiEhYi5tdWx0aXBsZX19ZnVuY3Rpb24geGUoYSxiKXtudWxsIT1iLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MP0EoXCI5MVwiKTp2b2lkIDA7cmV0dXJuIHAoe30sYix7dmFsdWU6dm9pZCAwLGRlZmF1bHRWYWx1ZTp2b2lkIDAsY2hpbGRyZW46XCJcIithLl93cmFwcGVyU3RhdGUuaW5pdGlhbFZhbHVlfSl9ZnVuY3Rpb24geWUoYSxiKXt2YXIgYz1iLnZhbHVlO251bGw9PWMmJihjPWIuZGVmYXVsdFZhbHVlLGI9Yi5jaGlsZHJlbixudWxsIT1iJiYobnVsbCE9Yz9BKFwiOTJcIik6dm9pZCAwLEFycmF5LmlzQXJyYXkoYikmJigxPj1iLmxlbmd0aD92b2lkIDA6QShcIjkzXCIpLGI9YlswXSksYz1cIlwiK2IpLG51bGw9PWMmJihjPVwiXCIpKTthLl93cmFwcGVyU3RhdGU9e2luaXRpYWxWYWx1ZTpcIlwiK2N9fVxuZnVuY3Rpb24gemUoYSxiKXt2YXIgYz1iLnZhbHVlO251bGwhPWMmJihjPVwiXCIrYyxjIT09YS52YWx1ZSYmKGEudmFsdWU9YyksbnVsbD09Yi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1jKSk7bnVsbCE9Yi5kZWZhdWx0VmFsdWUmJihhLmRlZmF1bHRWYWx1ZT1iLmRlZmF1bHRWYWx1ZSl9ZnVuY3Rpb24gQWUoYSl7dmFyIGI9YS50ZXh0Q29udGVudDtiPT09YS5fd3JhcHBlclN0YXRlLmluaXRpYWxWYWx1ZSYmKGEudmFsdWU9Yil9dmFyIEJlPXtodG1sOlwiaHR0cDovL3d3dy53My5vcmcvMTk5OS94aHRtbFwiLG1hdGhtbDpcImh0dHA6Ly93d3cudzMub3JnLzE5OTgvTWF0aC9NYXRoTUxcIixzdmc6XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wifTtcbmZ1bmN0aW9uIENlKGEpe3N3aXRjaChhKXtjYXNlIFwic3ZnXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiO2Nhc2UgXCJtYXRoXCI6cmV0dXJuXCJodHRwOi8vd3d3LnczLm9yZy8xOTk4L01hdGgvTWF0aE1MXCI7ZGVmYXVsdDpyZXR1cm5cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIn19ZnVuY3Rpb24gRGUoYSxiKXtyZXR1cm4gbnVsbD09YXx8XCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sXCI9PT1hP0NlKGIpOlwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIj09PWEmJlwiZm9yZWlnbk9iamVjdFwiPT09Yj9cImh0dHA6Ly93d3cudzMub3JnLzE5OTkveGh0bWxcIjphfVxudmFyIEVlPXZvaWQgMCxGZT1mdW5jdGlvbihhKXtyZXR1cm5cInVuZGVmaW5lZFwiIT09dHlwZW9mIE1TQXBwJiZNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbj9mdW5jdGlvbihiLGMsZCxlKXtNU0FwcC5leGVjVW5zYWZlTG9jYWxGdW5jdGlvbihmdW5jdGlvbigpe3JldHVybiBhKGIsYyxkLGUpfSl9OmF9KGZ1bmN0aW9uKGEsYil7aWYoYS5uYW1lc3BhY2VVUkkhPT1CZS5zdmd8fFwiaW5uZXJIVE1MXCJpbiBhKWEuaW5uZXJIVE1MPWI7ZWxzZXtFZT1FZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtFZS5pbm5lckhUTUw9XCI8c3ZnPlwiK2IrXCI8L3N2Zz5cIjtmb3IoYj1FZS5maXJzdENoaWxkO2EuZmlyc3RDaGlsZDspYS5yZW1vdmVDaGlsZChhLmZpcnN0Q2hpbGQpO2Zvcig7Yi5maXJzdENoaWxkOylhLmFwcGVuZENoaWxkKGIuZmlyc3RDaGlsZCl9fSk7XG5mdW5jdGlvbiBHZShhLGIpe2lmKGIpe3ZhciBjPWEuZmlyc3RDaGlsZDtpZihjJiZjPT09YS5sYXN0Q2hpbGQmJjM9PT1jLm5vZGVUeXBlKXtjLm5vZGVWYWx1ZT1iO3JldHVybn19YS50ZXh0Q29udGVudD1ifVxudmFyIEhlPXthbmltYXRpb25JdGVyYXRpb25Db3VudDohMCxib3JkZXJJbWFnZU91dHNldDohMCxib3JkZXJJbWFnZVNsaWNlOiEwLGJvcmRlckltYWdlV2lkdGg6ITAsYm94RmxleDohMCxib3hGbGV4R3JvdXA6ITAsYm94T3JkaW5hbEdyb3VwOiEwLGNvbHVtbkNvdW50OiEwLGNvbHVtbnM6ITAsZmxleDohMCxmbGV4R3JvdzohMCxmbGV4UG9zaXRpdmU6ITAsZmxleFNocmluazohMCxmbGV4TmVnYXRpdmU6ITAsZmxleE9yZGVyOiEwLGdyaWRSb3c6ITAsZ3JpZFJvd0VuZDohMCxncmlkUm93U3BhbjohMCxncmlkUm93U3RhcnQ6ITAsZ3JpZENvbHVtbjohMCxncmlkQ29sdW1uRW5kOiEwLGdyaWRDb2x1bW5TcGFuOiEwLGdyaWRDb2x1bW5TdGFydDohMCxmb250V2VpZ2h0OiEwLGxpbmVDbGFtcDohMCxsaW5lSGVpZ2h0OiEwLG9wYWNpdHk6ITAsb3JkZXI6ITAsb3JwaGFuczohMCx0YWJTaXplOiEwLHdpZG93czohMCx6SW5kZXg6ITAsem9vbTohMCxmaWxsT3BhY2l0eTohMCxmbG9vZE9wYWNpdHk6ITAsXG5zdG9wT3BhY2l0eTohMCxzdHJva2VEYXNoYXJyYXk6ITAsc3Ryb2tlRGFzaG9mZnNldDohMCxzdHJva2VNaXRlcmxpbWl0OiEwLHN0cm9rZU9wYWNpdHk6ITAsc3Ryb2tlV2lkdGg6ITB9LEllPVtcIldlYmtpdFwiLFwibXNcIixcIk1velwiLFwiT1wiXTtPYmplY3Qua2V5cyhIZSkuZm9yRWFjaChmdW5jdGlvbihhKXtJZS5mb3JFYWNoKGZ1bmN0aW9uKGIpe2I9YithLmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK2Euc3Vic3RyaW5nKDEpO0hlW2JdPUhlW2FdfSl9KTtcbmZ1bmN0aW9uIEplKGEsYil7YT1hLnN0eWxlO2Zvcih2YXIgYyBpbiBiKWlmKGIuaGFzT3duUHJvcGVydHkoYykpe3ZhciBkPTA9PT1jLmluZGV4T2YoXCItLVwiKTt2YXIgZT1jO3ZhciBmPWJbY107ZT1udWxsPT1mfHxcImJvb2xlYW5cIj09PXR5cGVvZiBmfHxcIlwiPT09Zj9cIlwiOmR8fFwibnVtYmVyXCIhPT10eXBlb2YgZnx8MD09PWZ8fEhlLmhhc093blByb3BlcnR5KGUpJiZIZVtlXT8oXCJcIitmKS50cmltKCk6ZitcInB4XCI7XCJmbG9hdFwiPT09YyYmKGM9XCJjc3NGbG9hdFwiKTtkP2Euc2V0UHJvcGVydHkoYyxlKTphW2NdPWV9fXZhciBLZT1wKHttZW51aXRlbTohMH0se2FyZWE6ITAsYmFzZTohMCxicjohMCxjb2w6ITAsZW1iZWQ6ITAsaHI6ITAsaW1nOiEwLGlucHV0OiEwLGtleWdlbjohMCxsaW5rOiEwLG1ldGE6ITAscGFyYW06ITAsc291cmNlOiEwLHRyYWNrOiEwLHdicjohMH0pO1xuZnVuY3Rpb24gTGUoYSxiLGMpe2ImJihLZVthXSYmKG51bGwhPWIuY2hpbGRyZW58fG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw/QShcIjEzN1wiLGEsYygpKTp2b2lkIDApLG51bGwhPWIuZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwmJihudWxsIT1iLmNoaWxkcmVuP0EoXCI2MFwiKTp2b2lkIDAsXCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZcIl9faHRtbFwiaW4gYi5kYW5nZXJvdXNseVNldElubmVySFRNTD92b2lkIDA6QShcIjYxXCIpKSxudWxsIT1iLnN0eWxlJiZcIm9iamVjdFwiIT09dHlwZW9mIGIuc3R5bGU/QShcIjYyXCIsYygpKTp2b2lkIDApfVxuZnVuY3Rpb24gTWUoYSxiKXtpZigtMT09PWEuaW5kZXhPZihcIi1cIikpcmV0dXJuXCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzO3N3aXRjaChhKXtjYXNlIFwiYW5ub3RhdGlvbi14bWxcIjpjYXNlIFwiY29sb3ItcHJvZmlsZVwiOmNhc2UgXCJmb250LWZhY2VcIjpjYXNlIFwiZm9udC1mYWNlLXNyY1wiOmNhc2UgXCJmb250LWZhY2UtdXJpXCI6Y2FzZSBcImZvbnQtZmFjZS1mb3JtYXRcIjpjYXNlIFwiZm9udC1mYWNlLW5hbWVcIjpjYXNlIFwibWlzc2luZy1nbHlwaFwiOnJldHVybiExO2RlZmF1bHQ6cmV0dXJuITB9fXZhciBOZT12LnRoYXRSZXR1cm5zKFwiXCIpO1xuZnVuY3Rpb24gT2UoYSxiKXthPTk9PT1hLm5vZGVUeXBlfHwxMT09PWEubm9kZVR5cGU/YTphLm93bmVyRG9jdW1lbnQ7dmFyIGM9UWQoYSk7Yj1zYVtiXTtmb3IodmFyIGQ9MDtkPGIubGVuZ3RoO2QrKyl7dmFyIGU9YltkXTtpZighYy5oYXNPd25Qcm9wZXJ0eShlKXx8IWNbZV0pe3N3aXRjaChlKXtjYXNlIFwic2Nyb2xsXCI6TGQoXCJzY3JvbGxcIixhKTticmVhaztjYXNlIFwiZm9jdXNcIjpjYXNlIFwiYmx1clwiOkxkKFwiZm9jdXNcIixhKTtMZChcImJsdXJcIixhKTtjLmJsdXI9ITA7Yy5mb2N1cz0hMDticmVhaztjYXNlIFwiY2FuY2VsXCI6Y2FzZSBcImNsb3NlXCI6JGIoZSwhMCkmJkxkKGUsYSk7YnJlYWs7Y2FzZSBcImludmFsaWRcIjpjYXNlIFwic3VibWl0XCI6Y2FzZSBcInJlc2V0XCI6YnJlYWs7ZGVmYXVsdDotMT09PWpiLmluZGV4T2YoZSkmJkwoZSxhKX1jW2VdPSEwfX19XG5mdW5jdGlvbiBQZShhLGIsYyxkKXtjPTk9PT1jLm5vZGVUeXBlP2M6Yy5vd25lckRvY3VtZW50O2Q9PT1CZS5odG1sJiYoZD1DZShhKSk7ZD09PUJlLmh0bWw/XCJzY3JpcHRcIj09PWE/KGE9Yy5jcmVhdGVFbGVtZW50KFwiZGl2XCIpLGEuaW5uZXJIVE1MPVwiPHNjcmlwdD5cXHgzYy9zY3JpcHQ+XCIsYT1hLnJlbW92ZUNoaWxkKGEuZmlyc3RDaGlsZCkpOmE9XCJzdHJpbmdcIj09PXR5cGVvZiBiLmlzP2MuY3JlYXRlRWxlbWVudChhLHtpczpiLmlzfSk6Yy5jcmVhdGVFbGVtZW50KGEpOmE9Yy5jcmVhdGVFbGVtZW50TlMoZCxhKTtyZXR1cm4gYX1mdW5jdGlvbiBRZShhLGIpe3JldHVybig5PT09Yi5ub2RlVHlwZT9iOmIub3duZXJEb2N1bWVudCkuY3JlYXRlVGV4dE5vZGUoYSl9XG5mdW5jdGlvbiBSZShhLGIsYyxkKXt2YXIgZT1NZShiLGMpO3N3aXRjaChiKXtjYXNlIFwiaWZyYW1lXCI6Y2FzZSBcIm9iamVjdFwiOkwoXCJsb2FkXCIsYSk7dmFyIGY9YzticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZj0wO2Y8amIubGVuZ3RoO2YrKylMKGpiW2ZdLGEpO2Y9YzticmVhaztjYXNlIFwic291cmNlXCI6TChcImVycm9yXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJpbWdcIjpjYXNlIFwiaW1hZ2VcIjpjYXNlIFwibGlua1wiOkwoXCJlcnJvclwiLGEpO0woXCJsb2FkXCIsYSk7Zj1jO2JyZWFrO2Nhc2UgXCJmb3JtXCI6TChcInJlc2V0XCIsYSk7TChcInN1Ym1pdFwiLGEpO2Y9YzticmVhaztjYXNlIFwiZGV0YWlsc1wiOkwoXCJ0b2dnbGVcIixhKTtmPWM7YnJlYWs7Y2FzZSBcImlucHV0XCI6R2MoYSxjKTtmPUZjKGEsYyk7TChcImludmFsaWRcIixhKTtPZShkLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcIm9wdGlvblwiOmY9dWUoYSxjKTticmVhaztjYXNlIFwic2VsZWN0XCI6d2UoYSxjKTtmPXAoe30sYyx7dmFsdWU6dm9pZCAwfSk7XG5MKFwiaW52YWxpZFwiLGEpO09lKGQsXCJvbkNoYW5nZVwiKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjp5ZShhLGMpO2Y9eGUoYSxjKTtMKFwiaW52YWxpZFwiLGEpO09lKGQsXCJvbkNoYW5nZVwiKTticmVhaztkZWZhdWx0OmY9Y31MZShiLGYsTmUpO3ZhciBnPWYsaDtmb3IoaCBpbiBnKWlmKGcuaGFzT3duUHJvcGVydHkoaCkpe3ZhciBrPWdbaF07XCJzdHlsZVwiPT09aD9KZShhLGssTmUpOlwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWg/KGs9az9rLl9faHRtbDp2b2lkIDAsbnVsbCE9ayYmRmUoYSxrKSk6XCJjaGlsZHJlblwiPT09aD9cInN0cmluZ1wiPT09dHlwZW9mIGs/KFwidGV4dGFyZWFcIiE9PWJ8fFwiXCIhPT1rKSYmR2UoYSxrKTpcIm51bWJlclwiPT09dHlwZW9mIGsmJkdlKGEsXCJcIitrKTpcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09aCYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWgmJlwiYXV0b0ZvY3VzXCIhPT1oJiYocmEuaGFzT3duUHJvcGVydHkoaCk/bnVsbCE9ayYmT2UoZCxcbmgpOm51bGwhPWsmJkVjKGEsaCxrLGUpKX1zd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Y2MoYSk7TGMoYSxjKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjYyhhKTtBZShhLGMpO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpudWxsIT1jLnZhbHVlJiZhLnNldEF0dHJpYnV0ZShcInZhbHVlXCIsYy52YWx1ZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEubXVsdGlwbGU9ISFjLm11bHRpcGxlO2I9Yy52YWx1ZTtudWxsIT1iP3ZlKGEsISFjLm11bHRpcGxlLGIsITEpOm51bGwhPWMuZGVmYXVsdFZhbHVlJiZ2ZShhLCEhYy5tdWx0aXBsZSxjLmRlZmF1bHRWYWx1ZSwhMCk7YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgZi5vbkNsaWNrJiYoYS5vbmNsaWNrPXYpfX1cbmZ1bmN0aW9uIFNlKGEsYixjLGQsZSl7dmFyIGY9bnVsbDtzd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Yz1GYyhhLGMpO2Q9RmMoYSxkKTtmPVtdO2JyZWFrO2Nhc2UgXCJvcHRpb25cIjpjPXVlKGEsYyk7ZD11ZShhLGQpO2Y9W107YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmM9cCh7fSxjLHt2YWx1ZTp2b2lkIDB9KTtkPXAoe30sZCx7dmFsdWU6dm9pZCAwfSk7Zj1bXTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjPXhlKGEsYyk7ZD14ZShhLGQpO2Y9W107YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5vbkNsaWNrJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5vbkNsaWNrJiYoYS5vbmNsaWNrPXYpfUxlKGIsZCxOZSk7Yj1hPXZvaWQgMDt2YXIgZz1udWxsO2ZvcihhIGluIGMpaWYoIWQuaGFzT3duUHJvcGVydHkoYSkmJmMuaGFzT3duUHJvcGVydHkoYSkmJm51bGwhPWNbYV0paWYoXCJzdHlsZVwiPT09YSl7dmFyIGg9Y1thXTtmb3IoYiBpbiBoKWguaGFzT3duUHJvcGVydHkoYikmJihnfHxcbihnPXt9KSxnW2JdPVwiXCIpfWVsc2VcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCIhPT1hJiZcImNoaWxkcmVuXCIhPT1hJiZcInN1cHByZXNzQ29udGVudEVkaXRhYmxlV2FybmluZ1wiIT09YSYmXCJzdXBwcmVzc0h5ZHJhdGlvbldhcm5pbmdcIiE9PWEmJlwiYXV0b0ZvY3VzXCIhPT1hJiYocmEuaGFzT3duUHJvcGVydHkoYSk/Znx8KGY9W10pOihmPWZ8fFtdKS5wdXNoKGEsbnVsbCkpO2ZvcihhIGluIGQpe3ZhciBrPWRbYV07aD1udWxsIT1jP2NbYV06dm9pZCAwO2lmKGQuaGFzT3duUHJvcGVydHkoYSkmJmshPT1oJiYobnVsbCE9a3x8bnVsbCE9aCkpaWYoXCJzdHlsZVwiPT09YSlpZihoKXtmb3IoYiBpbiBoKSFoLmhhc093blByb3BlcnR5KGIpfHxrJiZrLmhhc093blByb3BlcnR5KGIpfHwoZ3x8KGc9e30pLGdbYl09XCJcIik7Zm9yKGIgaW4gaylrLmhhc093blByb3BlcnR5KGIpJiZoW2JdIT09a1tiXSYmKGd8fChnPXt9KSxnW2JdPWtbYl0pfWVsc2UgZ3x8KGZ8fChmPVtdKSxmLnB1c2goYSxnKSksXG5nPWs7ZWxzZVwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUxcIj09PWE/KGs9az9rLl9faHRtbDp2b2lkIDAsaD1oP2guX19odG1sOnZvaWQgMCxudWxsIT1rJiZoIT09ayYmKGY9Znx8W10pLnB1c2goYSxcIlwiK2spKTpcImNoaWxkcmVuXCI9PT1hP2g9PT1rfHxcInN0cmluZ1wiIT09dHlwZW9mIGsmJlwibnVtYmVyXCIhPT10eXBlb2Yga3x8KGY9Znx8W10pLnB1c2goYSxcIlwiK2spOlwic3VwcHJlc3NDb250ZW50RWRpdGFibGVXYXJuaW5nXCIhPT1hJiZcInN1cHByZXNzSHlkcmF0aW9uV2FybmluZ1wiIT09YSYmKHJhLmhhc093blByb3BlcnR5KGEpPyhudWxsIT1rJiZPZShlLGEpLGZ8fGg9PT1rfHwoZj1bXSkpOihmPWZ8fFtdKS5wdXNoKGEsaykpfWcmJihmPWZ8fFtdKS5wdXNoKFwic3R5bGVcIixnKTtyZXR1cm4gZn1cbmZ1bmN0aW9uIFRlKGEsYixjLGQsZSl7XCJpbnB1dFwiPT09YyYmXCJyYWRpb1wiPT09ZS50eXBlJiZudWxsIT1lLm5hbWUmJkljKGEsZSk7TWUoYyxkKTtkPU1lKGMsZSk7Zm9yKHZhciBmPTA7ZjxiLmxlbmd0aDtmKz0yKXt2YXIgZz1iW2ZdLGg9YltmKzFdO1wic3R5bGVcIj09PWc/SmUoYSxoLE5lKTpcImRhbmdlcm91c2x5U2V0SW5uZXJIVE1MXCI9PT1nP0ZlKGEsaCk6XCJjaGlsZHJlblwiPT09Zz9HZShhLGgpOkVjKGEsZyxoLGQpfXN3aXRjaChjKXtjYXNlIFwiaW5wdXRcIjpKYyhhLGUpO2JyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnplKGEsZSk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmEuX3dyYXBwZXJTdGF0ZS5pbml0aWFsVmFsdWU9dm9pZCAwLGI9YS5fd3JhcHBlclN0YXRlLndhc011bHRpcGxlLGEuX3dyYXBwZXJTdGF0ZS53YXNNdWx0aXBsZT0hIWUubXVsdGlwbGUsYz1lLnZhbHVlLG51bGwhPWM/dmUoYSwhIWUubXVsdGlwbGUsYywhMSk6YiE9PSEhZS5tdWx0aXBsZSYmKG51bGwhPWUuZGVmYXVsdFZhbHVlP1xudmUoYSwhIWUubXVsdGlwbGUsZS5kZWZhdWx0VmFsdWUsITApOnZlKGEsISFlLm11bHRpcGxlLGUubXVsdGlwbGU/W106XCJcIiwhMSkpfX1cbmZ1bmN0aW9uIFVlKGEsYixjLGQsZSl7c3dpdGNoKGIpe2Nhc2UgXCJpZnJhbWVcIjpjYXNlIFwib2JqZWN0XCI6TChcImxvYWRcIixhKTticmVhaztjYXNlIFwidmlkZW9cIjpjYXNlIFwiYXVkaW9cIjpmb3IoZD0wO2Q8amIubGVuZ3RoO2QrKylMKGpiW2RdLGEpO2JyZWFrO2Nhc2UgXCJzb3VyY2VcIjpMKFwiZXJyb3JcIixhKTticmVhaztjYXNlIFwiaW1nXCI6Y2FzZSBcImltYWdlXCI6Y2FzZSBcImxpbmtcIjpMKFwiZXJyb3JcIixhKTtMKFwibG9hZFwiLGEpO2JyZWFrO2Nhc2UgXCJmb3JtXCI6TChcInJlc2V0XCIsYSk7TChcInN1Ym1pdFwiLGEpO2JyZWFrO2Nhc2UgXCJkZXRhaWxzXCI6TChcInRvZ2dsZVwiLGEpO2JyZWFrO2Nhc2UgXCJpbnB1dFwiOkdjKGEsYyk7TChcImludmFsaWRcIixhKTtPZShlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOndlKGEsYyk7TChcImludmFsaWRcIixhKTtPZShlLFwib25DaGFuZ2VcIik7YnJlYWs7Y2FzZSBcInRleHRhcmVhXCI6eWUoYSxjKSxMKFwiaW52YWxpZFwiLGEpLE9lKGUsXCJvbkNoYW5nZVwiKX1MZShiLFxuYyxOZSk7ZD1udWxsO2Zvcih2YXIgZiBpbiBjKWlmKGMuaGFzT3duUHJvcGVydHkoZikpe3ZhciBnPWNbZl07XCJjaGlsZHJlblwiPT09Zj9cInN0cmluZ1wiPT09dHlwZW9mIGc/YS50ZXh0Q29udGVudCE9PWcmJihkPVtcImNoaWxkcmVuXCIsZ10pOlwibnVtYmVyXCI9PT10eXBlb2YgZyYmYS50ZXh0Q29udGVudCE9PVwiXCIrZyYmKGQ9W1wiY2hpbGRyZW5cIixcIlwiK2ddKTpyYS5oYXNPd25Qcm9wZXJ0eShmKSYmbnVsbCE9ZyYmT2UoZSxmKX1zd2l0Y2goYil7Y2FzZSBcImlucHV0XCI6Y2MoYSk7TGMoYSxjKTticmVhaztjYXNlIFwidGV4dGFyZWFcIjpjYyhhKTtBZShhLGMpO2JyZWFrO2Nhc2UgXCJzZWxlY3RcIjpjYXNlIFwib3B0aW9uXCI6YnJlYWs7ZGVmYXVsdDpcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5vbkNsaWNrJiYoYS5vbmNsaWNrPXYpfXJldHVybiBkfWZ1bmN0aW9uIFZlKGEsYil7cmV0dXJuIGEubm9kZVZhbHVlIT09Yn1cbnZhciBXZT17Y3JlYXRlRWxlbWVudDpQZSxjcmVhdGVUZXh0Tm9kZTpRZSxzZXRJbml0aWFsUHJvcGVydGllczpSZSxkaWZmUHJvcGVydGllczpTZSx1cGRhdGVQcm9wZXJ0aWVzOlRlLGRpZmZIeWRyYXRlZFByb3BlcnRpZXM6VWUsZGlmZkh5ZHJhdGVkVGV4dDpWZSx3YXJuRm9yVW5tYXRjaGVkVGV4dDpmdW5jdGlvbigpe30sd2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlRWxlbWVudDpmdW5jdGlvbigpe30sd2FybkZvckRlbGV0ZWRIeWRyYXRhYmxlVGV4dDpmdW5jdGlvbigpe30sd2FybkZvckluc2VydGVkSHlkcmF0ZWRFbGVtZW50OmZ1bmN0aW9uKCl7fSx3YXJuRm9ySW5zZXJ0ZWRIeWRyYXRlZFRleHQ6ZnVuY3Rpb24oKXt9LHJlc3RvcmVDb250cm9sbGVkU3RhdGU6ZnVuY3Rpb24oYSxiLGMpe3N3aXRjaChiKXtjYXNlIFwiaW5wdXRcIjpKYyhhLGMpO2I9Yy5uYW1lO2lmKFwicmFkaW9cIj09PWMudHlwZSYmbnVsbCE9Yil7Zm9yKGM9YTtjLnBhcmVudE5vZGU7KWM9Yy5wYXJlbnROb2RlO1xuYz1jLnF1ZXJ5U2VsZWN0b3JBbGwoXCJpbnB1dFtuYW1lPVwiK0pTT04uc3RyaW5naWZ5KFwiXCIrYikrJ11bdHlwZT1cInJhZGlvXCJdJyk7Zm9yKGI9MDtiPGMubGVuZ3RoO2IrKyl7dmFyIGQ9Y1tiXTtpZihkIT09YSYmZC5mb3JtPT09YS5mb3JtKXt2YXIgZT1QYShkKTtlP3ZvaWQgMDpBKFwiOTBcIik7ZGMoZCk7SmMoZCxlKX19fWJyZWFrO2Nhc2UgXCJ0ZXh0YXJlYVwiOnplKGEsYyk7YnJlYWs7Y2FzZSBcInNlbGVjdFwiOmI9Yy52YWx1ZSxudWxsIT1iJiZ2ZShhLCEhYy5tdWx0aXBsZSxiLCExKX19fSxYZT1udWxsLFllPW51bGw7ZnVuY3Rpb24gWmUoYSxiKXtzd2l0Y2goYSl7Y2FzZSBcImJ1dHRvblwiOmNhc2UgXCJpbnB1dFwiOmNhc2UgXCJzZWxlY3RcIjpjYXNlIFwidGV4dGFyZWFcIjpyZXR1cm4hIWIuYXV0b0ZvY3VzfXJldHVybiExfVxuZnVuY3Rpb24gJGUoYSxiKXtyZXR1cm5cInRleHRhcmVhXCI9PT1hfHxcInN0cmluZ1wiPT09dHlwZW9mIGIuY2hpbGRyZW58fFwibnVtYmVyXCI9PT10eXBlb2YgYi5jaGlsZHJlbnx8XCJvYmplY3RcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MJiZudWxsIT09Yi5kYW5nZXJvdXNseVNldElubmVySFRNTCYmXCJzdHJpbmdcIj09PXR5cGVvZiBiLmRhbmdlcm91c2x5U2V0SW5uZXJIVE1MLl9faHRtbH12YXIgYWY9YmUsYmY9Y2UsY2Y9ZGU7ZnVuY3Rpb24gZGYoYSl7Zm9yKGE9YS5uZXh0U2libGluZzthJiYxIT09YS5ub2RlVHlwZSYmMyE9PWEubm9kZVR5cGU7KWE9YS5uZXh0U2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlZihhKXtmb3IoYT1hLmZpcnN0Q2hpbGQ7YSYmMSE9PWEubm9kZVR5cGUmJjMhPT1hLm5vZGVUeXBlOylhPWEubmV4dFNpYmxpbmc7cmV0dXJuIGF9bmV3IFNldDt2YXIgZmY9W10sZ2Y9LTE7ZnVuY3Rpb24gaGYoYSl7cmV0dXJue2N1cnJlbnQ6YX19XG5mdW5jdGlvbiBNKGEpezA+Z2Z8fChhLmN1cnJlbnQ9ZmZbZ2ZdLGZmW2dmXT1udWxsLGdmLS0pfWZ1bmN0aW9uIE4oYSxiKXtnZisrO2ZmW2dmXT1hLmN1cnJlbnQ7YS5jdXJyZW50PWJ9dmFyIGpmPWhmKGhhKSxPPWhmKCExKSxrZj1oYTtmdW5jdGlvbiBsZihhKXtyZXR1cm4gbWYoYSk/a2Y6amYuY3VycmVudH1cbmZ1bmN0aW9uIG5mKGEsYil7dmFyIGM9YS50eXBlLmNvbnRleHRUeXBlcztpZighYylyZXR1cm4gaGE7dmFyIGQ9YS5zdGF0ZU5vZGU7aWYoZCYmZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZFVubWFza2VkQ2hpbGRDb250ZXh0PT09YilyZXR1cm4gZC5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1hc2tlZENoaWxkQ29udGV4dDt2YXIgZT17fSxmO2ZvcihmIGluIGMpZVtmXT1iW2ZdO2QmJihhPWEuc3RhdGVOb2RlLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRVbm1hc2tlZENoaWxkQ29udGV4dD1iLGEuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNYXNrZWRDaGlsZENvbnRleHQ9ZSk7cmV0dXJuIGV9ZnVuY3Rpb24gbWYoYSl7cmV0dXJuIDI9PT1hLnRhZyYmbnVsbCE9YS50eXBlLmNoaWxkQ29udGV4dFR5cGVzfWZ1bmN0aW9uIG9mKGEpe21mKGEpJiYoTShPLGEpLE0oamYsYSkpfWZ1bmN0aW9uIHBmKGEpe00oTyxhKTtNKGpmLGEpfVxuZnVuY3Rpb24gcWYoYSxiLGMpe2pmLmN1cnJlbnQhPT1oYT9BKFwiMTY4XCIpOnZvaWQgMDtOKGpmLGIsYSk7TihPLGMsYSl9ZnVuY3Rpb24gcmYoYSxiKXt2YXIgYz1hLnN0YXRlTm9kZSxkPWEudHlwZS5jaGlsZENvbnRleHRUeXBlcztpZihcImZ1bmN0aW9uXCIhPT10eXBlb2YgYy5nZXRDaGlsZENvbnRleHQpcmV0dXJuIGI7Yz1jLmdldENoaWxkQ29udGV4dCgpO2Zvcih2YXIgZSBpbiBjKWUgaW4gZD92b2lkIDA6QShcIjEwOFwiLHRjKGEpfHxcIlVua25vd25cIixlKTtyZXR1cm4gcCh7fSxiLGMpfWZ1bmN0aW9uIHNmKGEpe2lmKCFtZihhKSlyZXR1cm4hMTt2YXIgYj1hLnN0YXRlTm9kZTtiPWImJmIuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHR8fGhhO2tmPWpmLmN1cnJlbnQ7TihqZixiLGEpO04oTyxPLmN1cnJlbnQsYSk7cmV0dXJuITB9XG5mdW5jdGlvbiB0ZihhLGIpe3ZhciBjPWEuc3RhdGVOb2RlO2M/dm9pZCAwOkEoXCIxNjlcIik7aWYoYil7dmFyIGQ9cmYoYSxrZik7Yy5fX3JlYWN0SW50ZXJuYWxNZW1vaXplZE1lcmdlZENoaWxkQ29udGV4dD1kO00oTyxhKTtNKGpmLGEpO04oamYsZCxhKX1lbHNlIE0oTyxhKTtOKE8sYixhKX1cbmZ1bmN0aW9uIHVmKGEsYixjLGQpe3RoaXMudGFnPWE7dGhpcy5rZXk9Yzt0aGlzLnNpYmxpbmc9dGhpcy5jaGlsZD10aGlzLnJldHVybj10aGlzLnN0YXRlTm9kZT10aGlzLnR5cGU9bnVsbDt0aGlzLmluZGV4PTA7dGhpcy5yZWY9bnVsbDt0aGlzLnBlbmRpbmdQcm9wcz1iO3RoaXMubWVtb2l6ZWRTdGF0ZT10aGlzLnVwZGF0ZVF1ZXVlPXRoaXMubWVtb2l6ZWRQcm9wcz1udWxsO3RoaXMubW9kZT1kO3RoaXMuZWZmZWN0VGFnPTA7dGhpcy5sYXN0RWZmZWN0PXRoaXMuZmlyc3RFZmZlY3Q9dGhpcy5uZXh0RWZmZWN0PW51bGw7dGhpcy5leHBpcmF0aW9uVGltZT0wO3RoaXMuYWx0ZXJuYXRlPW51bGx9XG5mdW5jdGlvbiB2ZihhLGIsYyl7dmFyIGQ9YS5hbHRlcm5hdGU7bnVsbD09PWQ/KGQ9bmV3IHVmKGEudGFnLGIsYS5rZXksYS5tb2RlKSxkLnR5cGU9YS50eXBlLGQuc3RhdGVOb2RlPWEuc3RhdGVOb2RlLGQuYWx0ZXJuYXRlPWEsYS5hbHRlcm5hdGU9ZCk6KGQucGVuZGluZ1Byb3BzPWIsZC5lZmZlY3RUYWc9MCxkLm5leHRFZmZlY3Q9bnVsbCxkLmZpcnN0RWZmZWN0PW51bGwsZC5sYXN0RWZmZWN0PW51bGwpO2QuZXhwaXJhdGlvblRpbWU9YztkLmNoaWxkPWEuY2hpbGQ7ZC5tZW1vaXplZFByb3BzPWEubWVtb2l6ZWRQcm9wcztkLm1lbW9pemVkU3RhdGU9YS5tZW1vaXplZFN0YXRlO2QudXBkYXRlUXVldWU9YS51cGRhdGVRdWV1ZTtkLnNpYmxpbmc9YS5zaWJsaW5nO2QuaW5kZXg9YS5pbmRleDtkLnJlZj1hLnJlZjtyZXR1cm4gZH1cbmZ1bmN0aW9uIHdmKGEsYixjKXt2YXIgZD1hLnR5cGUsZT1hLmtleTthPWEucHJvcHM7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQpdmFyIGY9ZC5wcm90b3R5cGUmJmQucHJvdG90eXBlLmlzUmVhY3RDb21wb25lbnQ/MjowO2Vsc2UgaWYoXCJzdHJpbmdcIj09PXR5cGVvZiBkKWY9NTtlbHNlIHN3aXRjaChkKXtjYXNlIGhjOnJldHVybiB4ZihhLmNoaWxkcmVuLGIsYyxlKTtjYXNlIG9jOmY9MTE7Ynw9MzticmVhaztjYXNlIGljOmY9MTE7Ynw9MjticmVhaztjYXNlIGpjOnJldHVybiBkPW5ldyB1ZigxNSxhLGUsYnw0KSxkLnR5cGU9amMsZC5leHBpcmF0aW9uVGltZT1jLGQ7Y2FzZSBxYzpmPTE2O2J8PTI7YnJlYWs7ZGVmYXVsdDphOntzd2l0Y2goXCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZD9kLiQkdHlwZW9mOm51bGwpe2Nhc2UgbWM6Zj0xMzticmVhayBhO2Nhc2UgbmM6Zj0xMjticmVhayBhO2Nhc2UgcGM6Zj0xNDticmVhayBhO2RlZmF1bHQ6QShcIjEzMFwiLG51bGw9PWQ/XG5kOnR5cGVvZiBkLFwiXCIpfWY9dm9pZCAwfX1iPW5ldyB1ZihmLGEsZSxiKTtiLnR5cGU9ZDtiLmV4cGlyYXRpb25UaW1lPWM7cmV0dXJuIGJ9ZnVuY3Rpb24geGYoYSxiLGMsZCl7YT1uZXcgdWYoMTAsYSxkLGIpO2EuZXhwaXJhdGlvblRpbWU9YztyZXR1cm4gYX1mdW5jdGlvbiB5ZihhLGIsYyl7YT1uZXcgdWYoNixhLG51bGwsYik7YS5leHBpcmF0aW9uVGltZT1jO3JldHVybiBhfWZ1bmN0aW9uIHpmKGEsYixjKXtiPW5ldyB1Zig0LG51bGwhPT1hLmNoaWxkcmVuP2EuY2hpbGRyZW46W10sYS5rZXksYik7Yi5leHBpcmF0aW9uVGltZT1jO2Iuc3RhdGVOb2RlPXtjb250YWluZXJJbmZvOmEuY29udGFpbmVySW5mbyxwZW5kaW5nQ2hpbGRyZW46bnVsbCxpbXBsZW1lbnRhdGlvbjphLmltcGxlbWVudGF0aW9ufTtyZXR1cm4gYn1cbmZ1bmN0aW9uIEFmKGEsYixjKXtiPW5ldyB1ZigzLG51bGwsbnVsbCxiPzM6MCk7YT17Y3VycmVudDpiLGNvbnRhaW5lckluZm86YSxwZW5kaW5nQ2hpbGRyZW46bnVsbCxlYXJsaWVzdFBlbmRpbmdUaW1lOjAsbGF0ZXN0UGVuZGluZ1RpbWU6MCxlYXJsaWVzdFN1c3BlbmRlZFRpbWU6MCxsYXRlc3RTdXNwZW5kZWRUaW1lOjAsbGF0ZXN0UGluZ2VkVGltZTowLHBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTowLGZpbmlzaGVkV29yazpudWxsLGNvbnRleHQ6bnVsbCxwZW5kaW5nQ29udGV4dDpudWxsLGh5ZHJhdGU6YyxyZW1haW5pbmdFeHBpcmF0aW9uVGltZTowLGZpcnN0QmF0Y2g6bnVsbCxuZXh0U2NoZWR1bGVkUm9vdDpudWxsfTtyZXR1cm4gYi5zdGF0ZU5vZGU9YX12YXIgQmY9bnVsbCxDZj1udWxsO2Z1bmN0aW9uIERmKGEpe3JldHVybiBmdW5jdGlvbihiKXt0cnl7cmV0dXJuIGEoYil9Y2F0Y2goYyl7fX19XG5mdW5jdGlvbiBFZihhKXtpZihcInVuZGVmaW5lZFwiPT09dHlwZW9mIF9fUkVBQ1RfREVWVE9PTFNfR0xPQkFMX0hPT0tfXylyZXR1cm4hMTt2YXIgYj1fX1JFQUNUX0RFVlRPT0xTX0dMT0JBTF9IT09LX187aWYoYi5pc0Rpc2FibGVkfHwhYi5zdXBwb3J0c0ZpYmVyKXJldHVybiEwO3RyeXt2YXIgYz1iLmluamVjdChhKTtCZj1EZihmdW5jdGlvbihhKXtyZXR1cm4gYi5vbkNvbW1pdEZpYmVyUm9vdChjLGEpfSk7Q2Y9RGYoZnVuY3Rpb24oYSl7cmV0dXJuIGIub25Db21taXRGaWJlclVubW91bnQoYyxhKX0pfWNhdGNoKGQpe31yZXR1cm4hMH1mdW5jdGlvbiBGZihhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgQmYmJkJmKGEpfWZ1bmN0aW9uIEdmKGEpe1wiZnVuY3Rpb25cIj09PXR5cGVvZiBDZiYmQ2YoYSl9dmFyIEhmPSExO1xuZnVuY3Rpb24gSWYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOjAsYmFzZVN0YXRlOmEsZmlyc3RVcGRhdGU6bnVsbCxsYXN0VXBkYXRlOm51bGwsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19ZnVuY3Rpb24gSmYoYSl7cmV0dXJue2V4cGlyYXRpb25UaW1lOmEuZXhwaXJhdGlvblRpbWUsYmFzZVN0YXRlOmEuYmFzZVN0YXRlLGZpcnN0VXBkYXRlOmEuZmlyc3RVcGRhdGUsbGFzdFVwZGF0ZTphLmxhc3RVcGRhdGUsZmlyc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGxhc3RDYXB0dXJlZFVwZGF0ZTpudWxsLGZpcnN0RWZmZWN0Om51bGwsbGFzdEVmZmVjdDpudWxsLGZpcnN0Q2FwdHVyZWRFZmZlY3Q6bnVsbCxsYXN0Q2FwdHVyZWRFZmZlY3Q6bnVsbH19XG5mdW5jdGlvbiBLZihhKXtyZXR1cm57ZXhwaXJhdGlvblRpbWU6YSx0YWc6MCxwYXlsb2FkOm51bGwsY2FsbGJhY2s6bnVsbCxuZXh0Om51bGwsbmV4dEVmZmVjdDpudWxsfX1mdW5jdGlvbiBMZihhLGIsYyl7bnVsbD09PWEubGFzdFVwZGF0ZT9hLmZpcnN0VXBkYXRlPWEubGFzdFVwZGF0ZT1iOihhLmxhc3RVcGRhdGUubmV4dD1iLGEubGFzdFVwZGF0ZT1iKTtpZigwPT09YS5leHBpcmF0aW9uVGltZXx8YS5leHBpcmF0aW9uVGltZT5jKWEuZXhwaXJhdGlvblRpbWU9Y31cbmZ1bmN0aW9uIE1mKGEsYixjKXt2YXIgZD1hLmFsdGVybmF0ZTtpZihudWxsPT09ZCl7dmFyIGU9YS51cGRhdGVRdWV1ZTt2YXIgZj1udWxsO251bGw9PT1lJiYoZT1hLnVwZGF0ZVF1ZXVlPUlmKGEubWVtb2l6ZWRTdGF0ZSkpfWVsc2UgZT1hLnVwZGF0ZVF1ZXVlLGY9ZC51cGRhdGVRdWV1ZSxudWxsPT09ZT9udWxsPT09Zj8oZT1hLnVwZGF0ZVF1ZXVlPUlmKGEubWVtb2l6ZWRTdGF0ZSksZj1kLnVwZGF0ZVF1ZXVlPUlmKGQubWVtb2l6ZWRTdGF0ZSkpOmU9YS51cGRhdGVRdWV1ZT1KZihmKTpudWxsPT09ZiYmKGY9ZC51cGRhdGVRdWV1ZT1KZihlKSk7bnVsbD09PWZ8fGU9PT1mP0xmKGUsYixjKTpudWxsPT09ZS5sYXN0VXBkYXRlfHxudWxsPT09Zi5sYXN0VXBkYXRlPyhMZihlLGIsYyksTGYoZixiLGMpKTooTGYoZSxiLGMpLGYubGFzdFVwZGF0ZT1iKX1cbmZ1bmN0aW9uIE5mKGEsYixjKXt2YXIgZD1hLnVwZGF0ZVF1ZXVlO2Q9bnVsbD09PWQ/YS51cGRhdGVRdWV1ZT1JZihhLm1lbW9pemVkU3RhdGUpOk9mKGEsZCk7bnVsbD09PWQubGFzdENhcHR1cmVkVXBkYXRlP2QuZmlyc3RDYXB0dXJlZFVwZGF0ZT1kLmxhc3RDYXB0dXJlZFVwZGF0ZT1iOihkLmxhc3RDYXB0dXJlZFVwZGF0ZS5uZXh0PWIsZC5sYXN0Q2FwdHVyZWRVcGRhdGU9Yik7aWYoMD09PWQuZXhwaXJhdGlvblRpbWV8fGQuZXhwaXJhdGlvblRpbWU+YylkLmV4cGlyYXRpb25UaW1lPWN9ZnVuY3Rpb24gT2YoYSxiKXt2YXIgYz1hLmFsdGVybmF0ZTtudWxsIT09YyYmYj09PWMudXBkYXRlUXVldWUmJihiPWEudXBkYXRlUXVldWU9SmYoYikpO3JldHVybiBifVxuZnVuY3Rpb24gUGYoYSxiLGMsZCxlLGYpe3N3aXRjaChjLnRhZyl7Y2FzZSAxOnJldHVybiBhPWMucGF5bG9hZCxcImZ1bmN0aW9uXCI9PT10eXBlb2YgYT9hLmNhbGwoZixkLGUpOmE7Y2FzZSAzOmEuZWZmZWN0VGFnPWEuZWZmZWN0VGFnJi0xMDI1fDY0O2Nhc2UgMDphPWMucGF5bG9hZDtlPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBhP2EuY2FsbChmLGQsZSk6YTtpZihudWxsPT09ZXx8dm9pZCAwPT09ZSlicmVhaztyZXR1cm4gcCh7fSxkLGUpO2Nhc2UgMjpIZj0hMH1yZXR1cm4gZH1cbmZ1bmN0aW9uIFFmKGEsYixjLGQsZSl7SGY9ITE7aWYoISgwPT09Yi5leHBpcmF0aW9uVGltZXx8Yi5leHBpcmF0aW9uVGltZT5lKSl7Yj1PZihhLGIpO2Zvcih2YXIgZj1iLmJhc2VTdGF0ZSxnPW51bGwsaD0wLGs9Yi5maXJzdFVwZGF0ZSxuPWY7bnVsbCE9PWs7KXt2YXIgcj1rLmV4cGlyYXRpb25UaW1lO2lmKHI+ZSl7aWYobnVsbD09PWcmJihnPWssZj1uKSwwPT09aHx8aD5yKWg9cn1lbHNlIG49UGYoYSxiLGssbixjLGQpLG51bGwhPT1rLmNhbGxiYWNrJiYoYS5lZmZlY3RUYWd8PTMyLGsubmV4dEVmZmVjdD1udWxsLG51bGw9PT1iLmxhc3RFZmZlY3Q/Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9azooYi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9ayxiLmxhc3RFZmZlY3Q9aykpO2s9ay5uZXh0fXI9bnVsbDtmb3Ioaz1iLmZpcnN0Q2FwdHVyZWRVcGRhdGU7bnVsbCE9PWs7KXt2YXIgdz1rLmV4cGlyYXRpb25UaW1lO2lmKHc+ZSl7aWYobnVsbD09PXImJihyPWssbnVsbD09PVxuZyYmKGY9bikpLDA9PT1ofHxoPncpaD13fWVsc2Ugbj1QZihhLGIsayxuLGMsZCksbnVsbCE9PWsuY2FsbGJhY2smJihhLmVmZmVjdFRhZ3w9MzIsay5uZXh0RWZmZWN0PW51bGwsbnVsbD09PWIubGFzdENhcHR1cmVkRWZmZWN0P2IuZmlyc3RDYXB0dXJlZEVmZmVjdD1iLmxhc3RDYXB0dXJlZEVmZmVjdD1rOihiLmxhc3RDYXB0dXJlZEVmZmVjdC5uZXh0RWZmZWN0PWssYi5sYXN0Q2FwdHVyZWRFZmZlY3Q9aykpO2s9ay5uZXh0fW51bGw9PT1nJiYoYi5sYXN0VXBkYXRlPW51bGwpO251bGw9PT1yP2IubGFzdENhcHR1cmVkVXBkYXRlPW51bGw6YS5lZmZlY3RUYWd8PTMyO251bGw9PT1nJiZudWxsPT09ciYmKGY9bik7Yi5iYXNlU3RhdGU9ZjtiLmZpcnN0VXBkYXRlPWc7Yi5maXJzdENhcHR1cmVkVXBkYXRlPXI7Yi5leHBpcmF0aW9uVGltZT1oO2EubWVtb2l6ZWRTdGF0ZT1ufX1cbmZ1bmN0aW9uIFJmKGEsYil7XCJmdW5jdGlvblwiIT09dHlwZW9mIGE/QShcIjE5MVwiLGEpOnZvaWQgMDthLmNhbGwoYil9XG5mdW5jdGlvbiBTZihhLGIsYyl7bnVsbCE9PWIuZmlyc3RDYXB0dXJlZFVwZGF0ZSYmKG51bGwhPT1iLmxhc3RVcGRhdGUmJihiLmxhc3RVcGRhdGUubmV4dD1iLmZpcnN0Q2FwdHVyZWRVcGRhdGUsYi5sYXN0VXBkYXRlPWIubGFzdENhcHR1cmVkVXBkYXRlKSxiLmZpcnN0Q2FwdHVyZWRVcGRhdGU9Yi5sYXN0Q2FwdHVyZWRVcGRhdGU9bnVsbCk7YT1iLmZpcnN0RWZmZWN0O2ZvcihiLmZpcnN0RWZmZWN0PWIubGFzdEVmZmVjdD1udWxsO251bGwhPT1hOyl7dmFyIGQ9YS5jYWxsYmFjaztudWxsIT09ZCYmKGEuY2FsbGJhY2s9bnVsbCxSZihkLGMpKTthPWEubmV4dEVmZmVjdH1hPWIuZmlyc3RDYXB0dXJlZEVmZmVjdDtmb3IoYi5maXJzdENhcHR1cmVkRWZmZWN0PWIubGFzdENhcHR1cmVkRWZmZWN0PW51bGw7bnVsbCE9PWE7KWI9YS5jYWxsYmFjayxudWxsIT09YiYmKGEuY2FsbGJhY2s9bnVsbCxSZihiLGMpKSxhPWEubmV4dEVmZmVjdH1cbmZ1bmN0aW9uIFRmKGEsYil7cmV0dXJue3ZhbHVlOmEsc291cmNlOmIsc3RhY2s6dmMoYil9fXZhciBVZj1oZihudWxsKSxWZj1oZihudWxsKSxXZj1oZigwKTtmdW5jdGlvbiBYZihhKXt2YXIgYj1hLnR5cGUuX2NvbnRleHQ7TihXZixiLl9jaGFuZ2VkQml0cyxhKTtOKFZmLGIuX2N1cnJlbnRWYWx1ZSxhKTtOKFVmLGEsYSk7Yi5fY3VycmVudFZhbHVlPWEucGVuZGluZ1Byb3BzLnZhbHVlO2IuX2NoYW5nZWRCaXRzPWEuc3RhdGVOb2RlfWZ1bmN0aW9uIFlmKGEpe3ZhciBiPVdmLmN1cnJlbnQsYz1WZi5jdXJyZW50O00oVWYsYSk7TShWZixhKTtNKFdmLGEpO2E9YS50eXBlLl9jb250ZXh0O2EuX2N1cnJlbnRWYWx1ZT1jO2EuX2NoYW5nZWRCaXRzPWJ9dmFyIFpmPXt9LCRmPWhmKFpmKSxhZz1oZihaZiksYmc9aGYoWmYpO2Z1bmN0aW9uIGNnKGEpe2E9PT1aZj9BKFwiMTc0XCIpOnZvaWQgMDtyZXR1cm4gYX1cbmZ1bmN0aW9uIGRnKGEsYil7TihiZyxiLGEpO04oYWcsYSxhKTtOKCRmLFpmLGEpO3ZhciBjPWIubm9kZVR5cGU7c3dpdGNoKGMpe2Nhc2UgOTpjYXNlIDExOmI9KGI9Yi5kb2N1bWVudEVsZW1lbnQpP2IubmFtZXNwYWNlVVJJOkRlKG51bGwsXCJcIik7YnJlYWs7ZGVmYXVsdDpjPTg9PT1jP2IucGFyZW50Tm9kZTpiLGI9Yy5uYW1lc3BhY2VVUkl8fG51bGwsYz1jLnRhZ05hbWUsYj1EZShiLGMpfU0oJGYsYSk7TigkZixiLGEpfWZ1bmN0aW9uIGVnKGEpe00oJGYsYSk7TShhZyxhKTtNKGJnLGEpfWZ1bmN0aW9uIGZnKGEpe2FnLmN1cnJlbnQ9PT1hJiYoTSgkZixhKSxNKGFnLGEpKX1mdW5jdGlvbiBoZyhhLGIsYyl7dmFyIGQ9YS5tZW1vaXplZFN0YXRlO2I9YihjLGQpO2Q9bnVsbD09PWJ8fHZvaWQgMD09PWI/ZDpwKHt9LGQsYik7YS5tZW1vaXplZFN0YXRlPWQ7YT1hLnVwZGF0ZVF1ZXVlO251bGwhPT1hJiYwPT09YS5leHBpcmF0aW9uVGltZSYmKGEuYmFzZVN0YXRlPWQpfVxudmFyIGxnPXtpc01vdW50ZWQ6ZnVuY3Rpb24oYSl7cmV0dXJuKGE9YS5fcmVhY3RJbnRlcm5hbEZpYmVyKT8yPT09aWQoYSk6ITF9LGVucXVldWVTZXRTdGF0ZTpmdW5jdGlvbihhLGIsYyl7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGQ9aWcoKTtkPWpnKGQsYSk7dmFyIGU9S2YoZCk7ZS5wYXlsb2FkPWI7dm9pZCAwIT09YyYmbnVsbCE9PWMmJihlLmNhbGxiYWNrPWMpO01mKGEsZSxkKTtrZyhhLGQpfSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKGEsYixjKXthPWEuX3JlYWN0SW50ZXJuYWxGaWJlcjt2YXIgZD1pZygpO2Q9amcoZCxhKTt2YXIgZT1LZihkKTtlLnRhZz0xO2UucGF5bG9hZD1iO3ZvaWQgMCE9PWMmJm51bGwhPT1jJiYoZS5jYWxsYmFjaz1jKTtNZihhLGUsZCk7a2coYSxkKX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKGEsYil7YT1hLl9yZWFjdEludGVybmFsRmliZXI7dmFyIGM9aWcoKTtjPWpnKGMsYSk7dmFyIGQ9S2YoYyk7ZC50YWc9Mjt2b2lkIDAhPT1cbmImJm51bGwhPT1iJiYoZC5jYWxsYmFjaz1iKTtNZihhLGQsYyk7a2coYSxjKX19O2Z1bmN0aW9uIG1nKGEsYixjLGQsZSxmKXt2YXIgZz1hLnN0YXRlTm9kZTthPWEudHlwZTtyZXR1cm5cImZ1bmN0aW9uXCI9PT10eXBlb2YgZy5zaG91bGRDb21wb25lbnRVcGRhdGU/Zy5zaG91bGRDb21wb25lbnRVcGRhdGUoYyxlLGYpOmEucHJvdG90eXBlJiZhLnByb3RvdHlwZS5pc1B1cmVSZWFjdENvbXBvbmVudD8hZWEoYixjKXx8IWVhKGQsZSk6ITB9XG5mdW5jdGlvbiBuZyhhLGIsYyxkKXthPWIuc3RhdGU7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmYi5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKGMsZCk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMmJmIuVU5TQUZFX2NvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMoYyxkKTtiLnN0YXRlIT09YSYmbGcuZW5xdWV1ZVJlcGxhY2VTdGF0ZShiLGIuc3RhdGUsbnVsbCl9XG5mdW5jdGlvbiBvZyhhLGIpe3ZhciBjPWEudHlwZSxkPWEuc3RhdGVOb2RlLGU9YS5wZW5kaW5nUHJvcHMsZj1sZihhKTtkLnByb3BzPWU7ZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGU7ZC5yZWZzPWhhO2QuY29udGV4dD1uZihhLGYpO2Y9YS51cGRhdGVRdWV1ZTtudWxsIT09ZiYmKFFmKGEsZixlLGQsYiksZC5zdGF0ZT1hLm1lbW9pemVkU3RhdGUpO2Y9YS50eXBlLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcztcImZ1bmN0aW9uXCI9PT10eXBlb2YgZiYmKGhnKGEsZixlKSxkLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGMuZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZXx8XCJmdW5jdGlvblwiIT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuY29tcG9uZW50V2lsbE1vdW50fHwoYz1kLnN0YXRlLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudFdpbGxNb3VudCYmXG5kLmNvbXBvbmVudFdpbGxNb3VudCgpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsTW91bnQmJmQuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCgpLGMhPT1kLnN0YXRlJiZsZy5lbnF1ZXVlUmVwbGFjZVN0YXRlKGQsZC5zdGF0ZSxudWxsKSxmPWEudXBkYXRlUXVldWUsbnVsbCE9PWYmJihRZihhLGYsZSxkLGIpLGQuc3RhdGU9YS5tZW1vaXplZFN0YXRlKSk7XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkTW91bnQmJihhLmVmZmVjdFRhZ3w9NCl9dmFyIHBnPUFycmF5LmlzQXJyYXk7XG5mdW5jdGlvbiBxZyhhLGIsYyl7YT1jLnJlZjtpZihudWxsIT09YSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJlwib2JqZWN0XCIhPT10eXBlb2YgYSl7aWYoYy5fb3duZXIpe2M9Yy5fb3duZXI7dmFyIGQ9dm9pZCAwO2MmJigyIT09Yy50YWc/QShcIjExMFwiKTp2b2lkIDAsZD1jLnN0YXRlTm9kZSk7ZD92b2lkIDA6QShcIjE0N1wiLGEpO3ZhciBlPVwiXCIrYTtpZihudWxsIT09YiYmbnVsbCE9PWIucmVmJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYi5yZWYmJmIucmVmLl9zdHJpbmdSZWY9PT1lKXJldHVybiBiLnJlZjtiPWZ1bmN0aW9uKGEpe3ZhciBiPWQucmVmcz09PWhhP2QucmVmcz17fTpkLnJlZnM7bnVsbD09PWE/ZGVsZXRlIGJbZV06YltlXT1hfTtiLl9zdHJpbmdSZWY9ZTtyZXR1cm4gYn1cInN0cmluZ1wiIT09dHlwZW9mIGE/QShcIjE0OFwiKTp2b2lkIDA7Yy5fb3duZXI/dm9pZCAwOkEoXCIyNTRcIixhKX1yZXR1cm4gYX1cbmZ1bmN0aW9uIHJnKGEsYil7XCJ0ZXh0YXJlYVwiIT09YS50eXBlJiZBKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGIpP1wib2JqZWN0IHdpdGgga2V5cyB7XCIrT2JqZWN0LmtleXMoYikuam9pbihcIiwgXCIpK1wifVwiOmIsXCJcIil9XG5mdW5jdGlvbiBzZyhhKXtmdW5jdGlvbiBiKGIsYyl7aWYoYSl7dmFyIGQ9Yi5sYXN0RWZmZWN0O251bGwhPT1kPyhkLm5leHRFZmZlY3Q9YyxiLmxhc3RFZmZlY3Q9Yyk6Yi5maXJzdEVmZmVjdD1iLmxhc3RFZmZlY3Q9YztjLm5leHRFZmZlY3Q9bnVsbDtjLmVmZmVjdFRhZz04fX1mdW5jdGlvbiBjKGMsZCl7aWYoIWEpcmV0dXJuIG51bGw7Zm9yKDtudWxsIT09ZDspYihjLGQpLGQ9ZC5zaWJsaW5nO3JldHVybiBudWxsfWZ1bmN0aW9uIGQoYSxiKXtmb3IoYT1uZXcgTWFwO251bGwhPT1iOyludWxsIT09Yi5rZXk/YS5zZXQoYi5rZXksYik6YS5zZXQoYi5pbmRleCxiKSxiPWIuc2libGluZztyZXR1cm4gYX1mdW5jdGlvbiBlKGEsYixjKXthPXZmKGEsYixjKTthLmluZGV4PTA7YS5zaWJsaW5nPW51bGw7cmV0dXJuIGF9ZnVuY3Rpb24gZihiLGMsZCl7Yi5pbmRleD1kO2lmKCFhKXJldHVybiBjO2Q9Yi5hbHRlcm5hdGU7aWYobnVsbCE9PWQpcmV0dXJuIGQ9ZC5pbmRleCxkPGM/KGIuZWZmZWN0VGFnPVxuMixjKTpkO2IuZWZmZWN0VGFnPTI7cmV0dXJuIGN9ZnVuY3Rpb24gZyhiKXthJiZudWxsPT09Yi5hbHRlcm5hdGUmJihiLmVmZmVjdFRhZz0yKTtyZXR1cm4gYn1mdW5jdGlvbiBoKGEsYixjLGQpe2lmKG51bGw9PT1ifHw2IT09Yi50YWcpcmV0dXJuIGI9eWYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiBrKGEsYixjLGQpe2lmKG51bGwhPT1iJiZiLnR5cGU9PT1jLnR5cGUpcmV0dXJuIGQ9ZShiLGMucHJvcHMsZCksZC5yZWY9cWcoYSxiLGMpLGQucmV0dXJuPWEsZDtkPXdmKGMsYS5tb2RlLGQpO2QucmVmPXFnKGEsYixjKTtkLnJldHVybj1hO3JldHVybiBkfWZ1bmN0aW9uIG4oYSxiLGMsZCl7aWYobnVsbD09PWJ8fDQhPT1iLnRhZ3x8Yi5zdGF0ZU5vZGUuY29udGFpbmVySW5mbyE9PWMuY29udGFpbmVySW5mb3x8Yi5zdGF0ZU5vZGUuaW1wbGVtZW50YXRpb24hPT1jLmltcGxlbWVudGF0aW9uKXJldHVybiBiPVxuemYoYyxhLm1vZGUsZCksYi5yZXR1cm49YSxiO2I9ZShiLGMuY2hpbGRyZW58fFtdLGQpO2IucmV0dXJuPWE7cmV0dXJuIGJ9ZnVuY3Rpb24gcihhLGIsYyxkLGYpe2lmKG51bGw9PT1ifHwxMCE9PWIudGFnKXJldHVybiBiPXhmKGMsYS5tb2RlLGQsZiksYi5yZXR1cm49YSxiO2I9ZShiLGMsZCk7Yi5yZXR1cm49YTtyZXR1cm4gYn1mdW5jdGlvbiB3KGEsYixjKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGJ8fFwibnVtYmVyXCI9PT10eXBlb2YgYilyZXR1cm4gYj15ZihcIlwiK2IsYS5tb2RlLGMpLGIucmV0dXJuPWEsYjtpZihcIm9iamVjdFwiPT09dHlwZW9mIGImJm51bGwhPT1iKXtzd2l0Y2goYi4kJHR5cGVvZil7Y2FzZSBmYzpyZXR1cm4gYz13ZihiLGEubW9kZSxjKSxjLnJlZj1xZyhhLG51bGwsYiksYy5yZXR1cm49YSxjO2Nhc2UgZ2M6cmV0dXJuIGI9emYoYixhLm1vZGUsYyksYi5yZXR1cm49YSxifWlmKHBnKGIpfHxzYyhiKSlyZXR1cm4gYj14ZihiLGEubW9kZSxjLG51bGwpLGIucmV0dXJuPVxuYSxiO3JnKGEsYil9cmV0dXJuIG51bGx9ZnVuY3Rpb24gUChhLGIsYyxkKXt2YXIgZT1udWxsIT09Yj9iLmtleTpudWxsO2lmKFwic3RyaW5nXCI9PT10eXBlb2YgY3x8XCJudW1iZXJcIj09PXR5cGVvZiBjKXJldHVybiBudWxsIT09ZT9udWxsOmgoYSxiLFwiXCIrYyxkKTtpZihcIm9iamVjdFwiPT09dHlwZW9mIGMmJm51bGwhPT1jKXtzd2l0Y2goYy4kJHR5cGVvZil7Y2FzZSBmYzpyZXR1cm4gYy5rZXk9PT1lP2MudHlwZT09PWhjP3IoYSxiLGMucHJvcHMuY2hpbGRyZW4sZCxlKTprKGEsYixjLGQpOm51bGw7Y2FzZSBnYzpyZXR1cm4gYy5rZXk9PT1lP24oYSxiLGMsZCk6bnVsbH1pZihwZyhjKXx8c2MoYykpcmV0dXJuIG51bGwhPT1lP251bGw6cihhLGIsYyxkLG51bGwpO3JnKGEsYyl9cmV0dXJuIG51bGx9ZnVuY3Rpb24ga2MoYSxiLGMsZCxlKXtpZihcInN0cmluZ1wiPT09dHlwZW9mIGR8fFwibnVtYmVyXCI9PT10eXBlb2YgZClyZXR1cm4gYT1hLmdldChjKXx8bnVsbCxoKGIsYSxcIlwiK2QsZSk7XG5pZihcIm9iamVjdFwiPT09dHlwZW9mIGQmJm51bGwhPT1kKXtzd2l0Y2goZC4kJHR5cGVvZil7Y2FzZSBmYzpyZXR1cm4gYT1hLmdldChudWxsPT09ZC5rZXk/YzpkLmtleSl8fG51bGwsZC50eXBlPT09aGM/cihiLGEsZC5wcm9wcy5jaGlsZHJlbixlLGQua2V5KTprKGIsYSxkLGUpO2Nhc2UgZ2M6cmV0dXJuIGE9YS5nZXQobnVsbD09PWQua2V5P2M6ZC5rZXkpfHxudWxsLG4oYixhLGQsZSl9aWYocGcoZCl8fHNjKGQpKXJldHVybiBhPWEuZ2V0KGMpfHxudWxsLHIoYixhLGQsZSxudWxsKTtyZyhiLGQpfXJldHVybiBudWxsfWZ1bmN0aW9uIEhkKGUsZyxoLGspe2Zvcih2YXIgdT1udWxsLHg9bnVsbCx0PWcscT1nPTAsbj1udWxsO251bGwhPT10JiZxPGgubGVuZ3RoO3ErKyl7dC5pbmRleD5xPyhuPXQsdD1udWxsKTpuPXQuc2libGluZzt2YXIgbD1QKGUsdCxoW3FdLGspO2lmKG51bGw9PT1sKXtudWxsPT09dCYmKHQ9bik7YnJlYWt9YSYmdCYmbnVsbD09PWwuYWx0ZXJuYXRlJiZiKGUsXG50KTtnPWYobCxnLHEpO251bGw9PT14P3U9bDp4LnNpYmxpbmc9bDt4PWw7dD1ufWlmKHE9PT1oLmxlbmd0aClyZXR1cm4gYyhlLHQpLHU7aWYobnVsbD09PXQpe2Zvcig7cTxoLmxlbmd0aDtxKyspaWYodD13KGUsaFtxXSxrKSlnPWYodCxnLHEpLG51bGw9PT14P3U9dDp4LnNpYmxpbmc9dCx4PXQ7cmV0dXJuIHV9Zm9yKHQ9ZChlLHQpO3E8aC5sZW5ndGg7cSsrKWlmKG49a2ModCxlLHEsaFtxXSxrKSlhJiZudWxsIT09bi5hbHRlcm5hdGUmJnQuZGVsZXRlKG51bGw9PT1uLmtleT9xOm4ua2V5KSxnPWYobixnLHEpLG51bGw9PT14P3U9bjp4LnNpYmxpbmc9bix4PW47YSYmdC5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gdX1mdW5jdGlvbiBFKGUsZyxoLGspe3ZhciB0PXNjKGgpO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiB0P0EoXCIxNTBcIik6dm9pZCAwO2g9dC5jYWxsKGgpO251bGw9PWg/QShcIjE1MVwiKTp2b2lkIDA7Zm9yKHZhciB1PXQ9bnVsbCxuPWcseD1cbmc9MCx5PW51bGwsbD1oLm5leHQoKTtudWxsIT09biYmIWwuZG9uZTt4KyssbD1oLm5leHQoKSl7bi5pbmRleD54Pyh5PW4sbj1udWxsKTp5PW4uc2libGluZzt2YXIgcj1QKGUsbixsLnZhbHVlLGspO2lmKG51bGw9PT1yKXtufHwobj15KTticmVha31hJiZuJiZudWxsPT09ci5hbHRlcm5hdGUmJmIoZSxuKTtnPWYocixnLHgpO251bGw9PT11P3Q9cjp1LnNpYmxpbmc9cjt1PXI7bj15fWlmKGwuZG9uZSlyZXR1cm4gYyhlLG4pLHQ7aWYobnVsbD09PW4pe2Zvcig7IWwuZG9uZTt4KyssbD1oLm5leHQoKSlsPXcoZSxsLnZhbHVlLGspLG51bGwhPT1sJiYoZz1mKGwsZyx4KSxudWxsPT09dT90PWw6dS5zaWJsaW5nPWwsdT1sKTtyZXR1cm4gdH1mb3Iobj1kKGUsbik7IWwuZG9uZTt4KyssbD1oLm5leHQoKSlsPWtjKG4sZSx4LGwudmFsdWUsayksbnVsbCE9PWwmJihhJiZudWxsIT09bC5hbHRlcm5hdGUmJm4uZGVsZXRlKG51bGw9PT1sLmtleT94Omwua2V5KSxnPWYobCxnLHgpLG51bGw9PT1cbnU/dD1sOnUuc2libGluZz1sLHU9bCk7YSYmbi5mb3JFYWNoKGZ1bmN0aW9uKGEpe3JldHVybiBiKGUsYSl9KTtyZXR1cm4gdH1yZXR1cm4gZnVuY3Rpb24oYSxkLGYsaCl7XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZiYmZi50eXBlPT09aGMmJm51bGw9PT1mLmtleSYmKGY9Zi5wcm9wcy5jaGlsZHJlbik7dmFyIGs9XCJvYmplY3RcIj09PXR5cGVvZiBmJiZudWxsIT09ZjtpZihrKXN3aXRjaChmLiQkdHlwZW9mKXtjYXNlIGZjOmE6e3ZhciBuPWYua2V5O2ZvcihrPWQ7bnVsbCE9PWs7KXtpZihrLmtleT09PW4paWYoMTA9PT1rLnRhZz9mLnR5cGU9PT1oYzprLnR5cGU9PT1mLnR5cGUpe2MoYSxrLnNpYmxpbmcpO2Q9ZShrLGYudHlwZT09PWhjP2YucHJvcHMuY2hpbGRyZW46Zi5wcm9wcyxoKTtkLnJlZj1xZyhhLGssZik7ZC5yZXR1cm49YTthPWQ7YnJlYWsgYX1lbHNle2MoYSxrKTticmVha31lbHNlIGIoYSxrKTtrPWsuc2libGluZ31mLnR5cGU9PT1oYz8oZD14ZihmLnByb3BzLmNoaWxkcmVuLFxuYS5tb2RlLGgsZi5rZXkpLGQucmV0dXJuPWEsYT1kKTooaD13ZihmLGEubW9kZSxoKSxoLnJlZj1xZyhhLGQsZiksaC5yZXR1cm49YSxhPWgpfXJldHVybiBnKGEpO2Nhc2UgZ2M6YTp7Zm9yKGs9Zi5rZXk7bnVsbCE9PWQ7KXtpZihkLmtleT09PWspaWYoND09PWQudGFnJiZkLnN0YXRlTm9kZS5jb250YWluZXJJbmZvPT09Zi5jb250YWluZXJJbmZvJiZkLnN0YXRlTm9kZS5pbXBsZW1lbnRhdGlvbj09PWYuaW1wbGVtZW50YXRpb24pe2MoYSxkLnNpYmxpbmcpO2Q9ZShkLGYuY2hpbGRyZW58fFtdLGgpO2QucmV0dXJuPWE7YT1kO2JyZWFrIGF9ZWxzZXtjKGEsZCk7YnJlYWt9ZWxzZSBiKGEsZCk7ZD1kLnNpYmxpbmd9ZD16ZihmLGEubW9kZSxoKTtkLnJldHVybj1hO2E9ZH1yZXR1cm4gZyhhKX1pZihcInN0cmluZ1wiPT09dHlwZW9mIGZ8fFwibnVtYmVyXCI9PT10eXBlb2YgZilyZXR1cm4gZj1cIlwiK2YsbnVsbCE9PWQmJjY9PT1kLnRhZz8oYyhhLGQuc2libGluZyksZD1lKGQsZixoKSxkLnJldHVybj1cbmEsYT1kKTooYyhhLGQpLGQ9eWYoZixhLm1vZGUsaCksZC5yZXR1cm49YSxhPWQpLGcoYSk7aWYocGcoZikpcmV0dXJuIEhkKGEsZCxmLGgpO2lmKHNjKGYpKXJldHVybiBFKGEsZCxmLGgpO2smJnJnKGEsZik7aWYoXCJ1bmRlZmluZWRcIj09PXR5cGVvZiBmKXN3aXRjaChhLnRhZyl7Y2FzZSAyOmNhc2UgMTpoPWEudHlwZSxBKFwiMTUyXCIsaC5kaXNwbGF5TmFtZXx8aC5uYW1lfHxcIkNvbXBvbmVudFwiKX1yZXR1cm4gYyhhLGQpfX12YXIgdGc9c2coITApLHVnPXNnKCExKSx2Zz1udWxsLHdnPW51bGwseGc9ITE7ZnVuY3Rpb24geWcoYSxiKXt2YXIgYz1uZXcgdWYoNSxudWxsLG51bGwsMCk7Yy50eXBlPVwiREVMRVRFRFwiO2Muc3RhdGVOb2RlPWI7Yy5yZXR1cm49YTtjLmVmZmVjdFRhZz04O251bGwhPT1hLmxhc3RFZmZlY3Q/KGEubGFzdEVmZmVjdC5uZXh0RWZmZWN0PWMsYS5sYXN0RWZmZWN0PWMpOmEuZmlyc3RFZmZlY3Q9YS5sYXN0RWZmZWN0PWN9XG5mdW5jdGlvbiB6ZyhhLGIpe3N3aXRjaChhLnRhZyl7Y2FzZSA1OnZhciBjPWEudHlwZTtiPTEhPT1iLm5vZGVUeXBlfHxjLnRvTG93ZXJDYXNlKCkhPT1iLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk/bnVsbDpiO3JldHVybiBudWxsIT09Yj8oYS5zdGF0ZU5vZGU9YiwhMCk6ITE7Y2FzZSA2OnJldHVybiBiPVwiXCI9PT1hLnBlbmRpbmdQcm9wc3x8MyE9PWIubm9kZVR5cGU/bnVsbDpiLG51bGwhPT1iPyhhLnN0YXRlTm9kZT1iLCEwKTohMTtkZWZhdWx0OnJldHVybiExfX1mdW5jdGlvbiBBZyhhKXtpZih4Zyl7dmFyIGI9d2c7aWYoYil7dmFyIGM9YjtpZighemcoYSxiKSl7Yj1kZihjKTtpZighYnx8IXpnKGEsYikpe2EuZWZmZWN0VGFnfD0yO3hnPSExO3ZnPWE7cmV0dXJufXlnKHZnLGMpfXZnPWE7d2c9ZWYoYil9ZWxzZSBhLmVmZmVjdFRhZ3w9Mix4Zz0hMSx2Zz1hfX1cbmZ1bmN0aW9uIEJnKGEpe2ZvcihhPWEucmV0dXJuO251bGwhPT1hJiY1IT09YS50YWcmJjMhPT1hLnRhZzspYT1hLnJldHVybjt2Zz1hfWZ1bmN0aW9uIENnKGEpe2lmKGEhPT12ZylyZXR1cm4hMTtpZigheGcpcmV0dXJuIEJnKGEpLHhnPSEwLCExO3ZhciBiPWEudHlwZTtpZig1IT09YS50YWd8fFwiaGVhZFwiIT09YiYmXCJib2R5XCIhPT1iJiYhJGUoYixhLm1lbW9pemVkUHJvcHMpKWZvcihiPXdnO2I7KXlnKGEsYiksYj1kZihiKTtCZyhhKTt3Zz12Zz9kZihhLnN0YXRlTm9kZSk6bnVsbDtyZXR1cm4hMH1mdW5jdGlvbiBEZygpe3dnPXZnPW51bGw7eGc9ITF9ZnVuY3Rpb24gUShhLGIsYyl7RWcoYSxiLGMsYi5leHBpcmF0aW9uVGltZSl9ZnVuY3Rpb24gRWcoYSxiLGMsZCl7Yi5jaGlsZD1udWxsPT09YT91ZyhiLG51bGwsYyxkKTp0ZyhiLGEuY2hpbGQsYyxkKX1cbmZ1bmN0aW9uIEZnKGEsYil7dmFyIGM9Yi5yZWY7aWYobnVsbD09PWEmJm51bGwhPT1jfHxudWxsIT09YSYmYS5yZWYhPT1jKWIuZWZmZWN0VGFnfD0xMjh9ZnVuY3Rpb24gR2coYSxiLGMsZCxlKXtGZyhhLGIpO3ZhciBmPTAhPT0oYi5lZmZlY3RUYWcmNjQpO2lmKCFjJiYhZilyZXR1cm4gZCYmdGYoYiwhMSksUihhLGIpO2M9Yi5zdGF0ZU5vZGU7ZWMuY3VycmVudD1iO3ZhciBnPWY/bnVsbDpjLnJlbmRlcigpO2IuZWZmZWN0VGFnfD0xO2YmJihFZyhhLGIsbnVsbCxlKSxiLmNoaWxkPW51bGwpO0VnKGEsYixnLGUpO2IubWVtb2l6ZWRTdGF0ZT1jLnN0YXRlO2IubWVtb2l6ZWRQcm9wcz1jLnByb3BzO2QmJnRmKGIsITApO3JldHVybiBiLmNoaWxkfVxuZnVuY3Rpb24gSGcoYSl7dmFyIGI9YS5zdGF0ZU5vZGU7Yi5wZW5kaW5nQ29udGV4dD9xZihhLGIucGVuZGluZ0NvbnRleHQsYi5wZW5kaW5nQ29udGV4dCE9PWIuY29udGV4dCk6Yi5jb250ZXh0JiZxZihhLGIuY29udGV4dCwhMSk7ZGcoYSxiLmNvbnRhaW5lckluZm8pfVxuZnVuY3Rpb24gSWcoYSxiLGMsZCl7dmFyIGU9YS5jaGlsZDtudWxsIT09ZSYmKGUucmV0dXJuPWEpO2Zvcig7bnVsbCE9PWU7KXtzd2l0Y2goZS50YWcpe2Nhc2UgMTI6dmFyIGY9ZS5zdGF0ZU5vZGV8MDtpZihlLnR5cGU9PT1iJiYwIT09KGYmYykpe2ZvcihmPWU7bnVsbCE9PWY7KXt2YXIgZz1mLmFsdGVybmF0ZTtpZigwPT09Zi5leHBpcmF0aW9uVGltZXx8Zi5leHBpcmF0aW9uVGltZT5kKWYuZXhwaXJhdGlvblRpbWU9ZCxudWxsIT09ZyYmKDA9PT1nLmV4cGlyYXRpb25UaW1lfHxnLmV4cGlyYXRpb25UaW1lPmQpJiYoZy5leHBpcmF0aW9uVGltZT1kKTtlbHNlIGlmKG51bGwhPT1nJiYoMD09PWcuZXhwaXJhdGlvblRpbWV8fGcuZXhwaXJhdGlvblRpbWU+ZCkpZy5leHBpcmF0aW9uVGltZT1kO2Vsc2UgYnJlYWs7Zj1mLnJldHVybn1mPW51bGx9ZWxzZSBmPWUuY2hpbGQ7YnJlYWs7Y2FzZSAxMzpmPWUudHlwZT09PWEudHlwZT9udWxsOmUuY2hpbGQ7YnJlYWs7ZGVmYXVsdDpmPVxuZS5jaGlsZH1pZihudWxsIT09ZilmLnJldHVybj1lO2Vsc2UgZm9yKGY9ZTtudWxsIT09Zjspe2lmKGY9PT1hKXtmPW51bGw7YnJlYWt9ZT1mLnNpYmxpbmc7aWYobnVsbCE9PWUpe2UucmV0dXJuPWYucmV0dXJuO2Y9ZTticmVha31mPWYucmV0dXJufWU9Zn19XG5mdW5jdGlvbiBKZyhhLGIsYyl7dmFyIGQ9Yi50eXBlLl9jb250ZXh0LGU9Yi5wZW5kaW5nUHJvcHMsZj1iLm1lbW9pemVkUHJvcHMsZz0hMDtpZihPLmN1cnJlbnQpZz0hMTtlbHNlIGlmKGY9PT1lKXJldHVybiBiLnN0YXRlTm9kZT0wLFhmKGIpLFIoYSxiKTt2YXIgaD1lLnZhbHVlO2IubWVtb2l6ZWRQcm9wcz1lO2lmKG51bGw9PT1mKWg9MTA3Mzc0MTgyMztlbHNlIGlmKGYudmFsdWU9PT1lLnZhbHVlKXtpZihmLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmZylyZXR1cm4gYi5zdGF0ZU5vZGU9MCxYZihiKSxSKGEsYik7aD0wfWVsc2V7dmFyIGs9Zi52YWx1ZTtpZihrPT09aCYmKDAhPT1rfHwxL2s9PT0xL2gpfHxrIT09ayYmaCE9PWgpe2lmKGYuY2hpbGRyZW49PT1lLmNoaWxkcmVuJiZnKXJldHVybiBiLnN0YXRlTm9kZT0wLFhmKGIpLFIoYSxiKTtoPTB9ZWxzZSBpZihoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLl9jYWxjdWxhdGVDaGFuZ2VkQml0cz9kLl9jYWxjdWxhdGVDaGFuZ2VkQml0cyhrLFxuaCk6MTA3Mzc0MTgyMyxofD0wLDA9PT1oKXtpZihmLmNoaWxkcmVuPT09ZS5jaGlsZHJlbiYmZylyZXR1cm4gYi5zdGF0ZU5vZGU9MCxYZihiKSxSKGEsYil9ZWxzZSBJZyhiLGQsaCxjKX1iLnN0YXRlTm9kZT1oO1hmKGIpO1EoYSxiLGUuY2hpbGRyZW4pO3JldHVybiBiLmNoaWxkfWZ1bmN0aW9uIFIoYSxiKXtudWxsIT09YSYmYi5jaGlsZCE9PWEuY2hpbGQ/QShcIjE1M1wiKTp2b2lkIDA7aWYobnVsbCE9PWIuY2hpbGQpe2E9Yi5jaGlsZDt2YXIgYz12ZihhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpO2IuY2hpbGQ9Yztmb3IoYy5yZXR1cm49YjtudWxsIT09YS5zaWJsaW5nOylhPWEuc2libGluZyxjPWMuc2libGluZz12ZihhLGEucGVuZGluZ1Byb3BzLGEuZXhwaXJhdGlvblRpbWUpLGMucmV0dXJuPWI7Yy5zaWJsaW5nPW51bGx9cmV0dXJuIGIuY2hpbGR9XG5mdW5jdGlvbiBLZyhhLGIsYyl7aWYoMD09PWIuZXhwaXJhdGlvblRpbWV8fGIuZXhwaXJhdGlvblRpbWU+Yyl7c3dpdGNoKGIudGFnKXtjYXNlIDM6SGcoYik7YnJlYWs7Y2FzZSAyOnNmKGIpO2JyZWFrO2Nhc2UgNDpkZyhiLGIuc3RhdGVOb2RlLmNvbnRhaW5lckluZm8pO2JyZWFrO2Nhc2UgMTM6WGYoYil9cmV0dXJuIG51bGx9c3dpdGNoKGIudGFnKXtjYXNlIDA6bnVsbCE9PWE/QShcIjE1NVwiKTp2b2lkIDA7dmFyIGQ9Yi50eXBlLGU9Yi5wZW5kaW5nUHJvcHMsZj1sZihiKTtmPW5mKGIsZik7ZD1kKGUsZik7Yi5lZmZlY3RUYWd8PTE7XCJvYmplY3RcIj09PXR5cGVvZiBkJiZudWxsIT09ZCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQucmVuZGVyJiZ2b2lkIDA9PT1kLiQkdHlwZW9mPyhmPWIudHlwZSxiLnRhZz0yLGIubWVtb2l6ZWRTdGF0ZT1udWxsIT09ZC5zdGF0ZSYmdm9pZCAwIT09ZC5zdGF0ZT9kLnN0YXRlOm51bGwsZj1mLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcyxcImZ1bmN0aW9uXCI9PT1cbnR5cGVvZiBmJiZoZyhiLGYsZSksZT1zZihiKSxkLnVwZGF0ZXI9bGcsYi5zdGF0ZU5vZGU9ZCxkLl9yZWFjdEludGVybmFsRmliZXI9YixvZyhiLGMpLGE9R2coYSxiLCEwLGUsYykpOihiLnRhZz0xLFEoYSxiLGQpLGIubWVtb2l6ZWRQcm9wcz1lLGE9Yi5jaGlsZCk7cmV0dXJuIGE7Y2FzZSAxOnJldHVybiBlPWIudHlwZSxjPWIucGVuZGluZ1Byb3BzLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09Yz8oZD1sZihiKSxkPW5mKGIsZCksZT1lKGMsZCksYi5lZmZlY3RUYWd8PTEsUShhLGIsZSksYi5tZW1vaXplZFByb3BzPWMsYT1iLmNoaWxkKTphPVIoYSxiKSxhO2Nhc2UgMjplPXNmKGIpO2lmKG51bGw9PT1hKWlmKG51bGw9PT1iLnN0YXRlTm9kZSl7dmFyIGc9Yi5wZW5kaW5nUHJvcHMsaD1iLnR5cGU7ZD1sZihiKTt2YXIgaz0yPT09Yi50YWcmJm51bGwhPWIudHlwZS5jb250ZXh0VHlwZXM7Zj1rP25mKGIsZCk6aGE7Zz1uZXcgaChnLGYpO2IubWVtb2l6ZWRTdGF0ZT1udWxsIT09XG5nLnN0YXRlJiZ2b2lkIDAhPT1nLnN0YXRlP2cuc3RhdGU6bnVsbDtnLnVwZGF0ZXI9bGc7Yi5zdGF0ZU5vZGU9ZztnLl9yZWFjdEludGVybmFsRmliZXI9YjtrJiYoaz1iLnN0YXRlTm9kZSxrLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkVW5tYXNrZWRDaGlsZENvbnRleHQ9ZCxrLl9fcmVhY3RJbnRlcm5hbE1lbW9pemVkTWFza2VkQ2hpbGRDb250ZXh0PWYpO29nKGIsYyk7ZD0hMH1lbHNle2g9Yi50eXBlO2Q9Yi5zdGF0ZU5vZGU7az1iLm1lbW9pemVkUHJvcHM7Zj1iLnBlbmRpbmdQcm9wcztkLnByb3BzPWs7dmFyIG49ZC5jb250ZXh0O2c9bGYoYik7Zz1uZihiLGcpO3ZhciByPWguZ2V0RGVyaXZlZFN0YXRlRnJvbVByb3BzOyhoPVwiZnVuY3Rpb25cIj09PXR5cGVvZiByfHxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5nZXRTbmFwc2hvdEJlZm9yZVVwZGF0ZSl8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzfHxcbihrIT09Znx8biE9PWcpJiZuZyhiLGQsZixnKTtIZj0hMTt2YXIgdz1iLm1lbW9pemVkU3RhdGU7bj1kLnN0YXRlPXc7dmFyIFA9Yi51cGRhdGVRdWV1ZTtudWxsIT09UCYmKFFmKGIsUCxmLGQsYyksbj1iLm1lbW9pemVkU3RhdGUpO2shPT1mfHx3IT09bnx8Ty5jdXJyZW50fHxIZj8oXCJmdW5jdGlvblwiPT09dHlwZW9mIHImJihoZyhiLHIsZiksbj1iLm1lbW9pemVkU3RhdGUpLChrPUhmfHxtZyhiLGssZix3LG4sZykpPyhofHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50JiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnR8fChcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnRXaWxsTW91bnQmJmQuY29tcG9uZW50V2lsbE1vdW50KCksXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuVU5TQUZFX2NvbXBvbmVudFdpbGxNb3VudCYmZC5VTlNBRkVfY29tcG9uZW50V2lsbE1vdW50KCkpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZE1vdW50JiZcbihiLmVmZmVjdFRhZ3w9NCkpOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxiLm1lbW9pemVkUHJvcHM9ZixiLm1lbW9pemVkU3RhdGU9biksZC5wcm9wcz1mLGQuc3RhdGU9bixkLmNvbnRleHQ9ZyxkPWspOihcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5jb21wb25lbnREaWRNb3VudCYmKGIuZWZmZWN0VGFnfD00KSxkPSExKX1lbHNlIGg9Yi50eXBlLGQ9Yi5zdGF0ZU5vZGUsZj1iLm1lbW9pemVkUHJvcHMsaz1iLnBlbmRpbmdQcm9wcyxkLnByb3BzPWYsbj1kLmNvbnRleHQsZz1sZihiKSxnPW5mKGIsZykscj1oLmdldERlcml2ZWRTdGF0ZUZyb21Qcm9wcywoaD1cImZ1bmN0aW9uXCI9PT10eXBlb2Ygcnx8XCJmdW5jdGlvblwiPT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGUpfHxcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wc3x8XG4oZiE9PWt8fG4hPT1nKSYmbmcoYixkLGssZyksSGY9ITEsbj1iLm1lbW9pemVkU3RhdGUsdz1kLnN0YXRlPW4sUD1iLnVwZGF0ZVF1ZXVlLG51bGwhPT1QJiYoUWYoYixQLGssZCxjKSx3PWIubWVtb2l6ZWRTdGF0ZSksZiE9PWt8fG4hPT13fHxPLmN1cnJlbnR8fEhmPyhcImZ1bmN0aW9uXCI9PT10eXBlb2YgciYmKGhnKGIscixrKSx3PWIubWVtb2l6ZWRTdGF0ZSksKHI9SGZ8fG1nKGIsZixrLG4sdyxnKSk/KGh8fFwiZnVuY3Rpb25cIiE9PXR5cGVvZiBkLlVOU0FGRV9jb21wb25lbnRXaWxsVXBkYXRlJiZcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnRXaWxsVXBkYXRlfHwoXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50V2lsbFVwZGF0ZSYmZC5jb21wb25lbnRXaWxsVXBkYXRlKGssdyxnKSxcImZ1bmN0aW9uXCI9PT10eXBlb2YgZC5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSYmZC5VTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShrLHcsZykpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZFVwZGF0ZSYmXG4oYi5lZmZlY3RUYWd8PTQpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlJiYoYi5lZmZlY3RUYWd8PTI1NikpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnREaWRVcGRhdGV8fGY9PT1hLm1lbW9pemVkUHJvcHMmJm49PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fGY9PT1hLm1lbW9pemVkUHJvcHMmJm49PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9MjU2KSxiLm1lbW9pemVkUHJvcHM9ayxiLm1lbW9pemVkU3RhdGU9dyksZC5wcm9wcz1rLGQuc3RhdGU9dyxkLmNvbnRleHQ9ZyxkPXIpOihcImZ1bmN0aW9uXCIhPT10eXBlb2YgZC5jb21wb25lbnREaWRVcGRhdGV8fGY9PT1hLm1lbW9pemVkUHJvcHMmJm49PT1hLm1lbW9pemVkU3RhdGV8fChiLmVmZmVjdFRhZ3w9NCksXCJmdW5jdGlvblwiIT09dHlwZW9mIGQuZ2V0U25hcHNob3RCZWZvcmVVcGRhdGV8fFxuZj09PWEubWVtb2l6ZWRQcm9wcyYmbj09PWEubWVtb2l6ZWRTdGF0ZXx8KGIuZWZmZWN0VGFnfD0yNTYpLGQ9ITEpO3JldHVybiBHZyhhLGIsZCxlLGMpO2Nhc2UgMzpIZyhiKTtlPWIudXBkYXRlUXVldWU7aWYobnVsbCE9PWUpaWYoZD1iLm1lbW9pemVkU3RhdGUsZD1udWxsIT09ZD9kLmVsZW1lbnQ6bnVsbCxRZihiLGUsYi5wZW5kaW5nUHJvcHMsbnVsbCxjKSxlPWIubWVtb2l6ZWRTdGF0ZS5lbGVtZW50LGU9PT1kKURnKCksYT1SKGEsYik7ZWxzZXtkPWIuc3RhdGVOb2RlO2lmKGQ9KG51bGw9PT1hfHxudWxsPT09YS5jaGlsZCkmJmQuaHlkcmF0ZSl3Zz1lZihiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSx2Zz1iLGQ9eGc9ITA7ZD8oYi5lZmZlY3RUYWd8PTIsYi5jaGlsZD11ZyhiLG51bGwsZSxjKSk6KERnKCksUShhLGIsZSkpO2E9Yi5jaGlsZH1lbHNlIERnKCksYT1SKGEsYik7cmV0dXJuIGE7Y2FzZSA1OmE6e2NnKGJnLmN1cnJlbnQpO2U9Y2coJGYuY3VycmVudCk7ZD1EZShlLFxuYi50eXBlKTtlIT09ZCYmKE4oYWcsYixiKSxOKCRmLGQsYikpO251bGw9PT1hJiZBZyhiKTtlPWIudHlwZTtrPWIubWVtb2l6ZWRQcm9wcztkPWIucGVuZGluZ1Byb3BzO2Y9bnVsbCE9PWE/YS5tZW1vaXplZFByb3BzOm51bGw7aWYoIU8uY3VycmVudCYmaz09PWQpe2lmKGs9Yi5tb2RlJjEmJiEhZC5oaWRkZW4pYi5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzO2lmKCFrfHwxMDczNzQxODIzIT09Yyl7YT1SKGEsYik7YnJlYWsgYX19az1kLmNoaWxkcmVuOyRlKGUsZCk/az1udWxsOmYmJiRlKGUsZikmJihiLmVmZmVjdFRhZ3w9MTYpO0ZnKGEsYik7MTA3Mzc0MTgyMyE9PWMmJmIubW9kZSYxJiZkLmhpZGRlbj8oYi5leHBpcmF0aW9uVGltZT0xMDczNzQxODIzLGIubWVtb2l6ZWRQcm9wcz1kLGE9bnVsbCk6KFEoYSxiLGspLGIubWVtb2l6ZWRQcm9wcz1kLGE9Yi5jaGlsZCl9cmV0dXJuIGE7Y2FzZSA2OnJldHVybiBudWxsPT09YSYmQWcoYiksYi5tZW1vaXplZFByb3BzPWIucGVuZGluZ1Byb3BzLFxubnVsbDtjYXNlIDE2OnJldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZGcoYixiLnN0YXRlTm9kZS5jb250YWluZXJJbmZvKSxlPWIucGVuZGluZ1Byb3BzLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09ZT8obnVsbD09PWE/Yi5jaGlsZD10ZyhiLG51bGwsZSxjKTpRKGEsYixlKSxiLm1lbW9pemVkUHJvcHM9ZSxhPWIuY2hpbGQpOmE9UihhLGIpLGE7Y2FzZSAxNDpyZXR1cm4gZT1iLnR5cGUucmVuZGVyLGM9Yi5wZW5kaW5nUHJvcHMsZD1iLnJlZixPLmN1cnJlbnR8fGIubWVtb2l6ZWRQcm9wcyE9PWN8fGQhPT0obnVsbCE9PWE/YS5yZWY6bnVsbCk/KGU9ZShjLGQpLFEoYSxiLGUpLGIubWVtb2l6ZWRQcm9wcz1jLGE9Yi5jaGlsZCk6YT1SKGEsYiksYTtjYXNlIDEwOnJldHVybiBjPWIucGVuZGluZ1Byb3BzLE8uY3VycmVudHx8Yi5tZW1vaXplZFByb3BzIT09Yz8oUShhLGIsYyksYi5tZW1vaXplZFByb3BzPWMsYT1iLmNoaWxkKTphPVIoYSxiKSxhO2Nhc2UgMTE6cmV0dXJuIGM9XG5iLnBlbmRpbmdQcm9wcy5jaGlsZHJlbixPLmN1cnJlbnR8fG51bGwhPT1jJiZiLm1lbW9pemVkUHJvcHMhPT1jPyhRKGEsYixjKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpOmE9UihhLGIpLGE7Y2FzZSAxNTpyZXR1cm4gYz1iLnBlbmRpbmdQcm9wcyxiLm1lbW9pemVkUHJvcHM9PT1jP2E9UihhLGIpOihRKGEsYixjLmNoaWxkcmVuKSxiLm1lbW9pemVkUHJvcHM9YyxhPWIuY2hpbGQpLGE7Y2FzZSAxMzpyZXR1cm4gSmcoYSxiLGMpO2Nhc2UgMTI6YTppZihkPWIudHlwZSxmPWIucGVuZGluZ1Byb3BzLGs9Yi5tZW1vaXplZFByb3BzLGU9ZC5fY3VycmVudFZhbHVlLGc9ZC5fY2hhbmdlZEJpdHMsTy5jdXJyZW50fHwwIT09Z3x8ayE9PWYpe2IubWVtb2l6ZWRQcm9wcz1mO2g9Zi51bnN0YWJsZV9vYnNlcnZlZEJpdHM7aWYodm9pZCAwPT09aHx8bnVsbD09PWgpaD0xMDczNzQxODIzO2Iuc3RhdGVOb2RlPWg7aWYoMCE9PShnJmgpKUlnKGIsZCxnLGMpO2Vsc2UgaWYoaz09PWYpe2E9XG5SKGEsYik7YnJlYWsgYX1jPWYuY2hpbGRyZW47Yz1jKGUpO2IuZWZmZWN0VGFnfD0xO1EoYSxiLGMpO2E9Yi5jaGlsZH1lbHNlIGE9UihhLGIpO3JldHVybiBhO2RlZmF1bHQ6QShcIjE1NlwiKX19ZnVuY3Rpb24gTGcoYSl7YS5lZmZlY3RUYWd8PTR9dmFyIFBnPXZvaWQgMCxRZz12b2lkIDAsUmc9dm9pZCAwO1BnPWZ1bmN0aW9uKCl7fTtRZz1mdW5jdGlvbihhLGIsYyl7KGIudXBkYXRlUXVldWU9YykmJkxnKGIpfTtSZz1mdW5jdGlvbihhLGIsYyxkKXtjIT09ZCYmTGcoYil9O1xuZnVuY3Rpb24gU2coYSxiKXt2YXIgYz1iLnBlbmRpbmdQcm9wcztzd2l0Y2goYi50YWcpe2Nhc2UgMTpyZXR1cm4gbnVsbDtjYXNlIDI6cmV0dXJuIG9mKGIpLG51bGw7Y2FzZSAzOmVnKGIpO3BmKGIpO3ZhciBkPWIuc3RhdGVOb2RlO2QucGVuZGluZ0NvbnRleHQmJihkLmNvbnRleHQ9ZC5wZW5kaW5nQ29udGV4dCxkLnBlbmRpbmdDb250ZXh0PW51bGwpO2lmKG51bGw9PT1hfHxudWxsPT09YS5jaGlsZClDZyhiKSxiLmVmZmVjdFRhZyY9LTM7UGcoYik7cmV0dXJuIG51bGw7Y2FzZSA1OmZnKGIpO2Q9Y2coYmcuY3VycmVudCk7dmFyIGU9Yi50eXBlO2lmKG51bGwhPT1hJiZudWxsIT1iLnN0YXRlTm9kZSl7dmFyIGY9YS5tZW1vaXplZFByb3BzLGc9Yi5zdGF0ZU5vZGUsaD1jZygkZi5jdXJyZW50KTtnPVNlKGcsZSxmLGMsZCk7UWcoYSxiLGcsZSxmLGMsZCxoKTthLnJlZiE9PWIucmVmJiYoYi5lZmZlY3RUYWd8PTEyOCl9ZWxzZXtpZighYylyZXR1cm4gbnVsbD09PWIuc3RhdGVOb2RlP1xuQShcIjE2NlwiKTp2b2lkIDAsbnVsbDthPWNnKCRmLmN1cnJlbnQpO2lmKENnKGIpKWM9Yi5zdGF0ZU5vZGUsZT1iLnR5cGUsZj1iLm1lbW9pemVkUHJvcHMsY1tDXT1iLGNbTWFdPWYsZD1VZShjLGUsZixhLGQpLGIudXBkYXRlUXVldWU9ZCxudWxsIT09ZCYmTGcoYik7ZWxzZXthPVBlKGUsYyxkLGEpO2FbQ109YjthW01hXT1jO2E6Zm9yKGY9Yi5jaGlsZDtudWxsIT09Zjspe2lmKDU9PT1mLnRhZ3x8Nj09PWYudGFnKWEuYXBwZW5kQ2hpbGQoZi5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWYudGFnJiZudWxsIT09Zi5jaGlsZCl7Zi5jaGlsZC5yZXR1cm49ZjtmPWYuY2hpbGQ7Y29udGludWV9aWYoZj09PWIpYnJlYWs7Zm9yKDtudWxsPT09Zi5zaWJsaW5nOyl7aWYobnVsbD09PWYucmV0dXJufHxmLnJldHVybj09PWIpYnJlYWsgYTtmPWYucmV0dXJufWYuc2libGluZy5yZXR1cm49Zi5yZXR1cm47Zj1mLnNpYmxpbmd9UmUoYSxlLGMsZCk7WmUoZSxjKSYmTGcoYik7Yi5zdGF0ZU5vZGU9XG5hfW51bGwhPT1iLnJlZiYmKGIuZWZmZWN0VGFnfD0xMjgpfXJldHVybiBudWxsO2Nhc2UgNjppZihhJiZudWxsIT1iLnN0YXRlTm9kZSlSZyhhLGIsYS5tZW1vaXplZFByb3BzLGMpO2Vsc2V7aWYoXCJzdHJpbmdcIiE9PXR5cGVvZiBjKXJldHVybiBudWxsPT09Yi5zdGF0ZU5vZGU/QShcIjE2NlwiKTp2b2lkIDAsbnVsbDtkPWNnKGJnLmN1cnJlbnQpO2NnKCRmLmN1cnJlbnQpO0NnKGIpPyhkPWIuc3RhdGVOb2RlLGM9Yi5tZW1vaXplZFByb3BzLGRbQ109YixWZShkLGMpJiZMZyhiKSk6KGQ9UWUoYyxkKSxkW0NdPWIsYi5zdGF0ZU5vZGU9ZCl9cmV0dXJuIG51bGw7Y2FzZSAxNDpyZXR1cm4gbnVsbDtjYXNlIDE2OnJldHVybiBudWxsO2Nhc2UgMTA6cmV0dXJuIG51bGw7Y2FzZSAxMTpyZXR1cm4gbnVsbDtjYXNlIDE1OnJldHVybiBudWxsO2Nhc2UgNDpyZXR1cm4gZWcoYiksUGcoYiksbnVsbDtjYXNlIDEzOnJldHVybiBZZihiKSxudWxsO2Nhc2UgMTI6cmV0dXJuIG51bGw7Y2FzZSAwOkEoXCIxNjdcIik7XG5kZWZhdWx0OkEoXCIxNTZcIil9fWZ1bmN0aW9uIFRnKGEsYil7dmFyIGM9Yi5zb3VyY2U7bnVsbD09PWIuc3RhY2smJm51bGwhPT1jJiZ2YyhjKTtudWxsIT09YyYmdGMoYyk7Yj1iLnZhbHVlO251bGwhPT1hJiYyPT09YS50YWcmJnRjKGEpO3RyeXtiJiZiLnN1cHByZXNzUmVhY3RFcnJvckxvZ2dpbmd8fGNvbnNvbGUuZXJyb3IoYil9Y2F0Y2goZCl7ZCYmZC5zdXBwcmVzc1JlYWN0RXJyb3JMb2dnaW5nfHxjb25zb2xlLmVycm9yKGQpfX1mdW5jdGlvbiBVZyhhKXt2YXIgYj1hLnJlZjtpZihudWxsIT09YilpZihcImZ1bmN0aW9uXCI9PT10eXBlb2YgYil0cnl7YihudWxsKX1jYXRjaChjKXtWZyhhLGMpfWVsc2UgYi5jdXJyZW50PW51bGx9XG5mdW5jdGlvbiBXZyhhKXtcImZ1bmN0aW9uXCI9PT10eXBlb2YgR2YmJkdmKGEpO3N3aXRjaChhLnRhZyl7Y2FzZSAyOlVnKGEpO3ZhciBiPWEuc3RhdGVOb2RlO2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBiLmNvbXBvbmVudFdpbGxVbm1vdW50KXRyeXtiLnByb3BzPWEubWVtb2l6ZWRQcm9wcyxiLnN0YXRlPWEubWVtb2l6ZWRTdGF0ZSxiLmNvbXBvbmVudFdpbGxVbm1vdW50KCl9Y2F0Y2goYyl7VmcoYSxjKX1icmVhaztjYXNlIDU6VWcoYSk7YnJlYWs7Y2FzZSA0OlhnKGEpfX1mdW5jdGlvbiBZZyhhKXtyZXR1cm4gNT09PWEudGFnfHwzPT09YS50YWd8fDQ9PT1hLnRhZ31cbmZ1bmN0aW9uIFpnKGEpe2E6e2Zvcih2YXIgYj1hLnJldHVybjtudWxsIT09Yjspe2lmKFlnKGIpKXt2YXIgYz1iO2JyZWFrIGF9Yj1iLnJldHVybn1BKFwiMTYwXCIpO2M9dm9pZCAwfXZhciBkPWI9dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmI9Yy5zdGF0ZU5vZGU7ZD0hMTticmVhaztjYXNlIDM6Yj1jLnN0YXRlTm9kZS5jb250YWluZXJJbmZvO2Q9ITA7YnJlYWs7Y2FzZSA0OmI9Yy5zdGF0ZU5vZGUuY29udGFpbmVySW5mbztkPSEwO2JyZWFrO2RlZmF1bHQ6QShcIjE2MVwiKX1jLmVmZmVjdFRhZyYxNiYmKEdlKGIsXCJcIiksYy5lZmZlY3RUYWcmPS0xNyk7YTpiOmZvcihjPWE7Oyl7Zm9yKDtudWxsPT09Yy5zaWJsaW5nOyl7aWYobnVsbD09PWMucmV0dXJufHxZZyhjLnJldHVybikpe2M9bnVsbDticmVhayBhfWM9Yy5yZXR1cm59Yy5zaWJsaW5nLnJldHVybj1jLnJldHVybjtmb3IoYz1jLnNpYmxpbmc7NSE9PWMudGFnJiY2IT09Yy50YWc7KXtpZihjLmVmZmVjdFRhZyYyKWNvbnRpbnVlIGI7XG5pZihudWxsPT09Yy5jaGlsZHx8ND09PWMudGFnKWNvbnRpbnVlIGI7ZWxzZSBjLmNoaWxkLnJldHVybj1jLGM9Yy5jaGlsZH1pZighKGMuZWZmZWN0VGFnJjIpKXtjPWMuc3RhdGVOb2RlO2JyZWFrIGF9fWZvcih2YXIgZT1hOzspe2lmKDU9PT1lLnRhZ3x8Nj09PWUudGFnKWlmKGMpaWYoZCl7dmFyIGY9YixnPWUuc3RhdGVOb2RlLGg9Yzs4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGcsaCk6Zi5pbnNlcnRCZWZvcmUoZyxoKX1lbHNlIGIuaW5zZXJ0QmVmb3JlKGUuc3RhdGVOb2RlLGMpO2Vsc2UgZD8oZj1iLGc9ZS5zdGF0ZU5vZGUsOD09PWYubm9kZVR5cGU/Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnLGYpOmYuYXBwZW5kQ2hpbGQoZykpOmIuYXBwZW5kQ2hpbGQoZS5zdGF0ZU5vZGUpO2Vsc2UgaWYoNCE9PWUudGFnJiZudWxsIT09ZS5jaGlsZCl7ZS5jaGlsZC5yZXR1cm49ZTtlPWUuY2hpbGQ7Y29udGludWV9aWYoZT09PWEpYnJlYWs7Zm9yKDtudWxsPT09XG5lLnNpYmxpbmc7KXtpZihudWxsPT09ZS5yZXR1cm58fGUucmV0dXJuPT09YSlyZXR1cm47ZT1lLnJldHVybn1lLnNpYmxpbmcucmV0dXJuPWUucmV0dXJuO2U9ZS5zaWJsaW5nfX1cbmZ1bmN0aW9uIFhnKGEpe2Zvcih2YXIgYj1hLGM9ITEsZD12b2lkIDAsZT12b2lkIDA7Oyl7aWYoIWMpe2M9Yi5yZXR1cm47YTpmb3IoOzspe251bGw9PT1jP0EoXCIxNjBcIik6dm9pZCAwO3N3aXRjaChjLnRhZyl7Y2FzZSA1OmQ9Yy5zdGF0ZU5vZGU7ZT0hMTticmVhayBhO2Nhc2UgMzpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhO2Nhc2UgNDpkPWMuc3RhdGVOb2RlLmNvbnRhaW5lckluZm87ZT0hMDticmVhayBhfWM9Yy5yZXR1cm59Yz0hMH1pZig1PT09Yi50YWd8fDY9PT1iLnRhZyl7YTpmb3IodmFyIGY9YixnPWY7OylpZihXZyhnKSxudWxsIT09Zy5jaGlsZCYmNCE9PWcudGFnKWcuY2hpbGQucmV0dXJuPWcsZz1nLmNoaWxkO2Vsc2V7aWYoZz09PWYpYnJlYWs7Zm9yKDtudWxsPT09Zy5zaWJsaW5nOyl7aWYobnVsbD09PWcucmV0dXJufHxnLnJldHVybj09PWYpYnJlYWsgYTtnPWcucmV0dXJufWcuc2libGluZy5yZXR1cm49Zy5yZXR1cm47Zz1nLnNpYmxpbmd9ZT9cbihmPWQsZz1iLnN0YXRlTm9kZSw4PT09Zi5ub2RlVHlwZT9mLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZyk6Zi5yZW1vdmVDaGlsZChnKSk6ZC5yZW1vdmVDaGlsZChiLnN0YXRlTm9kZSl9ZWxzZSBpZig0PT09Yi50YWc/ZD1iLnN0YXRlTm9kZS5jb250YWluZXJJbmZvOldnKGIpLG51bGwhPT1iLmNoaWxkKXtiLmNoaWxkLnJldHVybj1iO2I9Yi5jaGlsZDtjb250aW51ZX1pZihiPT09YSlicmVhaztmb3IoO251bGw9PT1iLnNpYmxpbmc7KXtpZihudWxsPT09Yi5yZXR1cm58fGIucmV0dXJuPT09YSlyZXR1cm47Yj1iLnJldHVybjs0PT09Yi50YWcmJihjPSExKX1iLnNpYmxpbmcucmV0dXJuPWIucmV0dXJuO2I9Yi5zaWJsaW5nfX1cbmZ1bmN0aW9uICRnKGEsYil7c3dpdGNoKGIudGFnKXtjYXNlIDI6YnJlYWs7Y2FzZSA1OnZhciBjPWIuc3RhdGVOb2RlO2lmKG51bGwhPWMpe3ZhciBkPWIubWVtb2l6ZWRQcm9wczthPW51bGwhPT1hP2EubWVtb2l6ZWRQcm9wczpkO3ZhciBlPWIudHlwZSxmPWIudXBkYXRlUXVldWU7Yi51cGRhdGVRdWV1ZT1udWxsO251bGwhPT1mJiYoY1tNYV09ZCxUZShjLGYsZSxhLGQpKX1icmVhaztjYXNlIDY6bnVsbD09PWIuc3RhdGVOb2RlP0EoXCIxNjJcIik6dm9pZCAwO2Iuc3RhdGVOb2RlLm5vZGVWYWx1ZT1iLm1lbW9pemVkUHJvcHM7YnJlYWs7Y2FzZSAzOmJyZWFrO2Nhc2UgMTU6YnJlYWs7Y2FzZSAxNjpicmVhaztkZWZhdWx0OkEoXCIxNjNcIil9fWZ1bmN0aW9uIGFoKGEsYixjKXtjPUtmKGMpO2MudGFnPTM7Yy5wYXlsb2FkPXtlbGVtZW50Om51bGx9O3ZhciBkPWIudmFsdWU7Yy5jYWxsYmFjaz1mdW5jdGlvbigpe2JoKGQpO1RnKGEsYil9O3JldHVybiBjfVxuZnVuY3Rpb24gY2goYSxiLGMpe2M9S2YoYyk7Yy50YWc9Mzt2YXIgZD1hLnN0YXRlTm9kZTtudWxsIT09ZCYmXCJmdW5jdGlvblwiPT09dHlwZW9mIGQuY29tcG9uZW50RGlkQ2F0Y2gmJihjLmNhbGxiYWNrPWZ1bmN0aW9uKCl7bnVsbD09PWRoP2RoPW5ldyBTZXQoW3RoaXNdKTpkaC5hZGQodGhpcyk7dmFyIGM9Yi52YWx1ZSxkPWIuc3RhY2s7VGcoYSxiKTt0aGlzLmNvbXBvbmVudERpZENhdGNoKGMse2NvbXBvbmVudFN0YWNrOm51bGwhPT1kP2Q6XCJcIn0pfSk7cmV0dXJuIGN9XG5mdW5jdGlvbiBlaChhLGIsYyxkLGUsZil7Yy5lZmZlY3RUYWd8PTUxMjtjLmZpcnN0RWZmZWN0PWMubGFzdEVmZmVjdD1udWxsO2Q9VGYoZCxjKTthPWI7ZG97c3dpdGNoKGEudGFnKXtjYXNlIDM6YS5lZmZlY3RUYWd8PTEwMjQ7ZD1haChhLGQsZik7TmYoYSxkLGYpO3JldHVybjtjYXNlIDI6aWYoYj1kLGM9YS5zdGF0ZU5vZGUsMD09PShhLmVmZmVjdFRhZyY2NCkmJm51bGwhPT1jJiZcImZ1bmN0aW9uXCI9PT10eXBlb2YgYy5jb21wb25lbnREaWRDYXRjaCYmKG51bGw9PT1kaHx8IWRoLmhhcyhjKSkpe2EuZWZmZWN0VGFnfD0xMDI0O2Q9Y2goYSxiLGYpO05mKGEsZCxmKTtyZXR1cm59fWE9YS5yZXR1cm59d2hpbGUobnVsbCE9PWEpfVxuZnVuY3Rpb24gZmgoYSl7c3dpdGNoKGEudGFnKXtjYXNlIDI6b2YoYSk7dmFyIGI9YS5lZmZlY3RUYWc7cmV0dXJuIGImMTAyND8oYS5lZmZlY3RUYWc9YiYtMTAyNXw2NCxhKTpudWxsO2Nhc2UgMzpyZXR1cm4gZWcoYSkscGYoYSksYj1hLmVmZmVjdFRhZyxiJjEwMjQ/KGEuZWZmZWN0VGFnPWImLTEwMjV8NjQsYSk6bnVsbDtjYXNlIDU6cmV0dXJuIGZnKGEpLG51bGw7Y2FzZSAxNjpyZXR1cm4gYj1hLmVmZmVjdFRhZyxiJjEwMjQ/KGEuZWZmZWN0VGFnPWImLTEwMjV8NjQsYSk6bnVsbDtjYXNlIDQ6cmV0dXJuIGVnKGEpLG51bGw7Y2FzZSAxMzpyZXR1cm4gWWYoYSksbnVsbDtkZWZhdWx0OnJldHVybiBudWxsfX12YXIgZ2g9YWYoKSxoaD0yLGloPWdoLGpoPTAsa2g9MCxsaD0hMSxTPW51bGwsbWg9bnVsbCxUPTAsbmg9LTEsb2g9ITEsVT1udWxsLHBoPSExLHFoPSExLGRoPW51bGw7XG5mdW5jdGlvbiByaCgpe2lmKG51bGwhPT1TKWZvcih2YXIgYT1TLnJldHVybjtudWxsIT09YTspe3ZhciBiPWE7c3dpdGNoKGIudGFnKXtjYXNlIDI6b2YoYik7YnJlYWs7Y2FzZSAzOmVnKGIpO3BmKGIpO2JyZWFrO2Nhc2UgNTpmZyhiKTticmVhaztjYXNlIDQ6ZWcoYik7YnJlYWs7Y2FzZSAxMzpZZihiKX1hPWEucmV0dXJufW1oPW51bGw7VD0wO25oPS0xO29oPSExO1M9bnVsbDtxaD0hMX1cbmZ1bmN0aW9uIHNoKGEpe2Zvcig7Oyl7dmFyIGI9YS5hbHRlcm5hdGUsYz1hLnJldHVybixkPWEuc2libGluZztpZigwPT09KGEuZWZmZWN0VGFnJjUxMikpe2I9U2coYixhLFQpO3ZhciBlPWE7aWYoMTA3Mzc0MTgyMz09PVR8fDEwNzM3NDE4MjMhPT1lLmV4cGlyYXRpb25UaW1lKXt2YXIgZj0wO3N3aXRjaChlLnRhZyl7Y2FzZSAzOmNhc2UgMjp2YXIgZz1lLnVwZGF0ZVF1ZXVlO251bGwhPT1nJiYoZj1nLmV4cGlyYXRpb25UaW1lKX1mb3IoZz1lLmNoaWxkO251bGwhPT1nOykwIT09Zy5leHBpcmF0aW9uVGltZSYmKDA9PT1mfHxmPmcuZXhwaXJhdGlvblRpbWUpJiYoZj1nLmV4cGlyYXRpb25UaW1lKSxnPWcuc2libGluZztlLmV4cGlyYXRpb25UaW1lPWZ9aWYobnVsbCE9PWIpcmV0dXJuIGI7bnVsbCE9PWMmJjA9PT0oYy5lZmZlY3RUYWcmNTEyKSYmKG51bGw9PT1jLmZpcnN0RWZmZWN0JiYoYy5maXJzdEVmZmVjdD1hLmZpcnN0RWZmZWN0KSxudWxsIT09YS5sYXN0RWZmZWN0JiZcbihudWxsIT09Yy5sYXN0RWZmZWN0JiYoYy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YS5maXJzdEVmZmVjdCksYy5sYXN0RWZmZWN0PWEubGFzdEVmZmVjdCksMTxhLmVmZmVjdFRhZyYmKG51bGwhPT1jLmxhc3RFZmZlY3Q/Yy5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9YTpjLmZpcnN0RWZmZWN0PWEsYy5sYXN0RWZmZWN0PWEpKTtpZihudWxsIT09ZClyZXR1cm4gZDtpZihudWxsIT09YylhPWM7ZWxzZXtxaD0hMDticmVha319ZWxzZXthPWZoKGEsb2gsVCk7aWYobnVsbCE9PWEpcmV0dXJuIGEuZWZmZWN0VGFnJj01MTEsYTtudWxsIT09YyYmKGMuZmlyc3RFZmZlY3Q9Yy5sYXN0RWZmZWN0PW51bGwsYy5lZmZlY3RUYWd8PTUxMik7aWYobnVsbCE9PWQpcmV0dXJuIGQ7aWYobnVsbCE9PWMpYT1jO2Vsc2UgYnJlYWt9fXJldHVybiBudWxsfVxuZnVuY3Rpb24gdGgoYSl7dmFyIGI9S2coYS5hbHRlcm5hdGUsYSxUKTtudWxsPT09YiYmKGI9c2goYSkpO2VjLmN1cnJlbnQ9bnVsbDtyZXR1cm4gYn1cbmZ1bmN0aW9uIHVoKGEsYixjKXtsaD9BKFwiMjQzXCIpOnZvaWQgMDtsaD0hMDtpZihiIT09VHx8YSE9PW1ofHxudWxsPT09UylyaCgpLG1oPWEsVD1iLG5oPS0xLFM9dmYobWguY3VycmVudCxudWxsLFQpLGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPTA7dmFyIGQ9ITE7b2g9IWN8fFQ8PWhoO2Rve3RyeXtpZihjKWZvcig7bnVsbCE9PVMmJiF2aCgpOylTPXRoKFMpO2Vsc2UgZm9yKDtudWxsIT09UzspUz10aChTKX1jYXRjaChmKXtpZihudWxsPT09UylkPSEwLGJoKGYpO2Vsc2V7bnVsbD09PVM/QShcIjI3MVwiKTp2b2lkIDA7Yz1TO3ZhciBlPWMucmV0dXJuO2lmKG51bGw9PT1lKXtkPSEwO2JoKGYpO2JyZWFrfWVoKGEsZSxjLGYsb2gsVCxpaCk7Uz1zaChjKX19YnJlYWt9d2hpbGUoMSk7bGg9ITE7aWYoZClyZXR1cm4gbnVsbDtpZihudWxsPT09Uyl7aWYocWgpcmV0dXJuIGEucGVuZGluZ0NvbW1pdEV4cGlyYXRpb25UaW1lPWIsYS5jdXJyZW50LmFsdGVybmF0ZTtvaD9BKFwiMjYyXCIpOlxudm9pZCAwOzA8PW5oJiZzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7dmFyIGI9YS5jdXJyZW50LmV4cGlyYXRpb25UaW1lOzAhPT1iJiYoMD09PWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWV8fGEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU8YikmJndoKGEsYil9LG5oKTt4aChhLmN1cnJlbnQuZXhwaXJhdGlvblRpbWUpfXJldHVybiBudWxsfVxuZnVuY3Rpb24gVmcoYSxiKXt2YXIgYzthOntsaCYmIXBoP0EoXCIyNjNcIik6dm9pZCAwO2ZvcihjPWEucmV0dXJuO251bGwhPT1jOyl7c3dpdGNoKGMudGFnKXtjYXNlIDI6dmFyIGQ9Yy5zdGF0ZU5vZGU7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGMudHlwZS5nZXREZXJpdmVkU3RhdGVGcm9tQ2F0Y2h8fFwiZnVuY3Rpb25cIj09PXR5cGVvZiBkLmNvbXBvbmVudERpZENhdGNoJiYobnVsbD09PWRofHwhZGguaGFzKGQpKSl7YT1UZihiLGEpO2E9Y2goYyxhLDEpO01mKGMsYSwxKTtrZyhjLDEpO2M9dm9pZCAwO2JyZWFrIGF9YnJlYWs7Y2FzZSAzOmE9VGYoYixhKTthPWFoKGMsYSwxKTtNZihjLGEsMSk7a2coYywxKTtjPXZvaWQgMDticmVhayBhfWM9Yy5yZXR1cm59Mz09PWEudGFnJiYoYz1UZihiLGEpLGM9YWgoYSxjLDEpLE1mKGEsYywxKSxrZyhhLDEpKTtjPXZvaWQgMH1yZXR1cm4gY31cbmZ1bmN0aW9uIHloKCl7dmFyIGE9MisyNSooKChpZygpLTIrNTAwKS8yNXwwKSsxKTthPD1qaCYmKGE9amgrMSk7cmV0dXJuIGpoPWF9ZnVuY3Rpb24gamcoYSxiKXthPTAhPT1raD9raDpsaD9waD8xOlQ6Yi5tb2RlJjE/emg/MisxMCooKChhLTIrMTUpLzEwfDApKzEpOjIrMjUqKCgoYS0yKzUwMCkvMjV8MCkrMSk6MTt6aCYmKDA9PT1BaHx8YT5BaCkmJihBaD1hKTtyZXR1cm4gYX1cbmZ1bmN0aW9uIGtnKGEsYil7Zm9yKDtudWxsIT09YTspe2lmKDA9PT1hLmV4cGlyYXRpb25UaW1lfHxhLmV4cGlyYXRpb25UaW1lPmIpYS5leHBpcmF0aW9uVGltZT1iO251bGwhPT1hLmFsdGVybmF0ZSYmKDA9PT1hLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZXx8YS5hbHRlcm5hdGUuZXhwaXJhdGlvblRpbWU+YikmJihhLmFsdGVybmF0ZS5leHBpcmF0aW9uVGltZT1iKTtpZihudWxsPT09YS5yZXR1cm4paWYoMz09PWEudGFnKXt2YXIgYz1hLnN0YXRlTm9kZTshbGgmJjAhPT1UJiZiPFQmJnJoKCk7dmFyIGQ9Yy5jdXJyZW50LmV4cGlyYXRpb25UaW1lO2xoJiYhcGgmJm1oPT09Y3x8d2goYyxkKTtCaD5DaCYmQShcIjE4NVwiKX1lbHNlIGJyZWFrO2E9YS5yZXR1cm59fWZ1bmN0aW9uIGlnKCl7aWg9YWYoKS1naDtyZXR1cm4gaGg9KGloLzEwfDApKzJ9XG5mdW5jdGlvbiBEaChhKXt2YXIgYj1raDtraD0yKzI1KigoKGlnKCktMis1MDApLzI1fDApKzEpO3RyeXtyZXR1cm4gYSgpfWZpbmFsbHl7a2g9Yn19ZnVuY3Rpb24gRWgoYSxiLGMsZCxlKXt2YXIgZj1raDtraD0xO3RyeXtyZXR1cm4gYShiLGMsZCxlKX1maW5hbGx5e2toPWZ9fXZhciBGaD1udWxsLFY9bnVsbCxHaD0wLEhoPS0xLFc9ITEsWD1udWxsLFk9MCxBaD0wLEloPSExLEpoPSExLEtoPW51bGwsTGg9bnVsbCxaPSExLE1oPSExLHpoPSExLE5oPW51bGwsQ2g9MUUzLEJoPTAsT2g9MTtmdW5jdGlvbiBQaChhKXtpZigwIT09R2gpe2lmKGE+R2gpcmV0dXJuO2NmKEhoKX12YXIgYj1hZigpLWdoO0doPWE7SGg9YmYoUWgse3RpbWVvdXQ6MTAqKGEtMiktYn0pfVxuZnVuY3Rpb24gd2goYSxiKXtpZihudWxsPT09YS5uZXh0U2NoZWR1bGVkUm9vdClhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWIsbnVsbD09PVY/KEZoPVY9YSxhLm5leHRTY2hlZHVsZWRSb290PWEpOihWPVYubmV4dFNjaGVkdWxlZFJvb3Q9YSxWLm5leHRTY2hlZHVsZWRSb290PUZoKTtlbHNle3ZhciBjPWEucmVtYWluaW5nRXhwaXJhdGlvblRpbWU7aWYoMD09PWN8fGI8YylhLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWJ9V3x8KFo/TWgmJihYPWEsWT0xLFJoKGEsMSwhMSkpOjE9PT1iP1NoKCk6UGgoYikpfVxuZnVuY3Rpb24gVGgoKXt2YXIgYT0wLGI9bnVsbDtpZihudWxsIT09Vilmb3IodmFyIGM9VixkPUZoO251bGwhPT1kOyl7dmFyIGU9ZC5yZW1haW5pbmdFeHBpcmF0aW9uVGltZTtpZigwPT09ZSl7bnVsbD09PWN8fG51bGw9PT1WP0EoXCIyNDRcIik6dm9pZCAwO2lmKGQ9PT1kLm5leHRTY2hlZHVsZWRSb290KXtGaD1WPWQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDticmVha31lbHNlIGlmKGQ9PT1GaClGaD1lPWQubmV4dFNjaGVkdWxlZFJvb3QsVi5uZXh0U2NoZWR1bGVkUm9vdD1lLGQubmV4dFNjaGVkdWxlZFJvb3Q9bnVsbDtlbHNlIGlmKGQ9PT1WKXtWPWM7Vi5uZXh0U2NoZWR1bGVkUm9vdD1GaDtkLm5leHRTY2hlZHVsZWRSb290PW51bGw7YnJlYWt9ZWxzZSBjLm5leHRTY2hlZHVsZWRSb290PWQubmV4dFNjaGVkdWxlZFJvb3QsZC5uZXh0U2NoZWR1bGVkUm9vdD1udWxsO2Q9Yy5uZXh0U2NoZWR1bGVkUm9vdH1lbHNle2lmKDA9PT1hfHxlPGEpYT1lLGI9ZDtpZihkPT09VilicmVhaztcbmM9ZDtkPWQubmV4dFNjaGVkdWxlZFJvb3R9fWM9WDtudWxsIT09YyYmYz09PWImJjE9PT1hP0JoKys6Qmg9MDtYPWI7WT1hfWZ1bmN0aW9uIFFoKGEpe1VoKDAsITAsYSl9ZnVuY3Rpb24gU2goKXtVaCgxLCExLG51bGwpfWZ1bmN0aW9uIFVoKGEsYixjKXtMaD1jO1RoKCk7aWYoYilmb3IoO251bGwhPT1YJiYwIT09WSYmKDA9PT1hfHxhPj1ZKSYmKCFJaHx8aWcoKT49WSk7KWlnKCksUmgoWCxZLCFJaCksVGgoKTtlbHNlIGZvcig7bnVsbCE9PVgmJjAhPT1ZJiYoMD09PWF8fGE+PVkpOylSaChYLFksITEpLFRoKCk7bnVsbCE9PUxoJiYoR2g9MCxIaD0tMSk7MCE9PVkmJlBoKFkpO0xoPW51bGw7SWg9ITE7VmgoKX1mdW5jdGlvbiBXaChhLGIpe1c/QShcIjI1M1wiKTp2b2lkIDA7WD1hO1k9YjtSaChhLGIsITEpO1NoKCk7VmgoKX1cbmZ1bmN0aW9uIFZoKCl7Qmg9MDtpZihudWxsIT09Tmgpe3ZhciBhPU5oO05oPW51bGw7Zm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspe3ZhciBjPWFbYl07dHJ5e2MuX29uQ29tcGxldGUoKX1jYXRjaChkKXtKaHx8KEpoPSEwLEtoPWQpfX19aWYoSmgpdGhyb3cgYT1LaCxLaD1udWxsLEpoPSExLGE7fWZ1bmN0aW9uIFJoKGEsYixjKXtXP0EoXCIyNDVcIik6dm9pZCAwO1c9ITA7Yz8oYz1hLmZpbmlzaGVkV29yayxudWxsIT09Yz9YaChhLGMsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsYz11aChhLGIsITApLG51bGwhPT1jJiYodmgoKT9hLmZpbmlzaGVkV29yaz1jOlhoKGEsYyxiKSkpKTooYz1hLmZpbmlzaGVkV29yayxudWxsIT09Yz9YaChhLGMsYik6KGEuZmluaXNoZWRXb3JrPW51bGwsYz11aChhLGIsITEpLG51bGwhPT1jJiZYaChhLGMsYikpKTtXPSExfVxuZnVuY3Rpb24gWGgoYSxiLGMpe3ZhciBkPWEuZmlyc3RCYXRjaDtpZihudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU8PWMmJihudWxsPT09Tmg/Tmg9W2RdOk5oLnB1c2goZCksZC5fZGVmZXIpKXthLmZpbmlzaGVkV29yaz1iO2EucmVtYWluaW5nRXhwaXJhdGlvblRpbWU9MDtyZXR1cm59YS5maW5pc2hlZFdvcms9bnVsbDtwaD1saD0hMDtjPWIuc3RhdGVOb2RlO2MuY3VycmVudD09PWI/QShcIjE3N1wiKTp2b2lkIDA7ZD1jLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZTswPT09ZD9BKFwiMjYxXCIpOnZvaWQgMDtjLnBlbmRpbmdDb21taXRFeHBpcmF0aW9uVGltZT0wO2lnKCk7ZWMuY3VycmVudD1udWxsO2lmKDE8Yi5lZmZlY3RUYWcpaWYobnVsbCE9PWIubGFzdEVmZmVjdCl7Yi5sYXN0RWZmZWN0Lm5leHRFZmZlY3Q9Yjt2YXIgZT1iLmZpcnN0RWZmZWN0fWVsc2UgZT1iO2Vsc2UgZT1iLmZpcnN0RWZmZWN0O1hlPUdkO3ZhciBmPWRhKCk7aWYoVGQoZikpe2lmKFwic2VsZWN0aW9uU3RhcnRcImluXG5mKXZhciBnPXtzdGFydDpmLnNlbGVjdGlvblN0YXJ0LGVuZDpmLnNlbGVjdGlvbkVuZH07ZWxzZSBhOnt2YXIgaD13aW5kb3cuZ2V0U2VsZWN0aW9uJiZ3aW5kb3cuZ2V0U2VsZWN0aW9uKCk7aWYoaCYmMCE9PWgucmFuZ2VDb3VudCl7Zz1oLmFuY2hvck5vZGU7dmFyIGs9aC5hbmNob3JPZmZzZXQsbj1oLmZvY3VzTm9kZTtoPWguZm9jdXNPZmZzZXQ7dHJ5e2cubm9kZVR5cGUsbi5ub2RlVHlwZX1jYXRjaChXYSl7Zz1udWxsO2JyZWFrIGF9dmFyIHI9MCx3PS0xLFA9LTEsa2M9MCxIZD0wLEU9Zix0PW51bGw7Yjpmb3IoOzspe2Zvcih2YXIgeDs7KXtFIT09Z3x8MCE9PWsmJjMhPT1FLm5vZGVUeXBlfHwodz1yK2spO0UhPT1ufHwwIT09aCYmMyE9PUUubm9kZVR5cGV8fChQPXIraCk7Mz09PUUubm9kZVR5cGUmJihyKz1FLm5vZGVWYWx1ZS5sZW5ndGgpO2lmKG51bGw9PT0oeD1FLmZpcnN0Q2hpbGQpKWJyZWFrO3Q9RTtFPXh9Zm9yKDs7KXtpZihFPT09ZilicmVhayBiO3Q9PT1nJiZcbisra2M9PT1rJiYodz1yKTt0PT09biYmKytIZD09PWgmJihQPXIpO2lmKG51bGwhPT0oeD1FLm5leHRTaWJsaW5nKSlicmVhaztFPXQ7dD1FLnBhcmVudE5vZGV9RT14fWc9LTE9PT13fHwtMT09PVA/bnVsbDp7c3RhcnQ6dyxlbmQ6UH19ZWxzZSBnPW51bGx9Zz1nfHx7c3RhcnQ6MCxlbmQ6MH19ZWxzZSBnPW51bGw7WWU9e2ZvY3VzZWRFbGVtOmYsc2VsZWN0aW9uUmFuZ2U6Z307SWQoITEpO2ZvcihVPWU7bnVsbCE9PVU7KXtmPSExO2c9dm9pZCAwO3RyeXtmb3IoO251bGwhPT1VOyl7aWYoVS5lZmZlY3RUYWcmMjU2KXt2YXIgdT1VLmFsdGVybmF0ZTtrPVU7c3dpdGNoKGsudGFnKXtjYXNlIDI6aWYoay5lZmZlY3RUYWcmMjU2JiZudWxsIT09dSl7dmFyIHk9dS5tZW1vaXplZFByb3BzLEQ9dS5tZW1vaXplZFN0YXRlLGphPWsuc3RhdGVOb2RlO2phLnByb3BzPWsubWVtb2l6ZWRQcm9wcztqYS5zdGF0ZT1rLm1lbW9pemVkU3RhdGU7dmFyIGhpPWphLmdldFNuYXBzaG90QmVmb3JlVXBkYXRlKHksXG5EKTtqYS5fX3JlYWN0SW50ZXJuYWxTbmFwc2hvdEJlZm9yZVVwZGF0ZT1oaX1icmVhaztjYXNlIDM6Y2FzZSA1OmNhc2UgNjpjYXNlIDQ6YnJlYWs7ZGVmYXVsdDpBKFwiMTYzXCIpfX1VPVUubmV4dEVmZmVjdH19Y2F0Y2goV2Epe2Y9ITAsZz1XYX1mJiYobnVsbD09PVU/QShcIjE3OFwiKTp2b2lkIDAsVmcoVSxnKSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9Zm9yKFU9ZTtudWxsIT09VTspe3U9ITE7eT12b2lkIDA7dHJ5e2Zvcig7bnVsbCE9PVU7KXt2YXIgcT1VLmVmZmVjdFRhZztxJjE2JiZHZShVLnN0YXRlTm9kZSxcIlwiKTtpZihxJjEyOCl7dmFyIHo9VS5hbHRlcm5hdGU7aWYobnVsbCE9PXope3ZhciBsPXoucmVmO251bGwhPT1sJiYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGw/bChudWxsKTpsLmN1cnJlbnQ9bnVsbCl9fXN3aXRjaChxJjE0KXtjYXNlIDI6WmcoVSk7VS5lZmZlY3RUYWcmPS0zO2JyZWFrO2Nhc2UgNjpaZyhVKTtVLmVmZmVjdFRhZyY9LTM7JGcoVS5hbHRlcm5hdGUsXG5VKTticmVhaztjYXNlIDQ6JGcoVS5hbHRlcm5hdGUsVSk7YnJlYWs7Y2FzZSA4OkQ9VSxYZyhEKSxELnJldHVybj1udWxsLEQuY2hpbGQ9bnVsbCxELmFsdGVybmF0ZSYmKEQuYWx0ZXJuYXRlLmNoaWxkPW51bGwsRC5hbHRlcm5hdGUucmV0dXJuPW51bGwpfVU9VS5uZXh0RWZmZWN0fX1jYXRjaChXYSl7dT0hMCx5PVdhfXUmJihudWxsPT09VT9BKFwiMTc4XCIpOnZvaWQgMCxWZyhVLHkpLG51bGwhPT1VJiYoVT1VLm5leHRFZmZlY3QpKX1sPVllO3o9ZGEoKTtxPWwuZm9jdXNlZEVsZW07dT1sLnNlbGVjdGlvblJhbmdlO2lmKHohPT1xJiZmYShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQscSkpe1RkKHEpJiYoej11LnN0YXJ0LGw9dS5lbmQsdm9pZCAwPT09bCYmKGw9eiksXCJzZWxlY3Rpb25TdGFydFwiaW4gcT8ocS5zZWxlY3Rpb25TdGFydD16LHEuc2VsZWN0aW9uRW5kPU1hdGgubWluKGwscS52YWx1ZS5sZW5ndGgpKTp3aW5kb3cuZ2V0U2VsZWN0aW9uJiYoej13aW5kb3cuZ2V0U2VsZWN0aW9uKCksXG55PXFbbGIoKV0ubGVuZ3RoLGw9TWF0aC5taW4odS5zdGFydCx5KSx1PXZvaWQgMD09PXUuZW5kP2w6TWF0aC5taW4odS5lbmQseSksIXouZXh0ZW5kJiZsPnUmJih5PXUsdT1sLGw9eSkseT1TZChxLGwpLEQ9U2QocSx1KSx5JiZEJiYoMSE9PXoucmFuZ2VDb3VudHx8ei5hbmNob3JOb2RlIT09eS5ub2RlfHx6LmFuY2hvck9mZnNldCE9PXkub2Zmc2V0fHx6LmZvY3VzTm9kZSE9PUQubm9kZXx8ei5mb2N1c09mZnNldCE9PUQub2Zmc2V0KSYmKGphPWRvY3VtZW50LmNyZWF0ZVJhbmdlKCksamEuc2V0U3RhcnQoeS5ub2RlLHkub2Zmc2V0KSx6LnJlbW92ZUFsbFJhbmdlcygpLGw+dT8oei5hZGRSYW5nZShqYSksei5leHRlbmQoRC5ub2RlLEQub2Zmc2V0KSk6KGphLnNldEVuZChELm5vZGUsRC5vZmZzZXQpLHouYWRkUmFuZ2UoamEpKSkpKTt6PVtdO2ZvcihsPXE7bD1sLnBhcmVudE5vZGU7KTE9PT1sLm5vZGVUeXBlJiZ6LnB1c2goe2VsZW1lbnQ6bCxsZWZ0Omwuc2Nyb2xsTGVmdCxcbnRvcDpsLnNjcm9sbFRvcH0pO3EuZm9jdXMoKTtmb3IocT0wO3E8ei5sZW5ndGg7cSsrKWw9eltxXSxsLmVsZW1lbnQuc2Nyb2xsTGVmdD1sLmxlZnQsbC5lbGVtZW50LnNjcm9sbFRvcD1sLnRvcH1ZZT1udWxsO0lkKFhlKTtYZT1udWxsO2MuY3VycmVudD1iO2ZvcihVPWU7bnVsbCE9PVU7KXtlPSExO3E9dm9pZCAwO3RyeXtmb3Ioej1kO251bGwhPT1VOyl7dmFyIGdnPVUuZWZmZWN0VGFnO2lmKGdnJjM2KXt2YXIgbGM9VS5hbHRlcm5hdGU7bD1VO3U9ejtzd2l0Y2gobC50YWcpe2Nhc2UgMjp2YXIgYmE9bC5zdGF0ZU5vZGU7aWYobC5lZmZlY3RUYWcmNClpZihudWxsPT09bGMpYmEucHJvcHM9bC5tZW1vaXplZFByb3BzLGJhLnN0YXRlPWwubWVtb2l6ZWRTdGF0ZSxiYS5jb21wb25lbnREaWRNb3VudCgpO2Vsc2V7dmFyIHJpPWxjLm1lbW9pemVkUHJvcHMsc2k9bGMubWVtb2l6ZWRTdGF0ZTtiYS5wcm9wcz1sLm1lbW9pemVkUHJvcHM7YmEuc3RhdGU9bC5tZW1vaXplZFN0YXRlO1xuYmEuY29tcG9uZW50RGlkVXBkYXRlKHJpLHNpLGJhLl9fcmVhY3RJbnRlcm5hbFNuYXBzaG90QmVmb3JlVXBkYXRlKX12YXIgTWc9bC51cGRhdGVRdWV1ZTtudWxsIT09TWcmJihiYS5wcm9wcz1sLm1lbW9pemVkUHJvcHMsYmEuc3RhdGU9bC5tZW1vaXplZFN0YXRlLFNmKGwsTWcsYmEsdSkpO2JyZWFrO2Nhc2UgMzp2YXIgTmc9bC51cGRhdGVRdWV1ZTtpZihudWxsIT09Tmcpe3k9bnVsbDtpZihudWxsIT09bC5jaGlsZClzd2l0Y2gobC5jaGlsZC50YWcpe2Nhc2UgNTp5PWwuY2hpbGQuc3RhdGVOb2RlO2JyZWFrO2Nhc2UgMjp5PWwuY2hpbGQuc3RhdGVOb2RlfVNmKGwsTmcseSx1KX1icmVhaztjYXNlIDU6dmFyIHRpPWwuc3RhdGVOb2RlO251bGw9PT1sYyYmbC5lZmZlY3RUYWcmNCYmWmUobC50eXBlLGwubWVtb2l6ZWRQcm9wcykmJnRpLmZvY3VzKCk7YnJlYWs7Y2FzZSA2OmJyZWFrO2Nhc2UgNDpicmVhaztjYXNlIDE1OmJyZWFrO2Nhc2UgMTY6YnJlYWs7ZGVmYXVsdDpBKFwiMTYzXCIpfX1pZihnZyZcbjEyOCl7bD12b2lkIDA7dmFyIHVjPVUucmVmO2lmKG51bGwhPT11Yyl7dmFyIE9nPVUuc3RhdGVOb2RlO3N3aXRjaChVLnRhZyl7Y2FzZSA1Omw9T2c7YnJlYWs7ZGVmYXVsdDpsPU9nfVwiZnVuY3Rpb25cIj09PXR5cGVvZiB1Yz91YyhsKTp1Yy5jdXJyZW50PWx9fXZhciB1aT1VLm5leHRFZmZlY3Q7VS5uZXh0RWZmZWN0PW51bGw7VT11aX19Y2F0Y2goV2Epe2U9ITAscT1XYX1lJiYobnVsbD09PVU/QShcIjE3OFwiKTp2b2lkIDAsVmcoVSxxKSxudWxsIT09VSYmKFU9VS5uZXh0RWZmZWN0KSl9bGg9cGg9ITE7XCJmdW5jdGlvblwiPT09dHlwZW9mIEZmJiZGZihiLnN0YXRlTm9kZSk7Yj1jLmN1cnJlbnQuZXhwaXJhdGlvblRpbWU7MD09PWImJihkaD1udWxsKTthLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWJ9ZnVuY3Rpb24gdmgoKXtyZXR1cm4gbnVsbD09PUxofHxMaC50aW1lUmVtYWluaW5nKCk+T2g/ITE6SWg9ITB9XG5mdW5jdGlvbiBiaChhKXtudWxsPT09WD9BKFwiMjQ2XCIpOnZvaWQgMDtYLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPTA7Smh8fChKaD0hMCxLaD1hKX1mdW5jdGlvbiB4aChhKXtudWxsPT09WD9BKFwiMjQ2XCIpOnZvaWQgMDtYLnJlbWFpbmluZ0V4cGlyYXRpb25UaW1lPWF9ZnVuY3Rpb24gWWgoYSxiKXt2YXIgYz1aO1o9ITA7dHJ5e3JldHVybiBhKGIpfWZpbmFsbHl7KFo9Yyl8fFd8fFNoKCl9fWZ1bmN0aW9uIFpoKGEsYil7aWYoWiYmIU1oKXtNaD0hMDt0cnl7cmV0dXJuIGEoYil9ZmluYWxseXtNaD0hMX19cmV0dXJuIGEoYil9ZnVuY3Rpb24gJGgoYSxiKXtXP0EoXCIxODdcIik6dm9pZCAwO3ZhciBjPVo7Wj0hMDt0cnl7cmV0dXJuIEVoKGEsYil9ZmluYWxseXtaPWMsU2goKX19ZnVuY3Rpb24gYWkoYSl7dmFyIGI9WjtaPSEwO3RyeXtFaChhKX1maW5hbGx5eyhaPWIpfHxXfHxVaCgxLCExLG51bGwpfX1cbmZ1bmN0aW9uIGJpKGEsYixjLGQsZSl7dmFyIGY9Yi5jdXJyZW50O2lmKGMpe2M9Yy5fcmVhY3RJbnRlcm5hbEZpYmVyO3ZhciBnO2I6ezI9PT1pZChjKSYmMj09PWMudGFnP3ZvaWQgMDpBKFwiMTcwXCIpO2ZvcihnPWM7MyE9PWcudGFnOyl7aWYobWYoZykpe2c9Zy5zdGF0ZU5vZGUuX19yZWFjdEludGVybmFsTWVtb2l6ZWRNZXJnZWRDaGlsZENvbnRleHQ7YnJlYWsgYn0oZz1nLnJldHVybik/dm9pZCAwOkEoXCIxNzFcIil9Zz1nLnN0YXRlTm9kZS5jb250ZXh0fWM9bWYoYyk/cmYoYyxnKTpnfWVsc2UgYz1oYTtudWxsPT09Yi5jb250ZXh0P2IuY29udGV4dD1jOmIucGVuZGluZ0NvbnRleHQ9YztiPWU7ZT1LZihkKTtlLnBheWxvYWQ9e2VsZW1lbnQ6YX07Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmKGUuY2FsbGJhY2s9Yik7TWYoZixlLGQpO2tnKGYsZCk7cmV0dXJuIGR9XG5mdW5jdGlvbiBjaShhKXt2YXIgYj1hLl9yZWFjdEludGVybmFsRmliZXI7dm9pZCAwPT09YiYmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBhLnJlbmRlcj9BKFwiMTg4XCIpOkEoXCIyNjhcIixPYmplY3Qua2V5cyhhKSkpO2E9bGQoYik7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9ZnVuY3Rpb24gZGkoYSxiLGMsZCl7dmFyIGU9Yi5jdXJyZW50LGY9aWcoKTtlPWpnKGYsZSk7cmV0dXJuIGJpKGEsYixjLGUsZCl9ZnVuY3Rpb24gZWkoYSl7YT1hLmN1cnJlbnQ7aWYoIWEuY2hpbGQpcmV0dXJuIG51bGw7c3dpdGNoKGEuY2hpbGQudGFnKXtjYXNlIDU6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlO2RlZmF1bHQ6cmV0dXJuIGEuY2hpbGQuc3RhdGVOb2RlfX1cbmZ1bmN0aW9uIGZpKGEpe3ZhciBiPWEuZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U7cmV0dXJuIEVmKHAoe30sYSx7ZmluZEhvc3RJbnN0YW5jZUJ5RmliZXI6ZnVuY3Rpb24oYSl7YT1sZChhKTtyZXR1cm4gbnVsbD09PWE/bnVsbDphLnN0YXRlTm9kZX0sZmluZEZpYmVyQnlIb3N0SW5zdGFuY2U6ZnVuY3Rpb24oYSl7cmV0dXJuIGI/YihhKTpudWxsfX0pKX1cbnZhciBnaT17dXBkYXRlQ29udGFpbmVyQXRFeHBpcmF0aW9uVGltZTpiaSxjcmVhdGVDb250YWluZXI6ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBBZihhLGIsYyl9LHVwZGF0ZUNvbnRhaW5lcjpkaSxmbHVzaFJvb3Q6V2gscmVxdWVzdFdvcms6d2gsY29tcHV0ZVVuaXF1ZUFzeW5jRXhwaXJhdGlvbjp5aCxiYXRjaGVkVXBkYXRlczpZaCx1bmJhdGNoZWRVcGRhdGVzOlpoLGRlZmVycmVkVXBkYXRlczpEaCxzeW5jVXBkYXRlczpFaCxpbnRlcmFjdGl2ZVVwZGF0ZXM6ZnVuY3Rpb24oYSxiLGMpe2lmKHpoKXJldHVybiBhKGIsYyk7Wnx8V3x8MD09PUFofHwoVWgoQWgsITEsbnVsbCksQWg9MCk7dmFyIGQ9emgsZT1aO1o9emg9ITA7dHJ5e3JldHVybiBhKGIsYyl9ZmluYWxseXt6aD1kLChaPWUpfHxXfHxTaCgpfX0sZmx1c2hJbnRlcmFjdGl2ZVVwZGF0ZXM6ZnVuY3Rpb24oKXtXfHwwPT09QWh8fChVaChBaCwhMSxudWxsKSxBaD0wKX0sZmx1c2hDb250cm9sbGVkOmFpLGZsdXNoU3luYzokaCxcbmdldFB1YmxpY1Jvb3RJbnN0YW5jZTplaSxmaW5kSG9zdEluc3RhbmNlOmNpLGZpbmRIb3N0SW5zdGFuY2VXaXRoTm9Qb3J0YWxzOmZ1bmN0aW9uKGEpe2E9bWQoYSk7cmV0dXJuIG51bGw9PT1hP251bGw6YS5zdGF0ZU5vZGV9LGluamVjdEludG9EZXZUb29sczpmaX07ZnVuY3Rpb24gaWkoYSxiLGMpe3ZhciBkPTM8YXJndW1lbnRzLmxlbmd0aCYmdm9pZCAwIT09YXJndW1lbnRzWzNdP2FyZ3VtZW50c1szXTpudWxsO3JldHVybnskJHR5cGVvZjpnYyxrZXk6bnVsbD09ZD9udWxsOlwiXCIrZCxjaGlsZHJlbjphLGNvbnRhaW5lckluZm86YixpbXBsZW1lbnRhdGlvbjpjfX1LYi5pbmplY3RGaWJlckNvbnRyb2xsZWRIb3N0Q29tcG9uZW50KFdlKTtcbmZ1bmN0aW9uIGppKGEpe3RoaXMuX2V4cGlyYXRpb25UaW1lPXloKCk7dGhpcy5fcm9vdD1hO3RoaXMuX2NhbGxiYWNrcz10aGlzLl9uZXh0PW51bGw7dGhpcy5faGFzQ2hpbGRyZW49dGhpcy5fZGlkQ29tcGxldGU9ITE7dGhpcy5fY2hpbGRyZW49bnVsbDt0aGlzLl9kZWZlcj0hMH1qaS5wcm90b3R5cGUucmVuZGVyPWZ1bmN0aW9uKGEpe3RoaXMuX2RlZmVyP3ZvaWQgMDpBKFwiMjUwXCIpO3RoaXMuX2hhc0NoaWxkcmVuPSEwO3RoaXMuX2NoaWxkcmVuPWE7dmFyIGI9dGhpcy5fcm9vdC5faW50ZXJuYWxSb290LGM9dGhpcy5fZXhwaXJhdGlvblRpbWUsZD1uZXcga2k7YmkoYSxiLG51bGwsYyxkLl9vbkNvbW1pdCk7cmV0dXJuIGR9O2ppLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKGEpe2lmKHRoaXMuX2RpZENvbXBsZXRlKWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbmppLnByb3RvdHlwZS5jb21taXQ9ZnVuY3Rpb24oKXt2YXIgYT10aGlzLl9yb290Ll9pbnRlcm5hbFJvb3QsYj1hLmZpcnN0QmF0Y2g7dGhpcy5fZGVmZXImJm51bGwhPT1iP3ZvaWQgMDpBKFwiMjUxXCIpO2lmKHRoaXMuX2hhc0NoaWxkcmVuKXt2YXIgYz10aGlzLl9leHBpcmF0aW9uVGltZTtpZihiIT09dGhpcyl7dGhpcy5faGFzQ2hpbGRyZW4mJihjPXRoaXMuX2V4cGlyYXRpb25UaW1lPWIuX2V4cGlyYXRpb25UaW1lLHRoaXMucmVuZGVyKHRoaXMuX2NoaWxkcmVuKSk7Zm9yKHZhciBkPW51bGwsZT1iO2UhPT10aGlzOylkPWUsZT1lLl9uZXh0O251bGw9PT1kP0EoXCIyNTFcIik6dm9pZCAwO2QuX25leHQ9ZS5fbmV4dDt0aGlzLl9uZXh0PWI7YS5maXJzdEJhdGNoPXRoaXN9dGhpcy5fZGVmZXI9ITE7V2goYSxjKTtiPXRoaXMuX25leHQ7dGhpcy5fbmV4dD1udWxsO2I9YS5maXJzdEJhdGNoPWI7bnVsbCE9PWImJmIuX2hhc0NoaWxkcmVuJiZiLnJlbmRlcihiLl9jaGlsZHJlbil9ZWxzZSB0aGlzLl9uZXh0PVxubnVsbCx0aGlzLl9kZWZlcj0hMX07amkucHJvdG90eXBlLl9vbkNvbXBsZXRlPWZ1bmN0aW9uKCl7aWYoIXRoaXMuX2RpZENvbXBsZXRlKXt0aGlzLl9kaWRDb21wbGV0ZT0hMDt2YXIgYT10aGlzLl9jYWxsYmFja3M7aWYobnVsbCE9PWEpZm9yKHZhciBiPTA7YjxhLmxlbmd0aDtiKyspKDAsYVtiXSkoKX19O2Z1bmN0aW9uIGtpKCl7dGhpcy5fY2FsbGJhY2tzPW51bGw7dGhpcy5fZGlkQ29tbWl0PSExO3RoaXMuX29uQ29tbWl0PXRoaXMuX29uQ29tbWl0LmJpbmQodGhpcyl9a2kucHJvdG90eXBlLnRoZW49ZnVuY3Rpb24oYSl7aWYodGhpcy5fZGlkQ29tbWl0KWEoKTtlbHNle3ZhciBiPXRoaXMuX2NhbGxiYWNrcztudWxsPT09YiYmKGI9dGhpcy5fY2FsbGJhY2tzPVtdKTtiLnB1c2goYSl9fTtcbmtpLnByb3RvdHlwZS5fb25Db21taXQ9ZnVuY3Rpb24oKXtpZighdGhpcy5fZGlkQ29tbWl0KXt0aGlzLl9kaWRDb21taXQ9ITA7dmFyIGE9dGhpcy5fY2FsbGJhY2tzO2lmKG51bGwhPT1hKWZvcih2YXIgYj0wO2I8YS5sZW5ndGg7YisrKXt2YXIgYz1hW2JdO1wiZnVuY3Rpb25cIiE9PXR5cGVvZiBjP0EoXCIxOTFcIixjKTp2b2lkIDA7YygpfX19O2Z1bmN0aW9uIGxpKGEsYixjKXt0aGlzLl9pbnRlcm5hbFJvb3Q9QWYoYSxiLGMpfWxpLnByb3RvdHlwZS5yZW5kZXI9ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1uZXcga2k7Yj12b2lkIDA9PT1iP251bGw6YjtudWxsIT09YiYmZC50aGVuKGIpO2RpKGEsYyxudWxsLGQuX29uQ29tbWl0KTtyZXR1cm4gZH07XG5saS5wcm90b3R5cGUudW5tb3VudD1mdW5jdGlvbihhKXt2YXIgYj10aGlzLl9pbnRlcm5hbFJvb3QsYz1uZXcga2k7YT12b2lkIDA9PT1hP251bGw6YTtudWxsIT09YSYmYy50aGVuKGEpO2RpKG51bGwsYixudWxsLGMuX29uQ29tbWl0KTtyZXR1cm4gY307bGkucHJvdG90eXBlLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcj1mdW5jdGlvbihhLGIsYyl7dmFyIGQ9dGhpcy5faW50ZXJuYWxSb290LGU9bmV3IGtpO2M9dm9pZCAwPT09Yz9udWxsOmM7bnVsbCE9PWMmJmUudGhlbihjKTtkaShiLGQsYSxlLl9vbkNvbW1pdCk7cmV0dXJuIGV9O1xubGkucHJvdG90eXBlLmNyZWF0ZUJhdGNoPWZ1bmN0aW9uKCl7dmFyIGE9bmV3IGppKHRoaXMpLGI9YS5fZXhwaXJhdGlvblRpbWUsYz10aGlzLl9pbnRlcm5hbFJvb3QsZD1jLmZpcnN0QmF0Y2g7aWYobnVsbD09PWQpYy5maXJzdEJhdGNoPWEsYS5fbmV4dD1udWxsO2Vsc2V7Zm9yKGM9bnVsbDtudWxsIT09ZCYmZC5fZXhwaXJhdGlvblRpbWU8PWI7KWM9ZCxkPWQuX25leHQ7YS5fbmV4dD1kO251bGwhPT1jJiYoYy5fbmV4dD1hKX1yZXR1cm4gYX07ZnVuY3Rpb24gbWkoYSl7cmV0dXJuISghYXx8MSE9PWEubm9kZVR5cGUmJjkhPT1hLm5vZGVUeXBlJiYxMSE9PWEubm9kZVR5cGUmJig4IT09YS5ub2RlVHlwZXx8XCIgcmVhY3QtbW91bnQtcG9pbnQtdW5zdGFibGUgXCIhPT1hLm5vZGVWYWx1ZSkpfVNiPWdpLmJhdGNoZWRVcGRhdGVzO1RiPWdpLmludGVyYWN0aXZlVXBkYXRlcztVYj1naS5mbHVzaEludGVyYWN0aXZlVXBkYXRlcztcbmZ1bmN0aW9uIG5pKGEsYil7Ynx8KGI9YT85PT09YS5ub2RlVHlwZT9hLmRvY3VtZW50RWxlbWVudDphLmZpcnN0Q2hpbGQ6bnVsbCxiPSEoIWJ8fDEhPT1iLm5vZGVUeXBlfHwhYi5oYXNBdHRyaWJ1dGUoXCJkYXRhLXJlYWN0cm9vdFwiKSkpO2lmKCFiKWZvcih2YXIgYztjPWEubGFzdENoaWxkOylhLnJlbW92ZUNoaWxkKGMpO3JldHVybiBuZXcgbGkoYSwhMSxiKX1cbmZ1bmN0aW9uIG9pKGEsYixjLGQsZSl7bWkoYyk/dm9pZCAwOkEoXCIyMDBcIik7dmFyIGY9Yy5fcmVhY3RSb290Q29udGFpbmVyO2lmKGYpe2lmKFwiZnVuY3Rpb25cIj09PXR5cGVvZiBlKXt2YXIgZz1lO2U9ZnVuY3Rpb24oKXt2YXIgYT1laShmLl9pbnRlcm5hbFJvb3QpO2cuY2FsbChhKX19bnVsbCE9YT9mLmxlZ2FjeV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcihhLGIsZSk6Zi5yZW5kZXIoYixlKX1lbHNle2Y9Yy5fcmVhY3RSb290Q29udGFpbmVyPW5pKGMsZCk7aWYoXCJmdW5jdGlvblwiPT09dHlwZW9mIGUpe3ZhciBoPWU7ZT1mdW5jdGlvbigpe3ZhciBhPWVpKGYuX2ludGVybmFsUm9vdCk7aC5jYWxsKGEpfX1aaChmdW5jdGlvbigpe251bGwhPWE/Zi5sZWdhY3lfcmVuZGVyU3VidHJlZUludG9Db250YWluZXIoYSxiLGUpOmYucmVuZGVyKGIsZSl9KX1yZXR1cm4gZWkoZi5faW50ZXJuYWxSb290KX1cbmZ1bmN0aW9uIHBpKGEsYil7dmFyIGM9Mjxhcmd1bWVudHMubGVuZ3RoJiZ2b2lkIDAhPT1hcmd1bWVudHNbMl0/YXJndW1lbnRzWzJdOm51bGw7bWkoYik/dm9pZCAwOkEoXCIyMDBcIik7cmV0dXJuIGlpKGEsYixudWxsLGMpfVxudmFyIHFpPXtjcmVhdGVQb3J0YWw6cGksZmluZERPTU5vZGU6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/bnVsbDoxPT09YS5ub2RlVHlwZT9hOmNpKGEpfSxoeWRyYXRlOmZ1bmN0aW9uKGEsYixjKXtyZXR1cm4gb2kobnVsbCxhLGIsITAsYyl9LHJlbmRlcjpmdW5jdGlvbihhLGIsYyl7cmV0dXJuIG9pKG51bGwsYSxiLCExLGMpfSx1bnN0YWJsZV9yZW5kZXJTdWJ0cmVlSW50b0NvbnRhaW5lcjpmdW5jdGlvbihhLGIsYyxkKXtudWxsPT1hfHx2b2lkIDA9PT1hLl9yZWFjdEludGVybmFsRmliZXI/QShcIjM4XCIpOnZvaWQgMDtyZXR1cm4gb2koYSxiLGMsITEsZCl9LHVubW91bnRDb21wb25lbnRBdE5vZGU6ZnVuY3Rpb24oYSl7bWkoYSk/dm9pZCAwOkEoXCI0MFwiKTtyZXR1cm4gYS5fcmVhY3RSb290Q29udGFpbmVyPyhaaChmdW5jdGlvbigpe29pKG51bGwsbnVsbCxhLCExLGZ1bmN0aW9uKCl7YS5fcmVhY3RSb290Q29udGFpbmVyPW51bGx9KX0pLCEwKTohMX0sdW5zdGFibGVfY3JlYXRlUG9ydGFsOmZ1bmN0aW9uKCl7cmV0dXJuIHBpLmFwcGx5KHZvaWQgMCxcbmFyZ3VtZW50cyl9LHVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzOlloLHVuc3RhYmxlX2RlZmVycmVkVXBkYXRlczpEaCxmbHVzaFN5bmM6JGgsdW5zdGFibGVfZmx1c2hDb250cm9sbGVkOmFpLF9fU0VDUkVUX0lOVEVSTkFMU19ET19OT1RfVVNFX09SX1lPVV9XSUxMX0JFX0ZJUkVEOntFdmVudFBsdWdpbkh1YjpLYSxFdmVudFBsdWdpblJlZ2lzdHJ5OnZhLEV2ZW50UHJvcGFnYXRvcnM6JGEsUmVhY3RDb250cm9sbGVkQ29tcG9uZW50OlJiLFJlYWN0RE9NQ29tcG9uZW50VHJlZTpRYSxSZWFjdERPTUV2ZW50TGlzdGVuZXI6TWR9LHVuc3RhYmxlX2NyZWF0ZVJvb3Q6ZnVuY3Rpb24oYSxiKXtyZXR1cm4gbmV3IGxpKGEsITAsbnVsbCE9YiYmITA9PT1iLmh5ZHJhdGUpfX07Zmkoe2ZpbmRGaWJlckJ5SG9zdEluc3RhbmNlOk5hLGJ1bmRsZVR5cGU6MCx2ZXJzaW9uOlwiMTYuNC4wXCIscmVuZGVyZXJQYWNrYWdlTmFtZTpcInJlYWN0LWRvbVwifSk7XG52YXIgdmk9e2RlZmF1bHQ6cWl9LHdpPXZpJiZxaXx8dmk7bW9kdWxlLmV4cG9ydHM9d2kuZGVmYXVsdD93aS5kZWZhdWx0OndpO1xuIiwiLyoqIEBsaWNlbnNlIFJlYWN0IHYxNi40LjBcbiAqIHJlYWN0LnByb2R1Y3Rpb24ubWluLmpzXG4gKlxuICogQ29weXJpZ2h0IChjKSAyMDEzLXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxuJ3VzZSBzdHJpY3QnO3ZhciBrPXJlcXVpcmUoXCJvYmplY3QtYXNzaWduXCIpLG49cmVxdWlyZShcImZianMvbGliL2ludmFyaWFudFwiKSxwPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eU9iamVjdFwiKSxxPXJlcXVpcmUoXCJmYmpzL2xpYi9lbXB0eUZ1bmN0aW9uXCIpLHI9XCJmdW5jdGlvblwiPT09dHlwZW9mIFN5bWJvbCYmU3ltYm9sLmZvcix0PXI/U3ltYm9sLmZvcihcInJlYWN0LmVsZW1lbnRcIik6NjAxMDMsdT1yP1N5bWJvbC5mb3IoXCJyZWFjdC5wb3J0YWxcIik6NjAxMDYsdj1yP1N5bWJvbC5mb3IoXCJyZWFjdC5mcmFnbWVudFwiKTo2MDEwNyx3PXI/U3ltYm9sLmZvcihcInJlYWN0LnN0cmljdF9tb2RlXCIpOjYwMTA4LHg9cj9TeW1ib2wuZm9yKFwicmVhY3QucHJvZmlsZXJcIik6NjAxMTQseT1yP1N5bWJvbC5mb3IoXCJyZWFjdC5wcm92aWRlclwiKTo2MDEwOSx6PXI/U3ltYm9sLmZvcihcInJlYWN0LmNvbnRleHRcIik6NjAxMTAsQT1yP1N5bWJvbC5mb3IoXCJyZWFjdC5hc3luY19tb2RlXCIpOjYwMTExLEI9XG5yP1N5bWJvbC5mb3IoXCJyZWFjdC5mb3J3YXJkX3JlZlwiKTo2MDExMjtyJiZTeW1ib2wuZm9yKFwicmVhY3QudGltZW91dFwiKTt2YXIgQz1cImZ1bmN0aW9uXCI9PT10eXBlb2YgU3ltYm9sJiZTeW1ib2wuaXRlcmF0b3I7ZnVuY3Rpb24gRChhKXtmb3IodmFyIGI9YXJndW1lbnRzLmxlbmd0aC0xLGU9XCJodHRwczovL3JlYWN0anMub3JnL2RvY3MvZXJyb3ItZGVjb2Rlci5odG1sP2ludmFyaWFudD1cIithLGM9MDtjPGI7YysrKWUrPVwiJmFyZ3NbXT1cIitlbmNvZGVVUklDb21wb25lbnQoYXJndW1lbnRzW2MrMV0pO24oITEsXCJNaW5pZmllZCBSZWFjdCBlcnJvciAjXCIrYStcIjsgdmlzaXQgJXMgZm9yIHRoZSBmdWxsIG1lc3NhZ2Ugb3IgdXNlIHRoZSBub24tbWluaWZpZWQgZGV2IGVudmlyb25tZW50IGZvciBmdWxsIGVycm9ycyBhbmQgYWRkaXRpb25hbCBoZWxwZnVsIHdhcm5pbmdzLiBcIixlKX1cbnZhciBFPXtpc01vdW50ZWQ6ZnVuY3Rpb24oKXtyZXR1cm4hMX0sZW5xdWV1ZUZvcmNlVXBkYXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlUmVwbGFjZVN0YXRlOmZ1bmN0aW9uKCl7fSxlbnF1ZXVlU2V0U3RhdGU6ZnVuY3Rpb24oKXt9fTtmdW5jdGlvbiBGKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPXA7dGhpcy51cGRhdGVyPWV8fEV9Ri5wcm90b3R5cGUuaXNSZWFjdENvbXBvbmVudD17fTtGLnByb3RvdHlwZS5zZXRTdGF0ZT1mdW5jdGlvbihhLGIpe1wib2JqZWN0XCIhPT10eXBlb2YgYSYmXCJmdW5jdGlvblwiIT09dHlwZW9mIGEmJm51bGwhPWE/RChcIjg1XCIpOnZvaWQgMDt0aGlzLnVwZGF0ZXIuZW5xdWV1ZVNldFN0YXRlKHRoaXMsYSxiLFwic2V0U3RhdGVcIil9O0YucHJvdG90eXBlLmZvcmNlVXBkYXRlPWZ1bmN0aW9uKGEpe3RoaXMudXBkYXRlci5lbnF1ZXVlRm9yY2VVcGRhdGUodGhpcyxhLFwiZm9yY2VVcGRhdGVcIil9O2Z1bmN0aW9uIEcoKXt9XG5HLnByb3RvdHlwZT1GLnByb3RvdHlwZTtmdW5jdGlvbiBIKGEsYixlKXt0aGlzLnByb3BzPWE7dGhpcy5jb250ZXh0PWI7dGhpcy5yZWZzPXA7dGhpcy51cGRhdGVyPWV8fEV9dmFyIEk9SC5wcm90b3R5cGU9bmV3IEc7SS5jb25zdHJ1Y3Rvcj1IO2soSSxGLnByb3RvdHlwZSk7SS5pc1B1cmVSZWFjdENvbXBvbmVudD0hMDt2YXIgSj17Y3VycmVudDpudWxsfSxLPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHksTD17a2V5OiEwLHJlZjohMCxfX3NlbGY6ITAsX19zb3VyY2U6ITB9O1xuZnVuY3Rpb24gTShhLGIsZSl7dmFyIGM9dm9pZCAwLGQ9e30sZz1udWxsLGg9bnVsbDtpZihudWxsIT1iKWZvcihjIGluIHZvaWQgMCE9PWIucmVmJiYoaD1iLnJlZiksdm9pZCAwIT09Yi5rZXkmJihnPVwiXCIrYi5rZXkpLGIpSy5jYWxsKGIsYykmJiFMLmhhc093blByb3BlcnR5KGMpJiYoZFtjXT1iW2NdKTt2YXIgZj1hcmd1bWVudHMubGVuZ3RoLTI7aWYoMT09PWYpZC5jaGlsZHJlbj1lO2Vsc2UgaWYoMTxmKXtmb3IodmFyIGw9QXJyYXkoZiksbT0wO208ZjttKyspbFttXT1hcmd1bWVudHNbbSsyXTtkLmNoaWxkcmVuPWx9aWYoYSYmYS5kZWZhdWx0UHJvcHMpZm9yKGMgaW4gZj1hLmRlZmF1bHRQcm9wcyxmKXZvaWQgMD09PWRbY10mJihkW2NdPWZbY10pO3JldHVybnskJHR5cGVvZjp0LHR5cGU6YSxrZXk6ZyxyZWY6aCxwcm9wczpkLF9vd25lcjpKLmN1cnJlbnR9fVxuZnVuY3Rpb24gTihhKXtyZXR1cm5cIm9iamVjdFwiPT09dHlwZW9mIGEmJm51bGwhPT1hJiZhLiQkdHlwZW9mPT09dH1mdW5jdGlvbiBlc2NhcGUoYSl7dmFyIGI9e1wiPVwiOlwiPTBcIixcIjpcIjpcIj0yXCJ9O3JldHVyblwiJFwiKyhcIlwiK2EpLnJlcGxhY2UoL1s9Ol0vZyxmdW5jdGlvbihhKXtyZXR1cm4gYlthXX0pfXZhciBPPS9cXC8rL2csUD1bXTtmdW5jdGlvbiBRKGEsYixlLGMpe2lmKFAubGVuZ3RoKXt2YXIgZD1QLnBvcCgpO2QucmVzdWx0PWE7ZC5rZXlQcmVmaXg9YjtkLmZ1bmM9ZTtkLmNvbnRleHQ9YztkLmNvdW50PTA7cmV0dXJuIGR9cmV0dXJue3Jlc3VsdDphLGtleVByZWZpeDpiLGZ1bmM6ZSxjb250ZXh0OmMsY291bnQ6MH19ZnVuY3Rpb24gUihhKXthLnJlc3VsdD1udWxsO2Eua2V5UHJlZml4PW51bGw7YS5mdW5jPW51bGw7YS5jb250ZXh0PW51bGw7YS5jb3VudD0wOzEwPlAubGVuZ3RoJiZQLnB1c2goYSl9XG5mdW5jdGlvbiBTKGEsYixlLGMpe3ZhciBkPXR5cGVvZiBhO2lmKFwidW5kZWZpbmVkXCI9PT1kfHxcImJvb2xlYW5cIj09PWQpYT1udWxsO3ZhciBnPSExO2lmKG51bGw9PT1hKWc9ITA7ZWxzZSBzd2l0Y2goZCl7Y2FzZSBcInN0cmluZ1wiOmNhc2UgXCJudW1iZXJcIjpnPSEwO2JyZWFrO2Nhc2UgXCJvYmplY3RcIjpzd2l0Y2goYS4kJHR5cGVvZil7Y2FzZSB0OmNhc2UgdTpnPSEwfX1pZihnKXJldHVybiBlKGMsYSxcIlwiPT09Yj9cIi5cIitUKGEsMCk6YiksMTtnPTA7Yj1cIlwiPT09Yj9cIi5cIjpiK1wiOlwiO2lmKEFycmF5LmlzQXJyYXkoYSkpZm9yKHZhciBoPTA7aDxhLmxlbmd0aDtoKyspe2Q9YVtoXTt2YXIgZj1iK1QoZCxoKTtnKz1TKGQsZixlLGMpfWVsc2UgaWYobnVsbD09PWF8fFwidW5kZWZpbmVkXCI9PT10eXBlb2YgYT9mPW51bGw6KGY9QyYmYVtDXXx8YVtcIkBAaXRlcmF0b3JcIl0sZj1cImZ1bmN0aW9uXCI9PT10eXBlb2YgZj9mOm51bGwpLFwiZnVuY3Rpb25cIj09PXR5cGVvZiBmKWZvcihhPWYuY2FsbChhKSxcbmg9MDshKGQ9YS5uZXh0KCkpLmRvbmU7KWQ9ZC52YWx1ZSxmPWIrVChkLGgrKyksZys9UyhkLGYsZSxjKTtlbHNlXCJvYmplY3RcIj09PWQmJihlPVwiXCIrYSxEKFwiMzFcIixcIltvYmplY3QgT2JqZWN0XVwiPT09ZT9cIm9iamVjdCB3aXRoIGtleXMge1wiK09iamVjdC5rZXlzKGEpLmpvaW4oXCIsIFwiKStcIn1cIjplLFwiXCIpKTtyZXR1cm4gZ31mdW5jdGlvbiBUKGEsYil7cmV0dXJuXCJvYmplY3RcIj09PXR5cGVvZiBhJiZudWxsIT09YSYmbnVsbCE9YS5rZXk/ZXNjYXBlKGEua2V5KTpiLnRvU3RyaW5nKDM2KX1mdW5jdGlvbiBVKGEsYil7YS5mdW5jLmNhbGwoYS5jb250ZXh0LGIsYS5jb3VudCsrKX1cbmZ1bmN0aW9uIFYoYSxiLGUpe3ZhciBjPWEucmVzdWx0LGQ9YS5rZXlQcmVmaXg7YT1hLmZ1bmMuY2FsbChhLmNvbnRleHQsYixhLmNvdW50KyspO0FycmF5LmlzQXJyYXkoYSk/VyhhLGMsZSxxLnRoYXRSZXR1cm5zQXJndW1lbnQpOm51bGwhPWEmJihOKGEpJiYoYj1kKyghYS5rZXl8fGImJmIua2V5PT09YS5rZXk/XCJcIjooXCJcIithLmtleSkucmVwbGFjZShPLFwiJCYvXCIpK1wiL1wiKStlLGE9eyQkdHlwZW9mOnQsdHlwZTphLnR5cGUsa2V5OmIscmVmOmEucmVmLHByb3BzOmEucHJvcHMsX293bmVyOmEuX293bmVyfSksYy5wdXNoKGEpKX1mdW5jdGlvbiBXKGEsYixlLGMsZCl7dmFyIGc9XCJcIjtudWxsIT1lJiYoZz0oXCJcIitlKS5yZXBsYWNlKE8sXCIkJi9cIikrXCIvXCIpO2I9UShiLGcsYyxkKTtudWxsPT1hfHxTKGEsXCJcIixWLGIpO1IoYil9XG52YXIgWD17Q2hpbGRyZW46e21hcDpmdW5jdGlvbihhLGIsZSl7aWYobnVsbD09YSlyZXR1cm4gYTt2YXIgYz1bXTtXKGEsYyxudWxsLGIsZSk7cmV0dXJuIGN9LGZvckVhY2g6ZnVuY3Rpb24oYSxiLGUpe2lmKG51bGw9PWEpcmV0dXJuIGE7Yj1RKG51bGwsbnVsbCxiLGUpO251bGw9PWF8fFMoYSxcIlwiLFUsYik7UihiKX0sY291bnQ6ZnVuY3Rpb24oYSl7cmV0dXJuIG51bGw9PWE/MDpTKGEsXCJcIixxLnRoYXRSZXR1cm5zTnVsbCxudWxsKX0sdG9BcnJheTpmdW5jdGlvbihhKXt2YXIgYj1bXTtXKGEsYixudWxsLHEudGhhdFJldHVybnNBcmd1bWVudCk7cmV0dXJuIGJ9LG9ubHk6ZnVuY3Rpb24oYSl7TihhKT92b2lkIDA6RChcIjE0M1wiKTtyZXR1cm4gYX19LGNyZWF0ZVJlZjpmdW5jdGlvbigpe3JldHVybntjdXJyZW50Om51bGx9fSxDb21wb25lbnQ6RixQdXJlQ29tcG9uZW50OkgsY3JlYXRlQ29udGV4dDpmdW5jdGlvbihhLGIpe3ZvaWQgMD09PWImJihiPW51bGwpO2E9eyQkdHlwZW9mOnosXG5fY2FsY3VsYXRlQ2hhbmdlZEJpdHM6YixfZGVmYXVsdFZhbHVlOmEsX2N1cnJlbnRWYWx1ZTphLF9jdXJyZW50VmFsdWUyOmEsX2NoYW5nZWRCaXRzOjAsX2NoYW5nZWRCaXRzMjowLFByb3ZpZGVyOm51bGwsQ29uc3VtZXI6bnVsbH07YS5Qcm92aWRlcj17JCR0eXBlb2Y6eSxfY29udGV4dDphfTtyZXR1cm4gYS5Db25zdW1lcj1hfSxmb3J3YXJkUmVmOmZ1bmN0aW9uKGEpe3JldHVybnskJHR5cGVvZjpCLHJlbmRlcjphfX0sRnJhZ21lbnQ6dixTdHJpY3RNb2RlOncsdW5zdGFibGVfQXN5bmNNb2RlOkEsdW5zdGFibGVfUHJvZmlsZXI6eCxjcmVhdGVFbGVtZW50Ok0sY2xvbmVFbGVtZW50OmZ1bmN0aW9uKGEsYixlKXtudWxsPT09YXx8dm9pZCAwPT09YT9EKFwiMjY3XCIsYSk6dm9pZCAwO3ZhciBjPXZvaWQgMCxkPWsoe30sYS5wcm9wcyksZz1hLmtleSxoPWEucmVmLGY9YS5fb3duZXI7aWYobnVsbCE9Yil7dm9pZCAwIT09Yi5yZWYmJihoPWIucmVmLGY9Si5jdXJyZW50KTt2b2lkIDAhPT1cbmIua2V5JiYoZz1cIlwiK2Iua2V5KTt2YXIgbD12b2lkIDA7YS50eXBlJiZhLnR5cGUuZGVmYXVsdFByb3BzJiYobD1hLnR5cGUuZGVmYXVsdFByb3BzKTtmb3IoYyBpbiBiKUsuY2FsbChiLGMpJiYhTC5oYXNPd25Qcm9wZXJ0eShjKSYmKGRbY109dm9pZCAwPT09YltjXSYmdm9pZCAwIT09bD9sW2NdOmJbY10pfWM9YXJndW1lbnRzLmxlbmd0aC0yO2lmKDE9PT1jKWQuY2hpbGRyZW49ZTtlbHNlIGlmKDE8Yyl7bD1BcnJheShjKTtmb3IodmFyIG09MDttPGM7bSsrKWxbbV09YXJndW1lbnRzW20rMl07ZC5jaGlsZHJlbj1sfXJldHVybnskJHR5cGVvZjp0LHR5cGU6YS50eXBlLGtleTpnLHJlZjpoLHByb3BzOmQsX293bmVyOmZ9fSxjcmVhdGVGYWN0b3J5OmZ1bmN0aW9uKGEpe3ZhciBiPU0uYmluZChudWxsLGEpO2IudHlwZT1hO3JldHVybiBifSxpc1ZhbGlkRWxlbWVudDpOLHZlcnNpb246XCIxNi40LjBcIixfX1NFQ1JFVF9JTlRFUk5BTFNfRE9fTk9UX1VTRV9PUl9ZT1VfV0lMTF9CRV9GSVJFRDp7UmVhY3RDdXJyZW50T3duZXI6SixcbmFzc2lnbjprfX0sWT17ZGVmYXVsdDpYfSxaPVkmJlh8fFk7bW9kdWxlLmV4cG9ydHM9Wi5kZWZhdWx0P1ouZGVmYXVsdDpaO1xuIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHtyZW5kZXJ9IGZyb20gJ3JlYWN0LWRvbSdcbmltcG9ydCB7Y3JlYXRlU3RvcmUsY29tYmluZVJlZHVjZXJzfSBmcm9tICdyZWR1eCdcbmltcG9ydCB7dG9kbyxwb3B1cH0gZnJvbSAnLi9yZWR1eC9yZWR1Y2VycydcbmltcG9ydCBUb2RvQXBwIGZyb20gJy4vVG9kb0FwcCdcbmltcG9ydCBBcHAgZnJvbSAnLi9BcHAnXG5pbXBvcnQge1Byb3ZpZGVyLGNvbm5lY3R9IGZyb20gJ3JlYWN0LXJlZHV4J1xuaW1wb3J0IHthZGRUb2RvfSBmcm9tICcuL3JlZHV4L2FjdGlvbnMnXG5cbmltcG9ydCAnbm9ybWFsaXplLmNzcydcblxud2luZG93LlJlYWN0ID0gUmVhY3Q7XG5cbkRhdGUucHJvdG90eXBlLkZvcm1hdCA9IGZ1bmN0aW9uIChmbXQpIHsgLy9hdXRob3I6IG1laXp6IFxuICAgIHZhciBvID0ge1xuICAgICAgICBcIk0rXCI6IHRoaXMuZ2V0TW9udGgoKSArIDEsIC8v5pyI5Lu9IFxuICAgICAgICBcImQrXCI6IHRoaXMuZ2V0RGF0ZSgpLCAvL+aXpSBcbiAgICAgICAgXCJoK1wiOiB0aGlzLmdldEhvdXJzKCksIC8v5bCP5pe2IFxuICAgICAgICBcIm0rXCI6IHRoaXMuZ2V0TWludXRlcygpLCAvL+WIhiBcbiAgICAgICAgXCJzK1wiOiB0aGlzLmdldFNlY29uZHMoKSwgLy/np5IgXG4gICAgICAgIFwicStcIjogTWF0aC5mbG9vcigodGhpcy5nZXRNb250aCgpICsgMykgLyAzKSwgLy/lraPluqYgXG4gICAgICAgIFwiU1wiOiB0aGlzLmdldE1pbGxpc2Vjb25kcygpIC8v5q+r56eSIFxuICAgIH07XG4gICAgaWYgKC8oeSspLy50ZXN0KGZtdCkpIGZtdCA9IGZtdC5yZXBsYWNlKFJlZ0V4cC4kMSwgKHRoaXMuZ2V0RnVsbFllYXIoKSArIFwiXCIpLnN1YnN0cig0IC0gUmVnRXhwLiQxLmxlbmd0aCkpO1xuICAgIGZvciAodmFyIGsgaW4gbylcbiAgICBpZiAobmV3IFJlZ0V4cChcIihcIiArIGsgKyBcIilcIikudGVzdChmbXQpKSBmbXQgPSBmbXQucmVwbGFjZShSZWdFeHAuJDEsIChSZWdFeHAuJDEubGVuZ3RoID09IDEpID8gKG9ba10pIDogKChcIjAwXCIgKyBvW2tdKS5zdWJzdHIoKFwiXCIgKyBvW2tdKS5sZW5ndGgpKSk7XG4gICAgcmV0dXJuIGZtdDtcbn1cblxubGV0IGluaXRpYWxTdGF0ZSA9IHtcbiAgICB0b2RvOltdLFxuICAgIHBvcHVwOmZhbHNlXG59XG5mb3IobGV0IGk9MDtpPDEwO2krKyl7XG4gICAgaW5pdGlhbFN0YXRlLnRvZG8ucHVzaCh7XG4gICAgICAgIHRpdGxlOlwidG9kbyBcIitpLFxuICAgICAgICBkYXRhOm5ldyBEYXRlKCkuRm9ybWF0KFwieXl5eS1NTS1kZFwiKVxuICAgIH0pXG59XG5cblxuY29uc3Qgc3RvcmUgPSBjcmVhdGVTdG9yZShcbiAgICBjb21iaW5lUmVkdWNlcnMoe3RvZG8sIHBvcHVwfSksXG4gICAgaW5pdGlhbFN0YXRlXG4pXG5cblxuXG5cbi8qY29uc29sZS5sb2coc3RvcmUuZ2V0U3RhdGUoKSlcblxuc3RvcmUuZGlzcGF0Y2goYWRkVG9kbyhcImp1bG9uZ3dhaXN1aVwiKSlcbmNvbnNvbGUubG9nKHN0b3JlLmdldFN0YXRlKCkpKi9cblxucmVuZGVyKFxuICAgIDxQcm92aWRlciBzdG9yZT17c3RvcmV9PlxuICAgIDxBcHAgLz5cbiAgICBcbiAgICA8L1Byb3ZpZGVyPixcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYXBwJylcbikiLCIvKiogRGV0ZWN0IGZyZWUgdmFyaWFibGUgYGdsb2JhbGAgZnJvbSBOb2RlLmpzLiAqL1xudmFyIGZyZWVHbG9iYWwgPSB0eXBlb2YgZ2xvYmFsID09ICdvYmplY3QnICYmIGdsb2JhbCAmJiBnbG9iYWwuT2JqZWN0ID09PSBPYmplY3QgJiYgZ2xvYmFsO1xuXG5leHBvcnQgZGVmYXVsdCBmcmVlR2xvYmFsO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==